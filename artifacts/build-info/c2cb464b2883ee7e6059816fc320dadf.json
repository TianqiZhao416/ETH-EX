{
	"id": "c2cb464b2883ee7e6059816fc320dadf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenCC.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n//Daniel Zhao (fmd3ed)\n\n// This file is part of the http://github.com/aaronbloomfield/ccc repository,\n// and is released under the GPL 3.0 license.\n\npragma solidity ^0.8.24;\n\nimport \"./ITokenCC.sol\";\nimport \"./ERC20.sol\";\n\ncontract TokenCC is ITokenCC, ERC20 {\n    constructor() ERC20(\"DingleMyJingle(TM)\", \"DMJ\") {\n        _mint(msg.sender, 1000 * 10**decimals());\n    }\n\n    function decimals() public pure override(ERC20 ,IERC20Metadata) returns (uint8){\n        return 8;\n    }\n\n    function requestFunds() external override{\n        revert();\n    }\n\n    function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId\n            || interfaceId == type(IERC20).interfaceId\n            || interfaceId == type(IERC20Metadata).interfaceId\n            || interfaceId == type(ITokenCC).interfaceId;\n    }\n}"
			},
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./IERC20Metadata.sol\";\nimport {Context} from \"./Context.sol\";\nimport {IERC20Errors} from \"./draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"ITokenCC.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n// This file is part of the http://github.com/aaronbloomfield/ccc repository,\n// and is released under the GPL 3.0 license.\n\npragma solidity ^0.8.24;\n\nimport \"./IERC165.sol\";\nimport \"./IERC20Metadata.sol\";\n\ninterface ITokenCC is IERC20Metadata, IERC165 {\n\n    // You'll need a constructor, which should call the ERC20 constructor\n    // and _mint().  This sets the name and symbol, so you don't have to\n    // define those methods (or public variables).\n\n    // You have to implement the decimals() function from the IERC20Metadata\n    // interface.  Because of some peculiarities of Solidity inheritance, you\n    // have to implement these as actual functions, not public variables. And\n    // it has to use the multi-override version of the `override` keyword, as\n    // described in the slides (solidity.html#/multioverride) and the\n    // homework description.\n\n    // We will need this function in a future assignment (Arbitrage Trading),\n    // which is why it is in this interface. For now, it should have a single\n    // line: `revert();`.  You can make your implementation `pure` as well\n    // (the compiler will warn you about that).\n    function requestFunds() external;\n\n    // You also need to implement supportsInterface(), which is required by\n    // the IERC165 interface.  You support four interfaces!\n\n    // The other methods needed by the IERC20 interface are already\n    // implemented for you in the ERC20.sol contract.\n\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ERC20.sol\":{\"keccak256\":\"0xf37aae97663c8da743b4620730f24a533cfb7b3688f3f9aecec5343c7d3864d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97a9fe76e2eb51e21689d19e90525c9cd8eb0a961cbf344fa5fca9fbe2635872\",\"dweb:/ipfs/QmX8GC7siJQ22E7vEmD584MYfeAtSsaj3Y1g94ssjJmyoz\"]},\"IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xca4984fc531528047614e3e13820702a7719ed5221c8362d5b83207a1624d313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bcd4ff43608255d66dc5536e225ecfca21a7d0b243e8eba6c7ac083e8b1c117\",\"dweb:/ipfs/Qmag9KhKnWVQQhJhXTRMKKox7GXsyUT32F7gN5VbiSZzTn\"]},\"draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 52,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 58,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 60,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 64,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xca4984fc531528047614e3e13820702a7719ed5221c8362d5b83207a1624d313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bcd4ff43608255d66dc5536e225ecfca21a7d0b243e8eba6c7ac083e8b1c117\",\"dweb:/ipfs/Qmag9KhKnWVQQhJhXTRMKKox7GXsyUT32F7gN5VbiSZzTn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ITokenCC.sol": {
				"ITokenCC": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"requestFunds()": "b026ba57",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ITokenCC.sol\":\"ITokenCC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xca4984fc531528047614e3e13820702a7719ed5221c8362d5b83207a1624d313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bcd4ff43608255d66dc5536e225ecfca21a7d0b243e8eba6c7ac083e8b1c117\",\"dweb:/ipfs/Qmag9KhKnWVQQhJhXTRMKKox7GXsyUT32F7gN5VbiSZzTn\"]},\"ITokenCC.sol\":{\"keccak256\":\"0xfaae0b8e2a4166fb92a7610e6d3dd73de8f68713c11df37afa87bc6eb539c5bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1cca9a4eb7f4c83b81c066a11914949da152ba05172caf45fc174dc2e1b66ff2\",\"dweb:/ipfs/QmUCeiTjkKbDbB1LuErjuuv5TqYXHoAvJX1F8BDrj5M7qF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenCC.sol": {
				"TokenCC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenCC.sol\":269:929  contract TokenCC is ITokenCC, ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"TokenCC.sol\":311:417  constructor() ERC20(\"DingleMyJingle(TM)\", \"DMJ\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ERC20.sol\":1565:1678  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  0x44696e676c654d794a696e676c6528544d290000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x444d4a0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"ERC20.sol\":1639:1644  name_ */\n  dup2\n    /* \"ERC20.sol\":1631:1636  _name */\n  0x03\n    /* \"ERC20.sol\":1631:1644  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"ERC20.sol\":1664:1671  symbol_ */\n  dup1\n    /* \"ERC20.sol\":1654:1661  _symbol */\n  0x04\n    /* \"ERC20.sol\":1654:1671  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"ERC20.sol\":1565:1678  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"TokenCC.sol\":370:410  _mint(msg.sender, 1000 * 10**decimals()) */\n  tag_9\n    /* \"TokenCC.sol\":376:386  msg.sender */\n  caller\n    /* \"TokenCC.sol\":399:409  decimals() */\n  tag_10\n    /* \"TokenCC.sol\":399:407  decimals */\n  shl(0x20, tag_11)\n    /* \"TokenCC.sol\":399:409  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"TokenCC.sol\":395:397  10 */\n  0x0a\n    /* \"TokenCC.sol\":395:409  10**decimals() */\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"TokenCC.sol\":388:392  1000 */\n  0x03e8\n    /* \"TokenCC.sol\":388:409  1000 * 10**decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"TokenCC.sol\":370:375  _mint */\n  shl(0x20, tag_16)\n    /* \"TokenCC.sol\":370:410  _mint(msg.sender, 1000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"TokenCC.sol\":269:929  contract TokenCC is ITokenCC, ERC20 {... */\n  jump(tag_17)\n    /* \"TokenCC.sol\":423:527  function decimals() public pure override(ERC20 ,IERC20Metadata) returns (uint8){... */\ntag_11:\n    /* \"TokenCC.sol\":496:501  uint8 */\n  0x00\n    /* \"TokenCC.sol\":519:520  8 */\n  0x08\n    /* \"TokenCC.sol\":512:520  return 8 */\n  swap1\n  pop\n    /* \"TokenCC.sol\":423:527  function decimals() public pure override(ERC20 ,IERC20Metadata) returns (uint8){... */\n  swap1\n  jump\t// out\n    /* \"ERC20.sol\":7422:7630  function _mint(address account, uint256 value) internal {... */\ntag_16:\n    /* \"ERC20.sol\":7511:7512  0 */\n  0x00\n    /* \"ERC20.sol\":7492:7513  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":7492:7499  account */\n  dup3\n    /* \"ERC20.sol\":7492:7513  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ERC20.sol\":7488:7579  if (account == address(0)) {... */\n  tag_20\n  jumpi\n    /* \"ERC20.sol\":7565:7566  0 */\n  0x00\n    /* \"ERC20.sol\":7536:7568  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"ERC20.sol\":7488:7579  if (account == address(0)) {... */\ntag_20:\n    /* \"ERC20.sol\":7588:7623  _update(address(0), account, value) */\n  tag_23\n    /* \"ERC20.sol\":7604:7605  0 */\n  0x00\n    /* \"ERC20.sol\":7608:7615  account */\n  dup4\n    /* \"ERC20.sol\":7617:7622  value */\n  dup4\n    /* \"ERC20.sol\":7588:7595  _update */\n  shl(0x20, tag_24)\n    /* \"ERC20.sol\":7588:7623  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"ERC20.sol\":7422:7630  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":5972:7079  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_24:\n    /* \"ERC20.sol\":6077:6078  0 */\n  0x00\n    /* \"ERC20.sol\":6061:6079  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":6061:6065  from */\n  dup4\n    /* \"ERC20.sol\":6061:6079  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ERC20.sol\":6057:6597  if (from == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"ERC20.sol\":6213:6218  value */\n  dup1\n    /* \"ERC20.sol\":6197:6209  _totalSupply */\n  0x02\n  0x00\n    /* \"ERC20.sol\":6197:6218  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":6057:6597  if (from == address(0)) {... */\n  jump(tag_29)\ntag_26:\n    /* \"ERC20.sol\":6249:6268  uint256 fromBalance */\n  0x00\n    /* \"ERC20.sol\":6271:6280  _balances */\n  dup1\n    /* \"ERC20.sol\":6271:6286  _balances[from] */\n  0x00\n    /* \"ERC20.sol\":6281:6285  from */\n  dup6\n    /* \"ERC20.sol\":6271:6286  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"ERC20.sol\":6249:6286  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"ERC20.sol\":6318:6323  value */\n  dup2\n    /* \"ERC20.sol\":6304:6315  fromBalance */\n  dup2\n    /* \"ERC20.sol\":6304:6323  fromBalance < value */\n  lt\n    /* \"ERC20.sol\":6300:6415  if (fromBalance < value) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"ERC20.sol\":6375:6379  from */\n  dup4\n    /* \"ERC20.sol\":6381:6392  fromBalance */\n  dup2\n    /* \"ERC20.sol\":6394:6399  value */\n  dup4\n    /* \"ERC20.sol\":6350:6400  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"ERC20.sol\":6300:6415  if (fromBalance < value) {... */\ntag_30:\n    /* \"ERC20.sol\":6567:6572  value */\n  dup2\n    /* \"ERC20.sol\":6553:6564  fromBalance */\n  dup2\n    /* \"ERC20.sol\":6553:6572  fromBalance - value */\n  sub\n    /* \"ERC20.sol\":6535:6544  _balances */\n  0x00\n    /* \"ERC20.sol\":6535:6550  _balances[from] */\n  dup1\n    /* \"ERC20.sol\":6545:6549  from */\n  dup7\n    /* \"ERC20.sol\":6535:6550  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"ERC20.sol\":6535:6572  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":6235:6597  {... */\n  pop\n    /* \"ERC20.sol\":6057:6597  if (from == address(0)) {... */\ntag_29:\n    /* \"ERC20.sol\":6625:6626  0 */\n  0x00\n    /* \"ERC20.sol\":6611:6627  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":6611:6613  to */\n  dup3\n    /* \"ERC20.sol\":6611:6627  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ERC20.sol\":6607:7032  if (to == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"ERC20.sol\":6790:6795  value */\n  dup1\n    /* \"ERC20.sol\":6774:6786  _totalSupply */\n  0x02\n  0x00\n    /* \"ERC20.sol\":6774:6795  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":6607:7032  if (to == address(0)) {... */\n  jump(tag_34)\ntag_33:\n    /* \"ERC20.sol\":7002:7007  value */\n  dup1\n    /* \"ERC20.sol\":6985:6994  _balances */\n  0x00\n    /* \"ERC20.sol\":6985:6998  _balances[to] */\n  dup1\n    /* \"ERC20.sol\":6995:6997  to */\n  dup5\n    /* \"ERC20.sol\":6985:6998  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"ERC20.sol\":6985:7007  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":6607:7032  if (to == address(0)) {... */\ntag_34:\n    /* \"ERC20.sol\":7062:7064  to */\n  dup2\n    /* \"ERC20.sol\":7047:7072  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":7056:7060  from */\n  dup4\n    /* \"ERC20.sol\":7047:7072  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"ERC20.sol\":7066:7071  value */\n  dup4\n    /* \"ERC20.sol\":7047:7072  Transfer(from, to, value) */\n  mload(0x40)\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20.sol\":5972:7079  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_37:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_38:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_39:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_40:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_71:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_73\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":714:798   */\ntag_72:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_41:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_42:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_43:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_44:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_78\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_43\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1429:1468   */\n  tag_79\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_45:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_46:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_47:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_83\n    /* \"#utility.yul\":1818:1852   */\n  tag_84\n    /* \"#utility.yul\":1827:1851   */\n  tag_85\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_45\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_48:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_49:\n    /* \"#utility.yul\":2056:2095   */\n  tag_88\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_47\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2117:2208   */\n  tag_89\n    /* \"#utility.yul\":2166:2207   */\n  tag_90\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_48\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_44\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_50:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_51:\n    /* \"#utility.yul\":2377:2409   */\n  tag_93\n  tag_50\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2418:2483   */\n  tag_94\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_49\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_52:\n    /* \"#utility.yul\":2555:2675   */\ntag_96:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_99\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_51\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_53:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_102\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_41\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2906:2935   */\n  tag_103\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_42\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_104:\n    /* \"#utility.yul\":3133:3213   */\n  tag_105\n    /* \"#utility.yul\":3189:3211   */\n  tag_106\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_42\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_52\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_101:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_54:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_55:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_109\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_54\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_56:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_111\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_55\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_113\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_37\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_115\n  tag_38\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4038:4094   */\ntag_114:\n    /* \"#utility.yul\":4118:4156   */\n  tag_116\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_40\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4203:4270   */\n  tag_117\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_53\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_120:\n    /* \"#utility.yul\":5144:5211   */\n  tag_121\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_56\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_118)\n    /* \"#utility.yul\":4365:4983   */\ntag_119:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_122\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_41\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_123:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_123)\ntag_125:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_127\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_55\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_126:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_118:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_57:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_58:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_59:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_131:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_135\n  tag_57\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5753:5803   */\ntag_134:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_136:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_137\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_58\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_131)\ntag_133:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_60:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_138)\n    /* \"#utility.yul\":6617:6657   */\ntag_139:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_140\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_138)\n    /* \"#utility.yul\":6666:6702   */\ntag_140:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_141)\n    /* \"#utility.yul\":6805:6832   */\ntag_142:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_138)\n    /* \"#utility.yul\":6841:7032   */\ntag_143:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_145\n  tag_57\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6870:6913   */\ntag_144:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_147\n  tag_57\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6964:7004   */\ntag_146:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_138)\n    /* \"#utility.yul\":6755:7032   */\ntag_141:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_150\n  tag_57\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7219:7259   */\ntag_149:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_138)\n    /* \"#utility.yul\":7041:7287   */\ntag_148:\n    /* \"#utility.yul\":7312:7354   */\n  tag_151\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_59\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_153\n  tag_57\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7364:7415   */\ntag_152:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_138:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7547   */\ntag_61:\n    /* \"#utility.yul\":7496:7503   */\n  0x00\n    /* \"#utility.yul\":7536:7540   */\n  0xff\n    /* \"#utility.yul\":7529:7534   */\n  dup3\n    /* \"#utility.yul\":7525:7541   */\n  and\n    /* \"#utility.yul\":7514:7541   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7547   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7553:7834   */\ntag_13:\n    /* \"#utility.yul\":7611:7616   */\n  0x00\n    /* \"#utility.yul\":7635:7658   */\n  tag_156\n    /* \"#utility.yul\":7653:7657   */\n  dup3\n    /* \"#utility.yul\":7635:7658   */\n  tag_45\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7627:7658   */\n  swap2\n  pop\n    /* \"#utility.yul\":7679:7704   */\n  tag_157\n    /* \"#utility.yul\":7695:7703   */\n  dup4\n    /* \"#utility.yul\":7679:7704   */\n  tag_61\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7667:7704   */\n  swap3\n  pop\n    /* \"#utility.yul\":7723:7827   */\n  tag_158\n    /* \"#utility.yul\":7760:7826   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7750:7758   */\n  dup5\n    /* \"#utility.yul\":7744:7748   */\n  dup5\n    /* \"#utility.yul\":7723:7827   */\n  tag_60\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7714:7827   */\n  swap1\n  pop\n    /* \"#utility.yul\":7553:7834   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7840:8250   */\ntag_15:\n    /* \"#utility.yul\":7880:7887   */\n  0x00\n    /* \"#utility.yul\":7903:7923   */\n  tag_160\n    /* \"#utility.yul\":7921:7922   */\n  dup3\n    /* \"#utility.yul\":7903:7923   */\n  tag_45\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7898:7923   */\n  swap2\n  pop\n    /* \"#utility.yul\":7937:7957   */\n  tag_161\n    /* \"#utility.yul\":7955:7956   */\n  dup4\n    /* \"#utility.yul\":7937:7957   */\n  tag_45\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7932:7957   */\n  swap3\n  pop\n    /* \"#utility.yul\":7992:7993   */\n  dup3\n    /* \"#utility.yul\":7989:7990   */\n  dup3\n    /* \"#utility.yul\":7985:7994   */\n  mul\n    /* \"#utility.yul\":8014:8044   */\n  tag_162\n    /* \"#utility.yul\":8032:8043   */\n  dup2\n    /* \"#utility.yul\":8014:8044   */\n  tag_45\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":8003:8044   */\n  swap2\n  pop\n    /* \"#utility.yul\":8193:8194   */\n  dup3\n    /* \"#utility.yul\":8184:8191   */\n  dup3\n    /* \"#utility.yul\":8180:8195   */\n  div\n    /* \"#utility.yul\":8177:8178   */\n  dup5\n    /* \"#utility.yul\":8174:8196   */\n  eq\n    /* \"#utility.yul\":8154:8155   */\n  dup4\n    /* \"#utility.yul\":8147:8156   */\n  iszero\n    /* \"#utility.yul\":8127:8210   */\n  or\n    /* \"#utility.yul\":8104:8243   */\n  tag_163\n  jumpi\n    /* \"#utility.yul\":8223:8241   */\n  tag_164\n  tag_57\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":8104:8243   */\ntag_163:\n    /* \"#utility.yul\":7888:8250   */\n  pop\n    /* \"#utility.yul\":7840:8250   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8256:8382   */\ntag_62:\n    /* \"#utility.yul\":8293:8300   */\n  0x00\n    /* \"#utility.yul\":8333:8375   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8326:8331   */\n  dup3\n    /* \"#utility.yul\":8322:8376   */\n  and\n    /* \"#utility.yul\":8311:8376   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8382   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8388:8484   */\ntag_63:\n    /* \"#utility.yul\":8425:8432   */\n  0x00\n    /* \"#utility.yul\":8454:8478   */\n  tag_167\n    /* \"#utility.yul\":8472:8477   */\n  dup3\n    /* \"#utility.yul\":8454:8478   */\n  tag_62\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8443:8478   */\n  swap1\n  pop\n    /* \"#utility.yul\":8388:8484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8490:8608   */\ntag_64:\n    /* \"#utility.yul\":8577:8601   */\n  tag_169\n    /* \"#utility.yul\":8595:8600   */\n  dup2\n    /* \"#utility.yul\":8577:8601   */\n  tag_63\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8572:8575   */\n  dup3\n    /* \"#utility.yul\":8565:8602   */\n  mstore\n    /* \"#utility.yul\":8490:8608   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8614:8836   */\ntag_22:\n    /* \"#utility.yul\":8707:8711   */\n  0x00\n    /* \"#utility.yul\":8745:8747   */\n  0x20\n    /* \"#utility.yul\":8734:8743   */\n  dup3\n    /* \"#utility.yul\":8730:8748   */\n  add\n    /* \"#utility.yul\":8722:8748   */\n  swap1\n  pop\n    /* \"#utility.yul\":8758:8829   */\n  tag_171\n    /* \"#utility.yul\":8826:8827   */\n  0x00\n    /* \"#utility.yul\":8815:8824   */\n  dup4\n    /* \"#utility.yul\":8811:8828   */\n  add\n    /* \"#utility.yul\":8802:8808   */\n  dup5\n    /* \"#utility.yul\":8758:8829   */\n  tag_64\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8614:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8842:9033   */\ntag_28:\n    /* \"#utility.yul\":8882:8885   */\n  0x00\n    /* \"#utility.yul\":8901:8921   */\n  tag_173\n    /* \"#utility.yul\":8919:8920   */\n  dup3\n    /* \"#utility.yul\":8901:8921   */\n  tag_45\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8896:8921   */\n  swap2\n  pop\n    /* \"#utility.yul\":8935:8955   */\n  tag_174\n    /* \"#utility.yul\":8953:8954   */\n  dup4\n    /* \"#utility.yul\":8935:8955   */\n  tag_45\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8930:8955   */\n  swap3\n  pop\n    /* \"#utility.yul\":8978:8979   */\n  dup3\n    /* \"#utility.yul\":8975:8976   */\n  dup3\n    /* \"#utility.yul\":8971:8980   */\n  add\n    /* \"#utility.yul\":8964:8980   */\n  swap1\n  pop\n    /* \"#utility.yul\":8999:9002   */\n  dup1\n    /* \"#utility.yul\":8996:8997   */\n  dup3\n    /* \"#utility.yul\":8993:9003   */\n  gt\n    /* \"#utility.yul\":8990:9026   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":9006:9024   */\n  tag_176\n  tag_57\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8990:9026   */\ntag_175:\n    /* \"#utility.yul\":8842:9033   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9039:9157   */\ntag_65:\n    /* \"#utility.yul\":9126:9150   */\n  tag_178\n    /* \"#utility.yul\":9144:9149   */\n  dup2\n    /* \"#utility.yul\":9126:9150   */\n  tag_45\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":9121:9124   */\n  dup3\n    /* \"#utility.yul\":9114:9151   */\n  mstore\n    /* \"#utility.yul\":9039:9157   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9163:9605   */\ntag_32:\n    /* \"#utility.yul\":9312:9316   */\n  0x00\n    /* \"#utility.yul\":9350:9352   */\n  0x60\n    /* \"#utility.yul\":9339:9348   */\n  dup3\n    /* \"#utility.yul\":9335:9353   */\n  add\n    /* \"#utility.yul\":9327:9353   */\n  swap1\n  pop\n    /* \"#utility.yul\":9363:9434   */\n  tag_180\n    /* \"#utility.yul\":9431:9432   */\n  0x00\n    /* \"#utility.yul\":9420:9429   */\n  dup4\n    /* \"#utility.yul\":9416:9433   */\n  add\n    /* \"#utility.yul\":9407:9413   */\n  dup7\n    /* \"#utility.yul\":9363:9434   */\n  tag_64\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":9444:9516   */\n  tag_181\n    /* \"#utility.yul\":9512:9514   */\n  0x20\n    /* \"#utility.yul\":9501:9510   */\n  dup4\n    /* \"#utility.yul\":9497:9515   */\n  add\n    /* \"#utility.yul\":9488:9494   */\n  dup6\n    /* \"#utility.yul\":9444:9516   */\n  tag_65\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9526:9598   */\n  tag_182\n    /* \"#utility.yul\":9594:9596   */\n  0x40\n    /* \"#utility.yul\":9583:9592   */\n  dup4\n    /* \"#utility.yul\":9579:9597   */\n  add\n    /* \"#utility.yul\":9570:9576   */\n  dup5\n    /* \"#utility.yul\":9526:9598   */\n  tag_65\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9163:9605   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9611:9833   */\ntag_36:\n    /* \"#utility.yul\":9704:9708   */\n  0x00\n    /* \"#utility.yul\":9742:9744   */\n  0x20\n    /* \"#utility.yul\":9731:9740   */\n  dup3\n    /* \"#utility.yul\":9727:9745   */\n  add\n    /* \"#utility.yul\":9719:9745   */\n  swap1\n  pop\n    /* \"#utility.yul\":9755:9826   */\n  tag_184\n    /* \"#utility.yul\":9823:9824   */\n  0x00\n    /* \"#utility.yul\":9812:9821   */\n  dup4\n    /* \"#utility.yul\":9808:9825   */\n  add\n    /* \"#utility.yul\":9799:9805   */\n  dup5\n    /* \"#utility.yul\":9755:9826   */\n  tag_65\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9611:9833   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"TokenCC.sol\":269:929  contract TokenCC is ITokenCC, ERC20 {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenCC.sol\":269:929  contract TokenCC is ITokenCC, ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb026ba57\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TokenCC.sol\":605:927  function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":1743:1832  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3962:4148  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2813:2910  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4740:4984  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenCC.sol\":423:527  function decimals() public pure override(ERC20 ,IERC20Metadata) returns (uint8){... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2968:3084  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":1945:2038  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3279:3457  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenCC.sol\":533:599  function requestFunds() external override{... */\n    tag_12:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"ERC20.sol\":3515:3655  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenCC.sol\":605:927  function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {... */\n    tag_18:\n        /* \"TokenCC.sol\":682:686  bool */\n      0x00\n        /* \"TokenCC.sol\":720:745  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"TokenCC.sol\":705:745  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"TokenCC.sol\":705:716  interfaceId */\n      dup3\n        /* \"TokenCC.sol\":705:745  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"TokenCC.sol\":705:800  interfaceId == type(IERC165).interfaceId... */\n      dup1\n      tag_63\n      jumpi\n      pop\n        /* \"TokenCC.sol\":776:800  type(IERC20).interfaceId */\n      0x36372b0700000000000000000000000000000000000000000000000000000000\n        /* \"TokenCC.sol\":761:800  interfaceId == type(IERC20).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"TokenCC.sol\":761:772  interfaceId */\n      dup3\n        /* \"TokenCC.sol\":761:800  interfaceId == type(IERC20).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"TokenCC.sol\":705:800  interfaceId == type(IERC165).interfaceId... */\n    tag_63:\n        /* \"TokenCC.sol\":705:863  interfaceId == type(IERC165).interfaceId... */\n      dup1\n      tag_64\n      jumpi\n      pop\n        /* \"TokenCC.sol\":831:863  type(IERC20Metadata).interfaceId */\n      0xa219a02500000000000000000000000000000000000000000000000000000000\n        /* \"TokenCC.sol\":816:863  interfaceId == type(IERC20Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"TokenCC.sol\":816:827  interfaceId */\n      dup3\n        /* \"TokenCC.sol\":816:863  interfaceId == type(IERC20Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"TokenCC.sol\":705:863  interfaceId == type(IERC165).interfaceId... */\n    tag_64:\n        /* \"TokenCC.sol\":705:920  interfaceId == type(IERC165).interfaceId... */\n      dup1\n      tag_65\n      jumpi\n      pop\n        /* \"TokenCC.sol\":894:920  type(ITokenCC).interfaceId */\n      0xb026ba5700000000000000000000000000000000000000000000000000000000\n        /* \"TokenCC.sol\":879:920  interfaceId == type(ITokenCC).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"TokenCC.sol\":879:890  interfaceId */\n      dup3\n        /* \"TokenCC.sol\":879:920  interfaceId == type(ITokenCC).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"TokenCC.sol\":705:920  interfaceId == type(IERC165).interfaceId... */\n    tag_65:\n        /* \"TokenCC.sol\":698:920  return interfaceId == type(IERC165).interfaceId... */\n      swap1\n      pop\n        /* \"TokenCC.sol\":605:927  function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1743:1832  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"ERC20.sol\":1788:1801  string memory */\n      0x60\n        /* \"ERC20.sol\":1820:1825  _name */\n      0x03\n        /* \"ERC20.sol\":1813:1825  return _name */\n      dup1\n      sload\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_68\n      jump\t// in\n    tag_69:\n      dup1\n      iszero\n      tag_70\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_71\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_70)\n    tag_71:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_72:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_72\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":1743:1832  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3962:4148  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"ERC20.sol\":4035:4039  bool */\n      0x00\n        /* \"ERC20.sol\":4051:4064  address owner */\n      dup1\n        /* \"ERC20.sol\":4067:4079  _msgSender() */\n      tag_74\n        /* \"ERC20.sol\":4067:4077  _msgSender */\n      tag_75\n        /* \"ERC20.sol\":4067:4079  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"ERC20.sol\":4051:4079  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20.sol\":4089:4120  _approve(owner, spender, value) */\n      tag_76\n        /* \"ERC20.sol\":4098:4103  owner */\n      dup2\n        /* \"ERC20.sol\":4105:4112  spender */\n      dup6\n        /* \"ERC20.sol\":4114:4119  value */\n      dup6\n        /* \"ERC20.sol\":4089:4097  _approve */\n      tag_77\n        /* \"ERC20.sol\":4089:4120  _approve(owner, spender, value) */\n      jump\t// in\n    tag_76:\n        /* \"ERC20.sol\":4137:4141  true */\n      0x01\n        /* \"ERC20.sol\":4130:4141  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":3962:4148  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2813:2910  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n        /* \"ERC20.sol\":2865:2872  uint256 */\n      0x00\n        /* \"ERC20.sol\":2891:2903  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":2884:2903  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":2813:2910  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4740:4984  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"ERC20.sol\":4827:4831  bool */\n      0x00\n        /* \"ERC20.sol\":4843:4858  address spender */\n      dup1\n        /* \"ERC20.sol\":4861:4873  _msgSender() */\n      tag_80\n        /* \"ERC20.sol\":4861:4871  _msgSender */\n      tag_75\n        /* \"ERC20.sol\":4861:4873  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"ERC20.sol\":4843:4873  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20.sol\":4883:4920  _spendAllowance(from, spender, value) */\n      tag_81\n        /* \"ERC20.sol\":4899:4903  from */\n      dup6\n        /* \"ERC20.sol\":4905:4912  spender */\n      dup3\n        /* \"ERC20.sol\":4914:4919  value */\n      dup6\n        /* \"ERC20.sol\":4883:4898  _spendAllowance */\n      tag_82\n        /* \"ERC20.sol\":4883:4920  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_81:\n        /* \"ERC20.sol\":4930:4956  _transfer(from, to, value) */\n      tag_83\n        /* \"ERC20.sol\":4940:4944  from */\n      dup6\n        /* \"ERC20.sol\":4946:4948  to */\n      dup6\n        /* \"ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"ERC20.sol\":4930:4939  _transfer */\n      tag_84\n        /* \"ERC20.sol\":4930:4956  _transfer(from, to, value) */\n      jump\t// in\n    tag_83:\n        /* \"ERC20.sol\":4973:4977  true */\n      0x01\n        /* \"ERC20.sol\":4966:4977  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":4740:4984  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TokenCC.sol\":423:527  function decimals() public pure override(ERC20 ,IERC20Metadata) returns (uint8){... */\n    tag_40:\n        /* \"TokenCC.sol\":496:501  uint8 */\n      0x00\n        /* \"TokenCC.sol\":519:520  8 */\n      0x08\n        /* \"TokenCC.sol\":512:520  return 8 */\n      swap1\n      pop\n        /* \"TokenCC.sol\":423:527  function decimals() public pure override(ERC20 ,IERC20Metadata) returns (uint8){... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":2968:3084  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_46:\n        /* \"ERC20.sol\":3033:3040  uint256 */\n      0x00\n        /* \"ERC20.sol\":3059:3068  _balances */\n      dup1\n        /* \"ERC20.sol\":3059:3077  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":3069:3076  account */\n      dup4\n        /* \"ERC20.sol\":3059:3077  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3052:3077  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":2968:3084  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1945:2038  function symbol() public view virtual returns (string memory) {... */\n    tag_49:\n        /* \"ERC20.sol\":1992:2005  string memory */\n      0x60\n        /* \"ERC20.sol\":2024:2031  _symbol */\n      0x04\n        /* \"ERC20.sol\":2017:2031  return _symbol */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_68\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_68\n      jump\t// in\n    tag_89:\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_91\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_90)\n    tag_91:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_92:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_92\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":1945:2038  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3279:3457  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"ERC20.sol\":3348:3352  bool */\n      0x00\n        /* \"ERC20.sol\":3364:3377  address owner */\n      dup1\n        /* \"ERC20.sol\":3380:3392  _msgSender() */\n      tag_94\n        /* \"ERC20.sol\":3380:3390  _msgSender */\n      tag_75\n        /* \"ERC20.sol\":3380:3392  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"ERC20.sol\":3364:3392  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20.sol\":3402:3429  _transfer(owner, to, value) */\n      tag_95\n        /* \"ERC20.sol\":3412:3417  owner */\n      dup2\n        /* \"ERC20.sol\":3419:3421  to */\n      dup6\n        /* \"ERC20.sol\":3423:3428  value */\n      dup6\n        /* \"ERC20.sol\":3402:3411  _transfer */\n      tag_84\n        /* \"ERC20.sol\":3402:3429  _transfer(owner, to, value) */\n      jump\t// in\n    tag_95:\n        /* \"ERC20.sol\":3446:3450  true */\n      0x01\n        /* \"ERC20.sol\":3439:3450  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":3279:3457  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TokenCC.sol\":533:599  function requestFunds() external override{... */\n    tag_56:\n        /* \"TokenCC.sol\":584:592  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":3515:3655  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"ERC20.sol\":3595:3602  uint256 */\n      0x00\n        /* \"ERC20.sol\":3621:3632  _allowances */\n      0x01\n        /* \"ERC20.sol\":3621:3639  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":3633:3638  owner */\n      dup5\n        /* \"ERC20.sol\":3621:3639  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":3621:3648  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":3640:3647  spender */\n      dup4\n        /* \"ERC20.sol\":3621:3648  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3614:3648  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3515:3655  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_75:\n        /* \"Context.sol\":709:716  address */\n      0x00\n        /* \"Context.sol\":735:745  msg.sender */\n      caller\n        /* \"Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":8690:8818  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_77:\n        /* \"ERC20.sol\":8774:8811  _approve(owner, spender, value, true) */\n      tag_100\n        /* \"ERC20.sol\":8783:8788  owner */\n      dup4\n        /* \"ERC20.sol\":8790:8797  spender */\n      dup4\n        /* \"ERC20.sol\":8799:8804  value */\n      dup4\n        /* \"ERC20.sol\":8806:8810  true */\n      0x01\n        /* \"ERC20.sol\":8774:8782  _approve */\n      tag_101\n        /* \"ERC20.sol\":8774:8811  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_100:\n        /* \"ERC20.sol\":8690:8818  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":10379:10856  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_82:\n        /* \"ERC20.sol\":10478:10502  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":10505:10530  allowance(owner, spender) */\n      tag_103\n        /* \"ERC20.sol\":10515:10520  owner */\n      dup5\n        /* \"ERC20.sol\":10522:10529  spender */\n      dup5\n        /* \"ERC20.sol\":10505:10514  allowance */\n      tag_60\n        /* \"ERC20.sol\":10505:10530  allowance(owner, spender) */\n      jump\t// in\n    tag_103:\n        /* \"ERC20.sol\":10478:10530  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20.sol\":10564:10581  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC20.sol\":10544:10560  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":10544:10581  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20.sol\":10540:10850  if (currentAllowance != type(uint256).max) {... */\n      tag_104\n      jumpi\n        /* \"ERC20.sol\":10620:10625  value */\n      dup2\n        /* \"ERC20.sol\":10601:10617  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":10601:10625  currentAllowance < value */\n      lt\n        /* \"ERC20.sol\":10597:10727  if (currentAllowance < value) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"ERC20.sol\":10679:10686  spender */\n      dup3\n        /* \"ERC20.sol\":10688:10704  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":10706:10711  value */\n      dup4\n        /* \"ERC20.sol\":10652:10712  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":10597:10727  if (currentAllowance < value) {... */\n    tag_105:\n        /* \"ERC20.sol\":10768:10825  _approve(owner, spender, currentAllowance - value, false) */\n      tag_108\n        /* \"ERC20.sol\":10777:10782  owner */\n      dup5\n        /* \"ERC20.sol\":10784:10791  spender */\n      dup5\n        /* \"ERC20.sol\":10812:10817  value */\n      dup5\n        /* \"ERC20.sol\":10793:10809  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":10793:10817  currentAllowance - value */\n      sub\n        /* \"ERC20.sol\":10819:10824  false */\n      0x00\n        /* \"ERC20.sol\":10768:10776  _approve */\n      tag_101\n        /* \"ERC20.sol\":10768:10825  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_108:\n        /* \"ERC20.sol\":10540:10850  if (currentAllowance != type(uint256).max) {... */\n    tag_104:\n        /* \"ERC20.sol\":10468:10856  {... */\n      pop\n        /* \"ERC20.sol\":10379:10856  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5357:5657  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_84:\n        /* \"ERC20.sol\":5456:5457  0 */\n      0x00\n        /* \"ERC20.sol\":5440:5458  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":5440:5444  from */\n      dup4\n        /* \"ERC20.sol\":5440:5458  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":5436:5522  if (from == address(0)) {... */\n      tag_110\n      jumpi\n        /* \"ERC20.sol\":5508:5509  0 */\n      0x00\n        /* \"ERC20.sol\":5481:5511  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":5436:5522  if (from == address(0)) {... */\n    tag_110:\n        /* \"ERC20.sol\":5549:5550  0 */\n      0x00\n        /* \"ERC20.sol\":5535:5551  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":5535:5537  to */\n      dup3\n        /* \"ERC20.sol\":5535:5551  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":5531:5617  if (to == address(0)) {... */\n      tag_113\n      jumpi\n        /* \"ERC20.sol\":5603:5604  0 */\n      0x00\n        /* \"ERC20.sol\":5574:5606  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":5531:5617  if (to == address(0)) {... */\n    tag_113:\n        /* \"ERC20.sol\":5626:5650  _update(from, to, value) */\n      tag_115\n        /* \"ERC20.sol\":5634:5638  from */\n      dup4\n        /* \"ERC20.sol\":5640:5642  to */\n      dup4\n        /* \"ERC20.sol\":5644:5649  value */\n      dup4\n        /* \"ERC20.sol\":5626:5633  _update */\n      tag_116\n        /* \"ERC20.sol\":5626:5650  _update(from, to, value) */\n      jump\t// in\n    tag_115:\n        /* \"ERC20.sol\":5357:5657  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":9665:10097  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_101:\n        /* \"ERC20.sol\":9794:9795  0 */\n      0x00\n        /* \"ERC20.sol\":9777:9796  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":9777:9782  owner */\n      dup5\n        /* \"ERC20.sol\":9777:9796  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":9773:9862  if (owner == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"ERC20.sol\":9848:9849  0 */\n      0x00\n        /* \"ERC20.sol\":9819:9851  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":9773:9862  if (owner == address(0)) {... */\n    tag_118:\n        /* \"ERC20.sol\":9894:9895  0 */\n      0x00\n        /* \"ERC20.sol\":9875:9896  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":9875:9882  spender */\n      dup4\n        /* \"ERC20.sol\":9875:9896  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":9871:9961  if (spender == address(0)) {... */\n      tag_120\n      jumpi\n        /* \"ERC20.sol\":9947:9948  0 */\n      0x00\n        /* \"ERC20.sol\":9919:9950  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":9871:9961  if (spender == address(0)) {... */\n    tag_120:\n        /* \"ERC20.sol\":10000:10005  value */\n      dup2\n        /* \"ERC20.sol\":9970:9981  _allowances */\n      0x01\n        /* \"ERC20.sol\":9970:9988  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":9982:9987  owner */\n      dup7\n        /* \"ERC20.sol\":9970:9988  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":9970:9997  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":9989:9996  spender */\n      dup6\n        /* \"ERC20.sol\":9970:9997  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":9970:10005  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":10019:10028  emitEvent */\n      dup1\n        /* \"ERC20.sol\":10015:10091  if (emitEvent) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"ERC20.sol\":10065:10072  spender */\n      dup3\n        /* \"ERC20.sol\":10049:10080  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10058:10063  owner */\n      dup5\n        /* \"ERC20.sol\":10049:10080  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":10074:10079  value */\n      dup5\n        /* \"ERC20.sol\":10049:10080  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":10015:10091  if (emitEvent) {... */\n    tag_122:\n        /* \"ERC20.sol\":9665:10097  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5972:7079  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_116:\n        /* \"ERC20.sol\":6077:6078  0 */\n      0x00\n        /* \"ERC20.sol\":6061:6079  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":6061:6065  from */\n      dup4\n        /* \"ERC20.sol\":6061:6079  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":6057:6597  if (from == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"ERC20.sol\":6213:6218  value */\n      dup1\n        /* \"ERC20.sol\":6197:6209  _totalSupply */\n      0x02\n      0x00\n        /* \"ERC20.sol\":6197:6218  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6057:6597  if (from == address(0)) {... */\n      jump(tag_128)\n    tag_125:\n        /* \"ERC20.sol\":6249:6268  uint256 fromBalance */\n      0x00\n        /* \"ERC20.sol\":6271:6280  _balances */\n      dup1\n        /* \"ERC20.sol\":6271:6286  _balances[from] */\n      0x00\n        /* \"ERC20.sol\":6281:6285  from */\n      dup6\n        /* \"ERC20.sol\":6271:6286  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":6249:6286  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"ERC20.sol\":6318:6323  value */\n      dup2\n        /* \"ERC20.sol\":6304:6315  fromBalance */\n      dup2\n        /* \"ERC20.sol\":6304:6323  fromBalance < value */\n      lt\n        /* \"ERC20.sol\":6300:6415  if (fromBalance < value) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"ERC20.sol\":6375:6379  from */\n      dup4\n        /* \"ERC20.sol\":6381:6392  fromBalance */\n      dup2\n        /* \"ERC20.sol\":6394:6399  value */\n      dup4\n        /* \"ERC20.sol\":6350:6400  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":6300:6415  if (fromBalance < value) {... */\n    tag_129:\n        /* \"ERC20.sol\":6567:6572  value */\n      dup2\n        /* \"ERC20.sol\":6553:6564  fromBalance */\n      dup2\n        /* \"ERC20.sol\":6553:6572  fromBalance - value */\n      sub\n        /* \"ERC20.sol\":6535:6544  _balances */\n      0x00\n        /* \"ERC20.sol\":6535:6550  _balances[from] */\n      dup1\n        /* \"ERC20.sol\":6545:6549  from */\n      dup7\n        /* \"ERC20.sol\":6535:6550  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":6535:6572  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6235:6597  {... */\n      pop\n        /* \"ERC20.sol\":6057:6597  if (from == address(0)) {... */\n    tag_128:\n        /* \"ERC20.sol\":6625:6626  0 */\n      0x00\n        /* \"ERC20.sol\":6611:6627  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":6611:6613  to */\n      dup3\n        /* \"ERC20.sol\":6611:6627  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":6607:7032  if (to == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"ERC20.sol\":6790:6795  value */\n      dup1\n        /* \"ERC20.sol\":6774:6786  _totalSupply */\n      0x02\n      0x00\n        /* \"ERC20.sol\":6774:6795  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6607:7032  if (to == address(0)) {... */\n      jump(tag_132)\n    tag_131:\n        /* \"ERC20.sol\":7002:7007  value */\n      dup1\n        /* \"ERC20.sol\":6985:6994  _balances */\n      0x00\n        /* \"ERC20.sol\":6985:6998  _balances[to] */\n      dup1\n        /* \"ERC20.sol\":6995:6997  to */\n      dup5\n        /* \"ERC20.sol\":6985:6998  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":6985:7007  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6607:7032  if (to == address(0)) {... */\n    tag_132:\n        /* \"ERC20.sol\":7062:7064  to */\n      dup2\n        /* \"ERC20.sol\":7047:7072  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7056:7060  from */\n      dup4\n        /* \"ERC20.sol\":7047:7072  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":7066:7071  value */\n      dup4\n        /* \"ERC20.sol\":7047:7072  Transfer(from, to, value) */\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":5972:7079  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_135:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_137:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_138:\n        /* \"#utility.yul\":561:584   */\n      tag_166\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_137\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_167:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_139:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_169\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_138\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_17:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_172\n      tag_135\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":833:952   */\n    tag_171:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_173\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_139\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_140:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_141:\n        /* \"#utility.yul\":1268:1289   */\n      tag_176\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_140\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_20:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_178\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_141\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_142:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_143:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_144:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_182:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_182)\n    tag_184:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_145:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_146:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_187\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2329:2400   */\n      tag_188\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_143\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_189\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_144\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2499:2528   */\n      tag_190\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_145\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_24:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_192\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_146\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_147:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_148:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_195\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_147\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_149:\n        /* \"#utility.yul\":3167:3191   */\n      tag_197\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_148\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_198:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_150:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_200\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_149\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_151:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_152:\n        /* \"#utility.yul\":3523:3547   */\n      tag_203\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_151\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_204:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_153:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_206\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_152\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_27:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_209\n      tag_135\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3816:3935   */\n    tag_208:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_210\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_150\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_211\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_153\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4321   */\n    tag_154:\n        /* \"#utility.yul\":4290:4314   */\n      tag_213\n        /* \"#utility.yul\":4308:4313   */\n      dup2\n        /* \"#utility.yul\":4290:4314   */\n      tag_151\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4285:4288   */\n      dup3\n        /* \"#utility.yul\":4278:4315   */\n      mstore\n        /* \"#utility.yul\":4203:4321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4549   */\n    tag_33:\n        /* \"#utility.yul\":4420:4424   */\n      0x00\n        /* \"#utility.yul\":4458:4460   */\n      0x20\n        /* \"#utility.yul\":4447:4456   */\n      dup3\n        /* \"#utility.yul\":4443:4461   */\n      add\n        /* \"#utility.yul\":4435:4461   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4542   */\n      tag_215\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4524:4541   */\n      add\n        /* \"#utility.yul\":4515:4521   */\n      dup5\n        /* \"#utility.yul\":4471:4542   */\n      tag_154\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4327:4549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:5174   */\n    tag_36:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup1\n        /* \"#utility.yul\":4648:4654   */\n      0x00\n        /* \"#utility.yul\":4697:4699   */\n      0x60\n        /* \"#utility.yul\":4685:4694   */\n      dup5\n        /* \"#utility.yul\":4676:4683   */\n      dup7\n        /* \"#utility.yul\":4672:4695   */\n      sub\n        /* \"#utility.yul\":4668:4700   */\n      slt\n        /* \"#utility.yul\":4665:4784   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":4703:4782   */\n      tag_218\n      tag_135\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4665:4784   */\n    tag_217:\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4848:4901   */\n      tag_219\n        /* \"#utility.yul\":4893:4900   */\n      dup7\n        /* \"#utility.yul\":4884:4890   */\n      dup3\n        /* \"#utility.yul\":4873:4882   */\n      dup8\n        /* \"#utility.yul\":4869:4891   */\n      add\n        /* \"#utility.yul\":4848:4901   */\n      tag_150\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4838:4901   */\n      swap4\n      pop\n        /* \"#utility.yul\":4794:4911   */\n      pop\n        /* \"#utility.yul\":4950:4952   */\n      0x20\n        /* \"#utility.yul\":4976:5029   */\n      tag_220\n        /* \"#utility.yul\":5021:5028   */\n      dup7\n        /* \"#utility.yul\":5012:5018   */\n      dup3\n        /* \"#utility.yul\":5001:5010   */\n      dup8\n        /* \"#utility.yul\":4997:5019   */\n      add\n        /* \"#utility.yul\":4976:5029   */\n      tag_150\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4966:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":4921:5039   */\n      pop\n        /* \"#utility.yul\":5078:5080   */\n      0x40\n        /* \"#utility.yul\":5104:5157   */\n      tag_221\n        /* \"#utility.yul\":5149:5156   */\n      dup7\n        /* \"#utility.yul\":5140:5146   */\n      dup3\n        /* \"#utility.yul\":5129:5138   */\n      dup8\n        /* \"#utility.yul\":5125:5147   */\n      add\n        /* \"#utility.yul\":5104:5157   */\n      tag_153\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5094:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5049:5167   */\n      pop\n        /* \"#utility.yul\":4555:5174   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5180:5266   */\n    tag_155:\n        /* \"#utility.yul\":5215:5222   */\n      0x00\n        /* \"#utility.yul\":5255:5259   */\n      0xff\n        /* \"#utility.yul\":5248:5253   */\n      dup3\n        /* \"#utility.yul\":5244:5260   */\n      and\n        /* \"#utility.yul\":5233:5260   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5272:5384   */\n    tag_156:\n        /* \"#utility.yul\":5355:5377   */\n      tag_224\n        /* \"#utility.yul\":5371:5376   */\n      dup2\n        /* \"#utility.yul\":5355:5377   */\n      tag_155\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5350:5353   */\n      dup3\n        /* \"#utility.yul\":5343:5378   */\n      mstore\n        /* \"#utility.yul\":5272:5384   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5390:5604   */\n    tag_42:\n        /* \"#utility.yul\":5479:5483   */\n      0x00\n        /* \"#utility.yul\":5517:5519   */\n      0x20\n        /* \"#utility.yul\":5506:5515   */\n      dup3\n        /* \"#utility.yul\":5502:5520   */\n      add\n        /* \"#utility.yul\":5494:5520   */\n      swap1\n      pop\n        /* \"#utility.yul\":5530:5597   */\n      tag_226\n        /* \"#utility.yul\":5594:5595   */\n      0x00\n        /* \"#utility.yul\":5583:5592   */\n      dup4\n        /* \"#utility.yul\":5579:5596   */\n      add\n        /* \"#utility.yul\":5570:5576   */\n      dup5\n        /* \"#utility.yul\":5530:5597   */\n      tag_156\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5390:5604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5610:5939   */\n    tag_45:\n        /* \"#utility.yul\":5669:5675   */\n      0x00\n        /* \"#utility.yul\":5718:5720   */\n      0x20\n        /* \"#utility.yul\":5706:5715   */\n      dup3\n        /* \"#utility.yul\":5697:5704   */\n      dup5\n        /* \"#utility.yul\":5693:5716   */\n      sub\n        /* \"#utility.yul\":5689:5721   */\n      slt\n        /* \"#utility.yul\":5686:5805   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":5724:5803   */\n      tag_229\n      tag_135\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5686:5805   */\n    tag_228:\n        /* \"#utility.yul\":5844:5845   */\n      0x00\n        /* \"#utility.yul\":5869:5922   */\n      tag_230\n        /* \"#utility.yul\":5914:5921   */\n      dup5\n        /* \"#utility.yul\":5905:5911   */\n      dup3\n        /* \"#utility.yul\":5894:5903   */\n      dup6\n        /* \"#utility.yul\":5890:5912   */\n      add\n        /* \"#utility.yul\":5869:5922   */\n      tag_150\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5859:5922   */\n      swap2\n      pop\n        /* \"#utility.yul\":5815:5932   */\n      pop\n        /* \"#utility.yul\":5610:5939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5945:6419   */\n    tag_59:\n        /* \"#utility.yul\":6013:6019   */\n      0x00\n        /* \"#utility.yul\":6021:6027   */\n      dup1\n        /* \"#utility.yul\":6070:6072   */\n      0x40\n        /* \"#utility.yul\":6058:6067   */\n      dup4\n        /* \"#utility.yul\":6049:6056   */\n      dup6\n        /* \"#utility.yul\":6045:6068   */\n      sub\n        /* \"#utility.yul\":6041:6073   */\n      slt\n        /* \"#utility.yul\":6038:6157   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6076:6155   */\n      tag_233\n      tag_135\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6038:6157   */\n    tag_232:\n        /* \"#utility.yul\":6196:6197   */\n      0x00\n        /* \"#utility.yul\":6221:6274   */\n      tag_234\n        /* \"#utility.yul\":6266:6273   */\n      dup6\n        /* \"#utility.yul\":6257:6263   */\n      dup3\n        /* \"#utility.yul\":6246:6255   */\n      dup7\n        /* \"#utility.yul\":6242:6264   */\n      add\n        /* \"#utility.yul\":6221:6274   */\n      tag_150\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6211:6274   */\n      swap3\n      pop\n        /* \"#utility.yul\":6167:6284   */\n      pop\n        /* \"#utility.yul\":6323:6325   */\n      0x20\n        /* \"#utility.yul\":6349:6402   */\n      tag_235\n        /* \"#utility.yul\":6394:6401   */\n      dup6\n        /* \"#utility.yul\":6385:6391   */\n      dup3\n        /* \"#utility.yul\":6374:6383   */\n      dup7\n        /* \"#utility.yul\":6370:6392   */\n      add\n        /* \"#utility.yul\":6349:6402   */\n      tag_150\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6339:6402   */\n      swap2\n      pop\n        /* \"#utility.yul\":6294:6412   */\n      pop\n        /* \"#utility.yul\":5945:6419   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6605   */\n    tag_157:\n        /* \"#utility.yul\":6473:6550   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6463:6551   */\n      mstore\n        /* \"#utility.yul\":6570:6574   */\n      0x22\n        /* \"#utility.yul\":6567:6568   */\n      0x04\n        /* \"#utility.yul\":6560:6575   */\n      mstore\n        /* \"#utility.yul\":6594:6598   */\n      0x24\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6584:6599   */\n      revert\n        /* \"#utility.yul\":6611:6931   */\n    tag_68:\n        /* \"#utility.yul\":6655:6661   */\n      0x00\n        /* \"#utility.yul\":6692:6693   */\n      0x02\n        /* \"#utility.yul\":6686:6690   */\n      dup3\n        /* \"#utility.yul\":6682:6694   */\n      div\n        /* \"#utility.yul\":6672:6694   */\n      swap1\n      pop\n        /* \"#utility.yul\":6739:6740   */\n      0x01\n        /* \"#utility.yul\":6733:6737   */\n      dup3\n        /* \"#utility.yul\":6729:6741   */\n      and\n        /* \"#utility.yul\":6760:6778   */\n      dup1\n        /* \"#utility.yul\":6750:6831   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":6816:6820   */\n      0x7f\n        /* \"#utility.yul\":6808:6814   */\n      dup3\n        /* \"#utility.yul\":6804:6821   */\n      and\n        /* \"#utility.yul\":6794:6821   */\n      swap2\n      pop\n        /* \"#utility.yul\":6750:6831   */\n    tag_238:\n        /* \"#utility.yul\":6878:6880   */\n      0x20\n        /* \"#utility.yul\":6870:6876   */\n      dup3\n        /* \"#utility.yul\":6867:6881   */\n      lt\n        /* \"#utility.yul\":6847:6865   */\n      dup2\n        /* \"#utility.yul\":6844:6882   */\n      sub\n        /* \"#utility.yul\":6841:6925   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6897:6915   */\n      tag_240\n      tag_157\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6841:6925   */\n    tag_239:\n        /* \"#utility.yul\":6662:6931   */\n      pop\n        /* \"#utility.yul\":6611:6931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7055   */\n    tag_158:\n        /* \"#utility.yul\":7024:7048   */\n      tag_242\n        /* \"#utility.yul\":7042:7047   */\n      dup2\n        /* \"#utility.yul\":7024:7048   */\n      tag_148\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7019:7022   */\n      dup3\n        /* \"#utility.yul\":7012:7049   */\n      mstore\n        /* \"#utility.yul\":6937:7055   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7061:7503   */\n    tag_107:\n        /* \"#utility.yul\":7210:7214   */\n      0x00\n        /* \"#utility.yul\":7248:7250   */\n      0x60\n        /* \"#utility.yul\":7237:7246   */\n      dup3\n        /* \"#utility.yul\":7233:7251   */\n      add\n        /* \"#utility.yul\":7225:7251   */\n      swap1\n      pop\n        /* \"#utility.yul\":7261:7332   */\n      tag_244\n        /* \"#utility.yul\":7329:7330   */\n      0x00\n        /* \"#utility.yul\":7318:7327   */\n      dup4\n        /* \"#utility.yul\":7314:7331   */\n      add\n        /* \"#utility.yul\":7305:7311   */\n      dup7\n        /* \"#utility.yul\":7261:7332   */\n      tag_158\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7342:7414   */\n      tag_245\n        /* \"#utility.yul\":7410:7412   */\n      0x20\n        /* \"#utility.yul\":7399:7408   */\n      dup4\n        /* \"#utility.yul\":7395:7413   */\n      add\n        /* \"#utility.yul\":7386:7392   */\n      dup6\n        /* \"#utility.yul\":7342:7414   */\n      tag_154\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7424:7496   */\n      tag_246\n        /* \"#utility.yul\":7492:7494   */\n      0x40\n        /* \"#utility.yul\":7481:7490   */\n      dup4\n        /* \"#utility.yul\":7477:7495   */\n      add\n        /* \"#utility.yul\":7468:7474   */\n      dup5\n        /* \"#utility.yul\":7424:7496   */\n      tag_154\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7061:7503   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7509:7731   */\n    tag_112:\n        /* \"#utility.yul\":7602:7606   */\n      0x00\n        /* \"#utility.yul\":7640:7642   */\n      0x20\n        /* \"#utility.yul\":7629:7638   */\n      dup3\n        /* \"#utility.yul\":7625:7643   */\n      add\n        /* \"#utility.yul\":7617:7643   */\n      swap1\n      pop\n        /* \"#utility.yul\":7653:7724   */\n      tag_248\n        /* \"#utility.yul\":7721:7722   */\n      0x00\n        /* \"#utility.yul\":7710:7719   */\n      dup4\n        /* \"#utility.yul\":7706:7723   */\n      add\n        /* \"#utility.yul\":7697:7703   */\n      dup5\n        /* \"#utility.yul\":7653:7724   */\n      tag_158\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7509:7731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7737:7917   */\n    tag_159:\n        /* \"#utility.yul\":7785:7862   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7782:7783   */\n      0x00\n        /* \"#utility.yul\":7775:7863   */\n      mstore\n        /* \"#utility.yul\":7882:7886   */\n      0x11\n        /* \"#utility.yul\":7879:7880   */\n      0x04\n        /* \"#utility.yul\":7872:7887   */\n      mstore\n        /* \"#utility.yul\":7906:7910   */\n      0x24\n        /* \"#utility.yul\":7903:7904   */\n      0x00\n        /* \"#utility.yul\":7896:7911   */\n      revert\n        /* \"#utility.yul\":7923:8114   */\n    tag_127:\n        /* \"#utility.yul\":7963:7966   */\n      0x00\n        /* \"#utility.yul\":7982:8002   */\n      tag_251\n        /* \"#utility.yul\":8000:8001   */\n      dup3\n        /* \"#utility.yul\":7982:8002   */\n      tag_151\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7977:8002   */\n      swap2\n      pop\n        /* \"#utility.yul\":8016:8036   */\n      tag_252\n        /* \"#utility.yul\":8034:8035   */\n      dup4\n        /* \"#utility.yul\":8016:8036   */\n      tag_151\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":8011:8036   */\n      swap3\n      pop\n        /* \"#utility.yul\":8059:8060   */\n      dup3\n        /* \"#utility.yul\":8056:8057   */\n      dup3\n        /* \"#utility.yul\":8052:8061   */\n      add\n        /* \"#utility.yul\":8045:8061   */\n      swap1\n      pop\n        /* \"#utility.yul\":8080:8083   */\n      dup1\n        /* \"#utility.yul\":8077:8078   */\n      dup3\n        /* \"#utility.yul\":8074:8084   */\n      gt\n        /* \"#utility.yul\":8071:8107   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":8087:8105   */\n      tag_254\n      tag_159\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8071:8107   */\n    tag_253:\n        /* \"#utility.yul\":7923:8114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b6ac5c85849a0c6ddc91ac1080ea7b7e56b7e3b2a689fb9b94543bc7e88c8e1e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_81": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_384": {
									"entryPoint": 241,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_351": {
									"entryPoint": 382,
									"id": 351,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_710": {
									"entryPoint": 232,
									"id": 710,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9836:8",
										"nodeType": "YulBlock",
										"src": "0:9836:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "140:152:8",
													"nodeType": "YulBlock",
													"src": "140:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:8",
																		"nodeType": "YulLiteral",
																		"src": "157:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:8",
																		"nodeType": "YulLiteral",
																		"src": "160:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:8"
																},
																"nativeSrc": "150:88:8",
																"nodeType": "YulFunctionCall",
																"src": "150:88:8"
															},
															"nativeSrc": "150:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:8",
																		"nodeType": "YulLiteral",
																		"src": "254:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:8",
																		"nodeType": "YulLiteral",
																		"src": "257:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:8"
																},
																"nativeSrc": "247:15:8",
																"nodeType": "YulFunctionCall",
																"src": "247:15:8"
															},
															"nativeSrc": "247:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:8",
																		"nodeType": "YulLiteral",
																		"src": "278:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:8",
																		"nodeType": "YulLiteral",
																		"src": "281:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:8"
																},
																"nativeSrc": "271:15:8",
																"nodeType": "YulFunctionCall",
																"src": "271:15:8"
															},
															"nativeSrc": "271:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:8"
											},
											{
												"body": {
													"nativeSrc": "326:152:8",
													"nodeType": "YulBlock",
													"src": "326:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:8",
																		"nodeType": "YulLiteral",
																		"src": "343:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:8",
																		"nodeType": "YulLiteral",
																		"src": "346:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:8"
																},
																"nativeSrc": "336:88:8",
																"nodeType": "YulFunctionCall",
																"src": "336:88:8"
															},
															"nativeSrc": "336:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:8",
																		"nodeType": "YulLiteral",
																		"src": "443:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:15:8",
																"nodeType": "YulFunctionCall",
																"src": "433:15:8"
															},
															"nativeSrc": "433:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:8",
																		"nodeType": "YulLiteral",
																		"src": "464:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:8",
																		"nodeType": "YulLiteral",
																		"src": "467:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:8"
																},
																"nativeSrc": "457:15:8",
																"nodeType": "YulFunctionCall",
																"src": "457:15:8"
															},
															"nativeSrc": "457:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:8"
											},
											{
												"body": {
													"nativeSrc": "535:269:8",
													"nodeType": "YulBlock",
													"src": "535:269:8",
													"statements": [
														{
															"nativeSrc": "545:22:8",
															"nodeType": "YulAssignment",
															"src": "545:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:8",
																		"nodeType": "YulLiteral",
																		"src": "565:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:8"
																},
																"nativeSrc": "555:12:8",
																"nodeType": "YulFunctionCall",
																"src": "555:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:8"
																}
															]
														},
														{
															"nativeSrc": "576:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:8",
																		"nodeType": "YulLiteral",
																		"src": "612:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:8"
																},
																"nativeSrc": "602:12:8",
																"nodeType": "YulFunctionCall",
																"src": "602:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:8",
																	"nodeType": "YulTypedName",
																	"src": "580:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:8",
																"nodeType": "YulBlock",
																"src": "653:51:8",
																"statements": [
																	{
																		"nativeSrc": "667:27:8",
																		"nodeType": "YulAssignment",
																		"src": "667:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:8",
																					"nodeType": "YulLiteral",
																					"src": "689:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:8"
																			},
																			"nativeSrc": "677:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:8"
																},
																"nativeSrc": "626:26:8",
																"nodeType": "YulFunctionCall",
																"src": "626:26:8"
															},
															"nativeSrc": "623:81:8",
															"nodeType": "YulIf",
															"src": "623:81:8"
														},
														{
															"body": {
																"nativeSrc": "756:42:8",
																"nodeType": "YulBlock",
																"src": "756:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:8"
																			},
																			"nativeSrc": "770:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:8"
																		},
																		"nativeSrc": "770:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:8",
																				"nodeType": "YulLiteral",
																				"src": "751:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:8"
																		},
																		"nativeSrc": "740:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:8"
																},
																"nativeSrc": "717:38:8",
																"nodeType": "YulFunctionCall",
																"src": "717:38:8"
															},
															"nativeSrc": "714:84:8",
															"nodeType": "YulIf",
															"src": "714:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:8",
														"nodeType": "YulTypedName",
														"src": "519:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:8",
														"nodeType": "YulTypedName",
														"src": "528:6:8",
														"type": ""
													}
												],
												"src": "484:320:8"
											},
											{
												"body": {
													"nativeSrc": "864:87:8",
													"nodeType": "YulBlock",
													"src": "864:87:8",
													"statements": [
														{
															"nativeSrc": "874:11:8",
															"nodeType": "YulAssignment",
															"src": "874:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:8",
																"nodeType": "YulIdentifier",
																"src": "882:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:8",
																		"nodeType": "YulLiteral",
																		"src": "902:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:8"
																},
																"nativeSrc": "895:14:8",
																"nodeType": "YulFunctionCall",
																"src": "895:14:8"
															},
															"nativeSrc": "895:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:8"
														},
														{
															"nativeSrc": "918:26:8",
															"nodeType": "YulAssignment",
															"src": "918:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:8",
																		"nodeType": "YulLiteral",
																		"src": "936:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:8",
																		"nodeType": "YulLiteral",
																		"src": "939:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:8"
																},
																"nativeSrc": "926:18:8",
																"nodeType": "YulFunctionCall",
																"src": "926:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:8",
														"nodeType": "YulTypedName",
														"src": "851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:8",
														"nodeType": "YulTypedName",
														"src": "859:4:8",
														"type": ""
													}
												],
												"src": "810:141:8"
											},
											{
												"body": {
													"nativeSrc": "1001:49:8",
													"nodeType": "YulBlock",
													"src": "1001:49:8",
													"statements": [
														{
															"nativeSrc": "1011:33:8",
															"nodeType": "YulAssignment",
															"src": "1011:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:8"
																		},
																		"nativeSrc": "1025:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:8"
																},
																"nativeSrc": "1021:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:8",
														"nodeType": "YulTypedName",
														"src": "984:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:8",
														"nodeType": "YulTypedName",
														"src": "994:6:8",
														"type": ""
													}
												],
												"src": "957:93:8"
											},
											{
												"body": {
													"nativeSrc": "1109:54:8",
													"nodeType": "YulBlock",
													"src": "1109:54:8",
													"statements": [
														{
															"nativeSrc": "1119:37:8",
															"nodeType": "YulAssignment",
															"src": "1119:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:8"
																},
																"nativeSrc": "1140:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:8",
														"nodeType": "YulTypedName",
														"src": "1084:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:8",
														"nodeType": "YulTypedName",
														"src": "1090:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:8",
														"nodeType": "YulTypedName",
														"src": "1100:8:8",
														"type": ""
													}
												],
												"src": "1056:107:8"
											},
											{
												"body": {
													"nativeSrc": "1245:317:8",
													"nodeType": "YulBlock",
													"src": "1245:317:8",
													"statements": [
														{
															"nativeSrc": "1255:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:8"
																},
																"nativeSrc": "1272:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:8"
																},
																"nativeSrc": "1311:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:8",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:8",
															"nodeType": "YulAssignment",
															"src": "1417:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:8"
																},
																"nativeSrc": "1429:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:8"
																}
															]
														},
														{
															"nativeSrc": "1477:30:8",
															"nodeType": "YulAssignment",
															"src": "1477:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:8"
																		},
																		"nativeSrc": "1497:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:8"
																},
																"nativeSrc": "1486:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:8"
																}
															]
														},
														{
															"nativeSrc": "1516:40:8",
															"nodeType": "YulAssignment",
															"src": "1516:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:8"
																		},
																		"nativeSrc": "1536:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:8"
																},
																"nativeSrc": "1526:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:8",
														"nodeType": "YulTypedName",
														"src": "1206:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:8",
														"nodeType": "YulTypedName",
														"src": "1213:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:8",
														"nodeType": "YulTypedName",
														"src": "1225:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:8",
														"nodeType": "YulTypedName",
														"src": "1238:6:8",
														"type": ""
													}
												],
												"src": "1169:393:8"
											},
											{
												"body": {
													"nativeSrc": "1613:32:8",
													"nodeType": "YulBlock",
													"src": "1613:32:8",
													"statements": [
														{
															"nativeSrc": "1623:16:8",
															"nodeType": "YulAssignment",
															"src": "1623:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:8",
																"nodeType": "YulIdentifier",
																"src": "1634:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:8",
														"nodeType": "YulTypedName",
														"src": "1595:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:8",
														"nodeType": "YulTypedName",
														"src": "1605:7:8",
														"type": ""
													}
												],
												"src": "1568:77:8"
											},
											{
												"body": {
													"nativeSrc": "1683:28:8",
													"nodeType": "YulBlock",
													"src": "1683:28:8",
													"statements": [
														{
															"nativeSrc": "1693:12:8",
															"nodeType": "YulAssignment",
															"src": "1693:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:8",
																"nodeType": "YulIdentifier",
																"src": "1700:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:8",
														"nodeType": "YulTypedName",
														"src": "1669:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:8",
														"nodeType": "YulTypedName",
														"src": "1679:3:8",
														"type": ""
													}
												],
												"src": "1651:60:8"
											},
											{
												"body": {
													"nativeSrc": "1777:82:8",
													"nodeType": "YulBlock",
													"src": "1777:82:8",
													"statements": [
														{
															"nativeSrc": "1787:66:8",
															"nodeType": "YulAssignment",
															"src": "1787:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:8"
																				},
																				"nativeSrc": "1827:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:8"
																		},
																		"nativeSrc": "1818:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:8"
																},
																"nativeSrc": "1800:53:8",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:8",
														"nodeType": "YulTypedName",
														"src": "1757:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:8",
														"nodeType": "YulTypedName",
														"src": "1767:9:8",
														"type": ""
													}
												],
												"src": "1717:142:8"
											},
											{
												"body": {
													"nativeSrc": "1912:28:8",
													"nodeType": "YulBlock",
													"src": "1912:28:8",
													"statements": [
														{
															"nativeSrc": "1922:12:8",
															"nodeType": "YulAssignment",
															"src": "1922:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:8",
																"nodeType": "YulIdentifier",
																"src": "1929:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:8",
														"nodeType": "YulTypedName",
														"src": "1898:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:8",
														"nodeType": "YulTypedName",
														"src": "1908:3:8",
														"type": ""
													}
												],
												"src": "1865:75:8"
											},
											{
												"body": {
													"nativeSrc": "2022:193:8",
													"nodeType": "YulBlock",
													"src": "2022:193:8",
													"statements": [
														{
															"nativeSrc": "2032:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:8"
																},
																"nativeSrc": "2056:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:8",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:8"
																				},
																				"nativeSrc": "2145:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:8"
																				},
																				"nativeSrc": "2166:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:8"
																		},
																		"nativeSrc": "2117:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:8"
																},
																"nativeSrc": "2104:105:8",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:8"
															},
															"nativeSrc": "2104:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:8",
														"nodeType": "YulTypedName",
														"src": "1999:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:8",
														"nodeType": "YulTypedName",
														"src": "2005:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:8",
														"nodeType": "YulTypedName",
														"src": "2013:7:8",
														"type": ""
													}
												],
												"src": "1946:269:8"
											},
											{
												"body": {
													"nativeSrc": "2270:24:8",
													"nodeType": "YulBlock",
													"src": "2270:24:8",
													"statements": [
														{
															"nativeSrc": "2280:8:8",
															"nodeType": "YulAssignment",
															"src": "2280:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:8",
																"nodeType": "YulLiteral",
																"src": "2287:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:8",
														"nodeType": "YulTypedName",
														"src": "2266:3:8",
														"type": ""
													}
												],
												"src": "2221:73:8"
											},
											{
												"body": {
													"nativeSrc": "2353:136:8",
													"nodeType": "YulBlock",
													"src": "2353:136:8",
													"statements": [
														{
															"nativeSrc": "2363:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:8"
																},
																"nativeSrc": "2377:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:8"
																},
																"nativeSrc": "2418:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:8"
															},
															"nativeSrc": "2418:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:8",
														"nodeType": "YulTypedName",
														"src": "2339:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:8",
														"nodeType": "YulTypedName",
														"src": "2345:6:8",
														"type": ""
													}
												],
												"src": "2300:189:8"
											},
											{
												"body": {
													"nativeSrc": "2545:136:8",
													"nodeType": "YulBlock",
													"src": "2545:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:8",
																"nodeType": "YulBlock",
																"src": "2612:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:8"
																			},
																			"nativeSrc": "2626:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:8"
																		},
																		"nativeSrc": "2626:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:8"
																},
																"nativeSrc": "2562:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:8"
															},
															"nativeSrc": "2555:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:8",
																"nodeType": "YulBlock",
																"src": "2577:26:8",
																"statements": [
																	{
																		"nativeSrc": "2579:22:8",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:8"
																			},
																			"nativeSrc": "2588:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:8",
																"nodeType": "YulBlock",
																"src": "2559:2:8",
																"statements": []
															},
															"src": "2555:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:8",
														"nodeType": "YulTypedName",
														"src": "2533:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:8",
														"nodeType": "YulTypedName",
														"src": "2540:3:8",
														"type": ""
													}
												],
												"src": "2495:186:8"
											},
											{
												"body": {
													"nativeSrc": "2766:464:8",
													"nodeType": "YulBlock",
													"src": "2766:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:8",
																"nodeType": "YulBlock",
																"src": "2792:431:8",
																"statements": [
																	{
																		"nativeSrc": "2806:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:8"
																			},
																			"nativeSrc": "2822:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:8",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:8"
																					},
																					"nativeSrc": "2906:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:8"
																			},
																			"nativeSrc": "2892:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:8",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:8",
																			"nodeType": "YulBlock",
																			"src": "3093:27:8",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:8",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:8",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:8"
																			},
																			"nativeSrc": "3074:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:8"
																		},
																		"nativeSrc": "3071:49:8",
																		"nodeType": "YulIf",
																		"src": "3071:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:8"
																							},
																							"nativeSrc": "3189:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:8"
																					},
																					"nativeSrc": "3175:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:8"
																			},
																			"nativeSrc": "3133:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:8"
																		},
																		"nativeSrc": "3133:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:8"
																},
																"nativeSrc": "2780:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:8"
															},
															"nativeSrc": "2777:446:8",
															"nodeType": "YulIf",
															"src": "2777:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:8",
														"nodeType": "YulTypedName",
														"src": "2742:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:8",
														"nodeType": "YulTypedName",
														"src": "2749:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:8",
														"nodeType": "YulTypedName",
														"src": "2754:10:8",
														"type": ""
													}
												],
												"src": "2687:543:8"
											},
											{
												"body": {
													"nativeSrc": "3299:54:8",
													"nodeType": "YulBlock",
													"src": "3299:54:8",
													"statements": [
														{
															"nativeSrc": "3309:37:8",
															"nodeType": "YulAssignment",
															"src": "3309:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:8"
																},
																"nativeSrc": "3330:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:8",
														"nodeType": "YulTypedName",
														"src": "3274:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:8",
														"nodeType": "YulTypedName",
														"src": "3280:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:8",
														"nodeType": "YulTypedName",
														"src": "3290:8:8",
														"type": ""
													}
												],
												"src": "3236:117:8"
											},
											{
												"body": {
													"nativeSrc": "3410:118:8",
													"nodeType": "YulBlock",
													"src": "3410:118:8",
													"statements": [
														{
															"nativeSrc": "3420:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:8"
																				},
																				"nativeSrc": "3465:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:8"
																				},
																				"nativeSrc": "3480:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:8"
																		},
																		"nativeSrc": "3436:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:8"
																},
																"nativeSrc": "3432:56:8",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:8",
															"nodeType": "YulAssignment",
															"src": "3497:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:8"
																},
																"nativeSrc": "3507:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:8",
														"nodeType": "YulTypedName",
														"src": "3387:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:8",
														"nodeType": "YulTypedName",
														"src": "3393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:8",
														"nodeType": "YulTypedName",
														"src": "3403:6:8",
														"type": ""
													}
												],
												"src": "3359:169:8"
											},
											{
												"body": {
													"nativeSrc": "3614:214:8",
													"nodeType": "YulBlock",
													"src": "3614:214:8",
													"statements": [
														{
															"nativeSrc": "3747:37:8",
															"nodeType": "YulAssignment",
															"src": "3747:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:8"
																},
																"nativeSrc": "3755:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:8"
																}
															]
														},
														{
															"nativeSrc": "3793:29:8",
															"nodeType": "YulAssignment",
															"src": "3793:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:8"
																		},
																		"nativeSrc": "3810:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:8"
																},
																"nativeSrc": "3801:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:8",
														"nodeType": "YulTypedName",
														"src": "3595:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:8",
														"nodeType": "YulTypedName",
														"src": "3601:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:8",
														"nodeType": "YulTypedName",
														"src": "3609:4:8",
														"type": ""
													}
												],
												"src": "3533:295:8"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:8",
													"nodeType": "YulBlock",
													"src": "3925:1303:8",
													"statements": [
														{
															"nativeSrc": "3936:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:8"
																},
																"nativeSrc": "3950:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:8",
																"nodeType": "YulBlock",
																"src": "4072:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:8"
																			},
																			"nativeSrc": "4074:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:8"
																		},
																		"nativeSrc": "4074:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:8",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:8"
																},
																"nativeSrc": "4041:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:8"
															},
															"nativeSrc": "4038:56:8",
															"nodeType": "YulIf",
															"src": "4038:56:8"
														},
														{
															"nativeSrc": "4104:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:8"
																		},
																		"nativeSrc": "4144:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:8"
																},
																"nativeSrc": "4118:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:8"
																},
																"nativeSrc": "4203:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:8"
															},
															"nativeSrc": "4203:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:8"
														},
														{
															"nativeSrc": "4280:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:8",
																"nodeType": "YulLiteral",
																"src": "4297:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:8",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:8",
															"nodeType": "YulAssignment",
															"src": "4308:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:8",
																"nodeType": "YulLiteral",
																"src": "4321:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:8",
																		"nodeType": "YulBlock",
																		"src": "4372:611:8",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:8",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:8"
																							},
																							"nativeSrc": "4413:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:8"
																					},
																					"nativeSrc": "4401:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:8",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:8"
																					},
																					"nativeSrc": "4451:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:8",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:8",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:8",
																					"nodeType": "YulBlock",
																					"src": "4569:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:8"
																												},
																												"nativeSrc": "4608:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:8"
																										},
																										"nativeSrc": "4602:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:8"
																								},
																								"nativeSrc": "4587:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:8"
																							},
																							"nativeSrc": "4587:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:8"
																						},
																						{
																							"nativeSrc": "4646:24:8",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:8",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:8"
																								},
																								"nativeSrc": "4656:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:8",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:8",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:8"
																								},
																								"nativeSrc": "4700:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:8"
																					},
																					"nativeSrc": "4532:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:8"
																				},
																				"nativeSrc": "4524:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:8",
																					"nodeType": "YulBlock",
																					"src": "4547:21:8",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:8",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:8",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:8"
																								},
																								"nativeSrc": "4554:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:8",
																					"nodeType": "YulBlock",
																					"src": "4528:3:8",
																					"statements": []
																				},
																				"src": "4524:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:8",
																					"nodeType": "YulBlock",
																					"src": "4768:156:8",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:8"
																										},
																										"nativeSrc": "4809:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:8"
																								},
																								"nativeSrc": "4803:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:8",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:8",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:8"
																												},
																												"nativeSrc": "4891:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:8"
																										},
																										"nativeSrc": "4861:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:8"
																								},
																								"nativeSrc": "4846:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:8"
																							},
																							"nativeSrc": "4846:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:8"
																					},
																					"nativeSrc": "4748:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:8"
																				},
																				"nativeSrc": "4745:179:8",
																				"nodeType": "YulIf",
																				"src": "4745:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:8",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:8"
																									},
																									"nativeSrc": "4954:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:8",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:8"
																							},
																							"nativeSrc": "4950:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:8"
																					},
																					"nativeSrc": "4937:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:8"
																				},
																				"nativeSrc": "4937:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:8"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:8",
																	"nodeType": "YulCase",
																	"src": "4365:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:8",
																		"nodeType": "YulBlock",
																		"src": "5000:222:8",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:8",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:8",
																					"nodeType": "YulBlock",
																					"src": "5051:67:8",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:8",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:8"
																										},
																										"nativeSrc": "5084:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:8"
																								},
																								"nativeSrc": "5078:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:8"
																				},
																				"nativeSrc": "5041:77:8",
																				"nodeType": "YulIf",
																				"src": "5041:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:8"
																							},
																							"nativeSrc": "5144:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:8"
																					},
																					"nativeSrc": "5131:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:8"
																				},
																				"nativeSrc": "5131:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:8"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:8",
																	"nodeType": "YulCase",
																	"src": "4992:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:8"
																},
																"nativeSrc": "4342:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:8"
															},
															"nativeSrc": "4335:887:8",
															"nodeType": "YulSwitch",
															"src": "4335:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:8",
														"nodeType": "YulTypedName",
														"src": "3914:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:8",
														"nodeType": "YulTypedName",
														"src": "3920:3:8",
														"type": ""
													}
												],
												"src": "3833:1395:8"
											},
											{
												"body": {
													"nativeSrc": "5262:152:8",
													"nodeType": "YulBlock",
													"src": "5262:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5279:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5282:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:8"
																},
																"nativeSrc": "5272:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5272:88:8"
															},
															"nativeSrc": "5272:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5376:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5379:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:8"
																},
																"nativeSrc": "5369:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5369:15:8"
															},
															"nativeSrc": "5369:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5400:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5393:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:8"
																},
																"nativeSrc": "5393:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5393:15:8"
															},
															"nativeSrc": "5393:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5234:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:8"
											},
											{
												"body": {
													"nativeSrc": "5471:51:8",
													"nodeType": "YulBlock",
													"src": "5471:51:8",
													"statements": [
														{
															"nativeSrc": "5481:34:8",
															"nodeType": "YulAssignment",
															"src": "5481:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5506:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5509:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:8"
																},
																"nativeSrc": "5502:13:8",
																"nodeType": "YulFunctionCall",
																"src": "5502:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5481:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5420:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5452:5:8",
														"nodeType": "YulTypedName",
														"src": "5452:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5462:8:8",
														"nodeType": "YulTypedName",
														"src": "5462:8:8",
														"type": ""
													}
												],
												"src": "5420:102:8"
											},
											{
												"body": {
													"nativeSrc": "5601:775:8",
													"nodeType": "YulBlock",
													"src": "5601:775:8",
													"statements": [
														{
															"nativeSrc": "5611:15:8",
															"nodeType": "YulAssignment",
															"src": "5611:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "5620:6:8",
																"nodeType": "YulIdentifier",
																"src": "5620:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5611:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:8"
																}
															]
														},
														{
															"nativeSrc": "5635:14:8",
															"nodeType": "YulAssignment",
															"src": "5635:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "5644:5:8",
																"nodeType": "YulIdentifier",
																"src": "5644:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5635:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5693:677:8",
																"nodeType": "YulBlock",
																"src": "5693:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5781:22:8",
																			"nodeType": "YulBlock",
																			"src": "5781:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5783:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:8"
																						},
																						"nativeSrc": "5783:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:8"
																					},
																					"nativeSrc": "5783:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5759:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5769:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5774:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5765:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:8"
																					},
																					"nativeSrc": "5765:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5756:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:8"
																			},
																			"nativeSrc": "5756:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:8"
																		},
																		"nativeSrc": "5753:50:8",
																		"nodeType": "YulIf",
																		"src": "5753:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "5848:419:8",
																			"nodeType": "YulBlock",
																			"src": "5848:419:8",
																			"statements": [
																				{
																					"nativeSrc": "6228:25:8",
																					"nodeType": "YulAssignment",
																					"src": "6228:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6241:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6248:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6237:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:8"
																						},
																						"nativeSrc": "6237:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6228:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5823:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5833:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5819:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:8"
																			},
																			"nativeSrc": "5819:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:8"
																		},
																		"nativeSrc": "5816:451:8",
																		"nodeType": "YulIf",
																		"src": "5816:451:8"
																	},
																	{
																		"nativeSrc": "6280:23:8",
																		"nodeType": "YulAssignment",
																		"src": "6280:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6292:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6298:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6288:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:8"
																			},
																			"nativeSrc": "6288:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6280:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6316:44:8",
																		"nodeType": "YulAssignment",
																		"src": "6316:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6351:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6328:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:8"
																			},
																			"nativeSrc": "6328:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6316:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5669:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5679:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5666:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:8"
																},
																"nativeSrc": "5666:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5666:15:8"
															},
															"nativeSrc": "5658:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5682:2:8",
																"nodeType": "YulBlock",
																"src": "5682:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5662:3:8",
																"nodeType": "YulBlock",
																"src": "5662:3:8",
																"statements": []
															},
															"src": "5658:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5528:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5556:6:8",
														"nodeType": "YulTypedName",
														"src": "5556:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5564:5:8",
														"nodeType": "YulTypedName",
														"src": "5564:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5571:8:8",
														"nodeType": "YulTypedName",
														"src": "5571:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5581:3:8",
														"nodeType": "YulTypedName",
														"src": "5581:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5589:5:8",
														"nodeType": "YulTypedName",
														"src": "5589:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5596:4:8",
														"nodeType": "YulTypedName",
														"src": "5596:4:8",
														"type": ""
													}
												],
												"src": "5528:848:8"
											},
											{
												"body": {
													"nativeSrc": "6442:1013:8",
													"nodeType": "YulBlock",
													"src": "6442:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6637:20:8",
																"nodeType": "YulBlock",
																"src": "6637:20:8",
																"statements": [
																	{
																		"nativeSrc": "6639:10:8",
																		"nodeType": "YulAssignment",
																		"src": "6639:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6648:1:8",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6639:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6650:5:8",
																		"nodeType": "YulLeave",
																		"src": "6650:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6627:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6620:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:8"
																},
																"nativeSrc": "6620:16:8",
																"nodeType": "YulFunctionCall",
																"src": "6620:16:8"
															},
															"nativeSrc": "6617:40:8",
															"nodeType": "YulIf",
															"src": "6617:40:8"
														},
														{
															"body": {
																"nativeSrc": "6682:20:8",
																"nodeType": "YulBlock",
																"src": "6682:20:8",
																"statements": [
																	{
																		"nativeSrc": "6684:10:8",
																		"nodeType": "YulAssignment",
																		"src": "6684:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6693:1:8",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6684:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6695:5:8",
																		"nodeType": "YulLeave",
																		"src": "6695:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6676:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6669:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:8"
																},
																"nativeSrc": "6669:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6669:12:8"
															},
															"nativeSrc": "6666:36:8",
															"nodeType": "YulIf",
															"src": "6666:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6812:20:8",
																		"nodeType": "YulBlock",
																		"src": "6812:20:8",
																		"statements": [
																			{
																				"nativeSrc": "6814:10:8",
																				"nodeType": "YulAssignment",
																				"src": "6814:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6823:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6814:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6825:5:8",
																				"nodeType": "YulLeave",
																				"src": "6825:5:8"
																			}
																		]
																	},
																	"nativeSrc": "6805:27:8",
																	"nodeType": "YulCase",
																	"src": "6805:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6810:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6856:176:8",
																		"nodeType": "YulBlock",
																		"src": "6856:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6891:22:8",
																					"nodeType": "YulBlock",
																					"src": "6891:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6893:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:8"
																								},
																								"nativeSrc": "6893:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:8"
																							},
																							"nativeSrc": "6893:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6876:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6886:3:8",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6873:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:8"
																					},
																					"nativeSrc": "6873:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:8"
																				},
																				"nativeSrc": "6870:43:8",
																				"nodeType": "YulIf",
																				"src": "6870:43:8"
																			},
																			{
																				"nativeSrc": "6926:25:8",
																				"nodeType": "YulAssignment",
																				"src": "6926:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6939:1:8",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6942:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6935:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:8"
																					},
																					"nativeSrc": "6935:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6926:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6982:22:8",
																					"nodeType": "YulBlock",
																					"src": "6982:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6984:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:8"
																								},
																								"nativeSrc": "6984:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:8"
																							},
																							"nativeSrc": "6984:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6970:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6977:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6967:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:8"
																					},
																					"nativeSrc": "6967:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:8"
																				},
																				"nativeSrc": "6964:40:8",
																				"nodeType": "YulIf",
																				"src": "6964:40:8"
																			},
																			{
																				"nativeSrc": "7017:5:8",
																				"nodeType": "YulLeave",
																				"src": "7017:5:8"
																			}
																		]
																	},
																	"nativeSrc": "6841:191:8",
																	"nodeType": "YulCase",
																	"src": "6841:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6846:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6762:4:8",
																"nodeType": "YulIdentifier",
																"src": "6762:4:8"
															},
															"nativeSrc": "6755:277:8",
															"nodeType": "YulSwitch",
															"src": "6755:277:8"
														},
														{
															"body": {
																"nativeSrc": "7164:123:8",
																"nodeType": "YulBlock",
																"src": "7164:123:8",
																"statements": [
																	{
																		"nativeSrc": "7178:28:8",
																		"nodeType": "YulAssignment",
																		"src": "7178:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7191:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7197:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7187:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:8"
																			},
																			"nativeSrc": "7187:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7178:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7237:22:8",
																			"nodeType": "YulBlock",
																			"src": "7237:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7239:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:8"
																						},
																						"nativeSrc": "7239:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:8"
																					},
																					"nativeSrc": "7239:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7225:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7232:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7222:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:8"
																			},
																			"nativeSrc": "7222:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:8"
																		},
																		"nativeSrc": "7219:40:8",
																		"nodeType": "YulIf",
																		"src": "7219:40:8"
																	},
																	{
																		"nativeSrc": "7272:5:8",
																		"nodeType": "YulLeave",
																		"src": "7272:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7067:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7073:2:8",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7064:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:8"
																				},
																				"nativeSrc": "7064:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7081:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7091:2:8",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7078:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:8"
																				},
																				"nativeSrc": "7078:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7060:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:8"
																		},
																		"nativeSrc": "7060:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7116:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7122:3:8",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7113:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:8"
																				},
																				"nativeSrc": "7113:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7131:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7141:2:8",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7128:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:8"
																				},
																				"nativeSrc": "7128:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7109:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:8"
																		},
																		"nativeSrc": "7109:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7044:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:8"
																},
																"nativeSrc": "7044:111:8",
																"nodeType": "YulFunctionCall",
																"src": "7044:111:8"
															},
															"nativeSrc": "7041:246:8",
															"nodeType": "YulIf",
															"src": "7041:246:8"
														},
														{
															"nativeSrc": "7297:57:8",
															"nodeType": "YulAssignment",
															"src": "7297:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7331:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7334:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7340:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7350:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7312:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:8"
																},
																"nativeSrc": "7312:42:8",
																"nodeType": "YulFunctionCall",
																"src": "7312:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7297:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "7304:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7393:22:8",
																"nodeType": "YulBlock",
																"src": "7393:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7395:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:8"
																			},
																			"nativeSrc": "7395:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:8"
																		},
																		"nativeSrc": "7395:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7370:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7381:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7386:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7377:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:8"
																		},
																		"nativeSrc": "7377:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7367:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:8"
																},
																"nativeSrc": "7367:25:8",
																"nodeType": "YulFunctionCall",
																"src": "7367:25:8"
															},
															"nativeSrc": "7364:51:8",
															"nodeType": "YulIf",
															"src": "7364:51:8"
														},
														{
															"nativeSrc": "7424:25:8",
															"nodeType": "YulAssignment",
															"src": "7424:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7437:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7444:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7433:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:8"
																},
																"nativeSrc": "7433:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7433:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7424:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6382:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6412:4:8",
														"nodeType": "YulTypedName",
														"src": "6412:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6418:8:8",
														"nodeType": "YulTypedName",
														"src": "6418:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6428:3:8",
														"nodeType": "YulTypedName",
														"src": "6428:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6436:5:8",
														"nodeType": "YulTypedName",
														"src": "6436:5:8",
														"type": ""
													}
												],
												"src": "6382:1073:8"
											},
											{
												"body": {
													"nativeSrc": "7504:43:8",
													"nodeType": "YulBlock",
													"src": "7504:43:8",
													"statements": [
														{
															"nativeSrc": "7514:27:8",
															"nodeType": "YulAssignment",
															"src": "7514:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7529:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7529:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7536:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7536:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7525:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:8"
																},
																"nativeSrc": "7525:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7525:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7514:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "7514:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7461:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7486:5:8",
														"nodeType": "YulTypedName",
														"src": "7486:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7496:7:8",
														"nodeType": "YulTypedName",
														"src": "7496:7:8",
														"type": ""
													}
												],
												"src": "7461:86:8"
											},
											{
												"body": {
													"nativeSrc": "7617:217:8",
													"nodeType": "YulBlock",
													"src": "7617:217:8",
													"statements": [
														{
															"nativeSrc": "7627:31:8",
															"nodeType": "YulAssignment",
															"src": "7627:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7653:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7653:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7635:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7635:17:8"
																},
																"nativeSrc": "7635:23:8",
																"nodeType": "YulFunctionCall",
																"src": "7635:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7627:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:8"
																}
															]
														},
														{
															"nativeSrc": "7667:37:8",
															"nodeType": "YulAssignment",
															"src": "7667:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7695:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "7695:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "7679:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "7679:15:8"
																},
																"nativeSrc": "7679:25:8",
																"nodeType": "YulFunctionCall",
																"src": "7679:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7667:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7667:8:8"
																}
															]
														},
														{
															"nativeSrc": "7714:113:8",
															"nodeType": "YulAssignment",
															"src": "7714:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7744:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7744:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7750:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "7750:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7760:66:8",
																		"nodeType": "YulLiteral",
																		"src": "7760:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7723:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "7723:20:8"
																},
																"nativeSrc": "7723:104:8",
																"nodeType": "YulFunctionCall",
																"src": "7723:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7714:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7714:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "7553:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7592:4:8",
														"nodeType": "YulTypedName",
														"src": "7592:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7598:8:8",
														"nodeType": "YulTypedName",
														"src": "7598:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7611:5:8",
														"nodeType": "YulTypedName",
														"src": "7611:5:8",
														"type": ""
													}
												],
												"src": "7553:281:8"
											},
											{
												"body": {
													"nativeSrc": "7888:362:8",
													"nodeType": "YulBlock",
													"src": "7888:362:8",
													"statements": [
														{
															"nativeSrc": "7898:25:8",
															"nodeType": "YulAssignment",
															"src": "7898:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7921:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7921:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7903:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7903:17:8"
																},
																"nativeSrc": "7903:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7903:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7898:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7898:1:8"
																}
															]
														},
														{
															"nativeSrc": "7932:25:8",
															"nodeType": "YulAssignment",
															"src": "7932:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7955:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7955:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7937:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7937:17:8"
																},
																"nativeSrc": "7937:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7937:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7932:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7932:1:8"
																}
															]
														},
														{
															"nativeSrc": "7966:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7966:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7989:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7992:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7992:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7985:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:8"
																},
																"nativeSrc": "7985:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7985:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7970:11:8",
																	"nodeType": "YulTypedName",
																	"src": "7970:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8003:41:8",
															"nodeType": "YulAssignment",
															"src": "8003:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8032:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "8032:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8014:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8014:17:8"
																},
																"nativeSrc": "8014:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8014:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8003:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8003:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8221:22:8",
																"nodeType": "YulBlock",
																"src": "8221:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8223:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8223:16:8"
																			},
																			"nativeSrc": "8223:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8223:18:8"
																		},
																		"nativeSrc": "8223:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8154:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "8154:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8147:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8147:6:8"
																				},
																				"nativeSrc": "8147:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8147:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8177:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "8177:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8184:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "8184:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8193:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "8193:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8180:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8180:3:8"
																						},
																						"nativeSrc": "8180:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8180:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8174:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8174:2:8"
																				},
																				"nativeSrc": "8174:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8174:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8127:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8127:2:8"
																		},
																		"nativeSrc": "8127:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8127:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8107:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:8"
																},
																"nativeSrc": "8107:113:8",
																"nodeType": "YulFunctionCall",
																"src": "8107:113:8"
															},
															"nativeSrc": "8104:139:8",
															"nodeType": "YulIf",
															"src": "8104:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7840:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7871:1:8",
														"nodeType": "YulTypedName",
														"src": "7871:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7874:1:8",
														"nodeType": "YulTypedName",
														"src": "7874:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7880:7:8",
														"nodeType": "YulTypedName",
														"src": "7880:7:8",
														"type": ""
													}
												],
												"src": "7840:410:8"
											},
											{
												"body": {
													"nativeSrc": "8301:81:8",
													"nodeType": "YulBlock",
													"src": "8301:81:8",
													"statements": [
														{
															"nativeSrc": "8311:65:8",
															"nodeType": "YulAssignment",
															"src": "8311:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8326:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8326:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8333:42:8",
																		"nodeType": "YulLiteral",
																		"src": "8333:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8322:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:8"
																},
																"nativeSrc": "8322:54:8",
																"nodeType": "YulFunctionCall",
																"src": "8322:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8311:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8311:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8256:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8283:5:8",
														"nodeType": "YulTypedName",
														"src": "8283:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8293:7:8",
														"nodeType": "YulTypedName",
														"src": "8293:7:8",
														"type": ""
													}
												],
												"src": "8256:126:8"
											},
											{
												"body": {
													"nativeSrc": "8433:51:8",
													"nodeType": "YulBlock",
													"src": "8433:51:8",
													"statements": [
														{
															"nativeSrc": "8443:35:8",
															"nodeType": "YulAssignment",
															"src": "8443:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8472:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8472:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8454:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8454:17:8"
																},
																"nativeSrc": "8454:24:8",
																"nodeType": "YulFunctionCall",
																"src": "8454:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8443:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8443:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8388:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8415:5:8",
														"nodeType": "YulTypedName",
														"src": "8415:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8425:7:8",
														"nodeType": "YulTypedName",
														"src": "8425:7:8",
														"type": ""
													}
												],
												"src": "8388:96:8"
											},
											{
												"body": {
													"nativeSrc": "8555:53:8",
													"nodeType": "YulBlock",
													"src": "8555:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8572:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8572:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8595:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8595:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8577:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "8577:17:8"
																		},
																		"nativeSrc": "8577:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:8"
																},
																"nativeSrc": "8565:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8565:37:8"
															},
															"nativeSrc": "8565:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8565:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8490:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8543:5:8",
														"nodeType": "YulTypedName",
														"src": "8543:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8550:3:8",
														"nodeType": "YulTypedName",
														"src": "8550:3:8",
														"type": ""
													}
												],
												"src": "8490:118:8"
											},
											{
												"body": {
													"nativeSrc": "8712:124:8",
													"nodeType": "YulBlock",
													"src": "8712:124:8",
													"statements": [
														{
															"nativeSrc": "8722:26:8",
															"nodeType": "YulAssignment",
															"src": "8722:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8734:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8734:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8745:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8745:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8730:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:8"
																},
																"nativeSrc": "8730:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8730:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8722:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8722:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8802:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8826:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:8"
																		},
																		"nativeSrc": "8811:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8758:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:8"
																},
																"nativeSrc": "8758:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8758:71:8"
															},
															"nativeSrc": "8758:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8758:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8614:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8684:9:8",
														"nodeType": "YulTypedName",
														"src": "8684:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8696:6:8",
														"nodeType": "YulTypedName",
														"src": "8696:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8707:4:8",
														"nodeType": "YulTypedName",
														"src": "8707:4:8",
														"type": ""
													}
												],
												"src": "8614:222:8"
											},
											{
												"body": {
													"nativeSrc": "8886:147:8",
													"nodeType": "YulBlock",
													"src": "8886:147:8",
													"statements": [
														{
															"nativeSrc": "8896:25:8",
															"nodeType": "YulAssignment",
															"src": "8896:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8919:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8919:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8901:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8901:17:8"
																},
																"nativeSrc": "8901:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8901:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8896:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8896:1:8"
																}
															]
														},
														{
															"nativeSrc": "8930:25:8",
															"nodeType": "YulAssignment",
															"src": "8930:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8935:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8935:17:8"
																},
																"nativeSrc": "8935:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8935:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8930:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8930:1:8"
																}
															]
														},
														{
															"nativeSrc": "8964:16:8",
															"nodeType": "YulAssignment",
															"src": "8964:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8975:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8975:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8978:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8978:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8971:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8971:3:8"
																},
																"nativeSrc": "8971:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8971:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8964:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9004:22:8",
																"nodeType": "YulBlock",
																"src": "9004:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9006:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9006:16:8"
																			},
																			"nativeSrc": "9006:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9006:18:8"
																		},
																		"nativeSrc": "9006:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9006:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8996:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8999:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8999:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8993:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8993:2:8"
																},
																"nativeSrc": "8993:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8993:10:8"
															},
															"nativeSrc": "8990:36:8",
															"nodeType": "YulIf",
															"src": "8990:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8842:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8873:1:8",
														"nodeType": "YulTypedName",
														"src": "8873:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8876:1:8",
														"nodeType": "YulTypedName",
														"src": "8876:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8882:3:8",
														"nodeType": "YulTypedName",
														"src": "8882:3:8",
														"type": ""
													}
												],
												"src": "8842:191:8"
											},
											{
												"body": {
													"nativeSrc": "9104:53:8",
													"nodeType": "YulBlock",
													"src": "9104:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9121:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9121:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9144:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9144:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9126:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9126:17:8"
																		},
																		"nativeSrc": "9126:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:8"
																},
																"nativeSrc": "9114:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9114:37:8"
															},
															"nativeSrc": "9114:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "9114:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9039:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9092:5:8",
														"nodeType": "YulTypedName",
														"src": "9092:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9099:3:8",
														"nodeType": "YulTypedName",
														"src": "9099:3:8",
														"type": ""
													}
												],
												"src": "9039:118:8"
											},
											{
												"body": {
													"nativeSrc": "9317:288:8",
													"nodeType": "YulBlock",
													"src": "9317:288:8",
													"statements": [
														{
															"nativeSrc": "9327:26:8",
															"nodeType": "YulAssignment",
															"src": "9327:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9339:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9339:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9350:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9350:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9335:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9335:3:8"
																},
																"nativeSrc": "9335:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9335:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9327:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9407:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9407:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9420:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9420:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9431:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9431:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9416:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:8"
																		},
																		"nativeSrc": "9416:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9363:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9363:43:8"
																},
																"nativeSrc": "9363:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9363:71:8"
															},
															"nativeSrc": "9363:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9363:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9488:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9488:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9501:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9512:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9512:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9497:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:8"
																		},
																		"nativeSrc": "9497:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9444:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9444:43:8"
																},
																"nativeSrc": "9444:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9444:72:8"
															},
															"nativeSrc": "9444:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9444:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9570:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9570:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9583:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9583:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9594:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9594:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9579:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:8"
																		},
																		"nativeSrc": "9579:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9579:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9526:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9526:43:8"
																},
																"nativeSrc": "9526:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9526:72:8"
															},
															"nativeSrc": "9526:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9526:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9163:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9273:9:8",
														"nodeType": "YulTypedName",
														"src": "9273:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9285:6:8",
														"nodeType": "YulTypedName",
														"src": "9285:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9293:6:8",
														"nodeType": "YulTypedName",
														"src": "9293:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9301:6:8",
														"nodeType": "YulTypedName",
														"src": "9301:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9312:4:8",
														"nodeType": "YulTypedName",
														"src": "9312:4:8",
														"type": ""
													}
												],
												"src": "9163:442:8"
											},
											{
												"body": {
													"nativeSrc": "9709:124:8",
													"nodeType": "YulBlock",
													"src": "9709:124:8",
													"statements": [
														{
															"nativeSrc": "9719:26:8",
															"nodeType": "YulAssignment",
															"src": "9719:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9731:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9742:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9727:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:8"
																},
																"nativeSrc": "9727:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9727:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9719:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9799:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9823:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:8"
																		},
																		"nativeSrc": "9808:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9755:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9755:43:8"
																},
																"nativeSrc": "9755:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9755:71:8"
															},
															"nativeSrc": "9755:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9755:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9611:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9681:9:8",
														"nodeType": "YulTypedName",
														"src": "9681:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9693:6:8",
														"nodeType": "YulTypedName",
														"src": "9693:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9704:4:8",
														"nodeType": "YulTypedName",
														"src": "9704:4:8",
														"type": ""
													}
												],
												"src": "9611:222:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280601281526020017f44696e676c654d794a696e676c6528544d2900000000000000000000000000008152506040518060400160405280600381526020017f444d4a000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000628565b508060049081620000a1919062000628565b505050620000e233620000b9620000e860201b60201c565b600a620000c791906200089f565b6103e8620000d69190620008f0565b620000f160201b60201c565b62000a43565b60006008905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001665760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200015d919062000980565b60405180910390fd5b6200017a600083836200017e60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001d4578060026000828254620001c791906200099d565b92505081905550620002aa565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000263578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200025a93929190620009e9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002f5578060026000828254039250508190555062000342565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003a1919062000a26565b60405180910390a3505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200043057607f821691505b602082108103620004465762000445620003e8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004b07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000471565b620004bc868362000471565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200050962000503620004fd84620004d4565b620004de565b620004d4565b9050919050565b6000819050919050565b6200052583620004e8565b6200053d620005348262000510565b8484546200047e565b825550505050565b600090565b6200055462000545565b620005618184846200051a565b505050565b5b8181101562000589576200057d6000826200054a565b60018101905062000567565b5050565b601f821115620005d857620005a2816200044c565b620005ad8462000461565b81016020851015620005bd578190505b620005d5620005cc8562000461565b83018262000566565b50505b505050565b600082821c905092915050565b6000620005fd60001984600802620005dd565b1980831691505092915050565b6000620006188383620005ea565b9150826002028217905092915050565b6200063382620003ae565b67ffffffffffffffff8111156200064f576200064e620003b9565b5b6200065b825462000417565b620006688282856200058d565b600060209050601f831160018114620006a057600084156200068b578287015190505b6200069785826200060a565b86555062000707565b601f198416620006b0866200044c565b60005b82811015620006da57848901518255600182019150602085019450602081019050620006b3565b86831015620006fa5784890151620006f6601f891682620005ea565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200079d578086048111156200077557620007746200070f565b5b6001851615620007855780820291505b808102905062000795856200073e565b945062000755565b94509492505050565b600082620007b857600190506200088b565b81620007c857600090506200088b565b8160018114620007e15760028114620007ec5762000822565b60019150506200088b565b60ff8411156200080157620008006200070f565b5b8360020a9150848211156200081b576200081a6200070f565b5b506200088b565b5060208310610133831016604e8410600b84101617156200085c5782820a9050838111156200085657620008556200070f565b5b6200088b565b6200086b84848460016200074b565b925090508184048111156200088557620008846200070f565b5b81810290505b9392505050565b600060ff82169050919050565b6000620008ac82620004d4565b9150620008b98362000892565b9250620008e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620007a6565b905092915050565b6000620008fd82620004d4565b91506200090a83620004d4565b92508282026200091a81620004d4565b915082820484148315176200093457620009336200070f565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000968826200093b565b9050919050565b6200097a816200095b565b82525050565b60006020820190506200099760008301846200096f565b92915050565b6000620009aa82620004d4565b9150620009b783620004d4565b9250828201905080821115620009d257620009d16200070f565b5b92915050565b620009e381620004d4565b82525050565b600060608201905062000a0060008301866200096f565b62000a0f6020830185620009d8565b62000a1e6040830184620009d8565b949350505050565b600060208201905062000a3d6000830184620009d8565b92915050565b6110d18062000a536000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461017a57806370a082311461019857806395d89b41146101c8578063a9059cbb146101e6578063b026ba5714610216578063dd62ed3e14610220576100a9565b806301ffc9a7146100ae57806306fdde03146100de578063095ea7b3146100fc57806318160ddd1461012c57806323b872dd1461014a575b600080fd5b6100c860048036038101906100c39190610c6d565b610250565b6040516100d59190610cb5565b60405180910390f35b6100e66103f2565b6040516100f39190610d60565b60405180910390f35b61011660048036038101906101119190610e16565b610484565b6040516101239190610cb5565b60405180910390f35b6101346104a7565b6040516101419190610e65565b60405180910390f35b610164600480360381019061015f9190610e80565b6104b1565b6040516101719190610cb5565b60405180910390f35b6101826104e0565b60405161018f9190610eef565b60405180910390f35b6101b260048036038101906101ad9190610f0a565b6104e9565b6040516101bf9190610e65565b60405180910390f35b6101d0610531565b6040516101dd9190610d60565b60405180910390f35b61020060048036038101906101fb9190610e16565b6105c3565b60405161020d9190610cb5565b60405180910390f35b61021e6105e6565b005b61023a60048036038101906102359190610f37565b6105eb565b6040516102479190610e65565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061031b57507f36372b07000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061038357507fa219a025000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103eb57507fb026ba57000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606003805461040190610fa6565b80601f016020809104026020016040519081016040528092919081815260200182805461042d90610fa6565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b5050505050905090565b60008061048f610672565b905061049c81858561067a565b600191505092915050565b6000600254905090565b6000806104bc610672565b90506104c985828561068c565b6104d4858585610720565b60019150509392505050565b60006008905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461054090610fa6565b80601f016020809104026020016040519081016040528092919081815260200182805461056c90610fa6565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050905090565b6000806105ce610672565b90506105db818585610720565b600191505092915050565b600080fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6106878383836001610814565b505050565b600061069884846105eb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461071a578181101561070a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161070193929190610fe6565b60405180910390fd5b61071984848484036000610814565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107925760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610789919061101d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108045760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107fb919061101d565b60405180910390fd5b61080f8383836109eb565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108865760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161087d919061101d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108f85760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108ef919061101d565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156109e5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109dc9190610e65565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a3d578060026000828254610a319190611067565b92505081905550610b10565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ac9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ac093929190610fe6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b595780600260008282540392505081905550610ba6565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c039190610e65565b60405180910390a3505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610c4a81610c15565b8114610c5557600080fd5b50565b600081359050610c6781610c41565b92915050565b600060208284031215610c8357610c82610c10565b5b6000610c9184828501610c58565b91505092915050565b60008115159050919050565b610caf81610c9a565b82525050565b6000602082019050610cca6000830184610ca6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d0a578082015181840152602081019050610cef565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d3282610cd0565b610d3c8185610cdb565b9350610d4c818560208601610cec565b610d5581610d16565b840191505092915050565b60006020820190508181036000830152610d7a8184610d27565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dad82610d82565b9050919050565b610dbd81610da2565b8114610dc857600080fd5b50565b600081359050610dda81610db4565b92915050565b6000819050919050565b610df381610de0565b8114610dfe57600080fd5b50565b600081359050610e1081610dea565b92915050565b60008060408385031215610e2d57610e2c610c10565b5b6000610e3b85828601610dcb565b9250506020610e4c85828601610e01565b9150509250929050565b610e5f81610de0565b82525050565b6000602082019050610e7a6000830184610e56565b92915050565b600080600060608486031215610e9957610e98610c10565b5b6000610ea786828701610dcb565b9350506020610eb886828701610dcb565b9250506040610ec986828701610e01565b9150509250925092565b600060ff82169050919050565b610ee981610ed3565b82525050565b6000602082019050610f046000830184610ee0565b92915050565b600060208284031215610f2057610f1f610c10565b5b6000610f2e84828501610dcb565b91505092915050565b60008060408385031215610f4e57610f4d610c10565b5b6000610f5c85828601610dcb565b9250506020610f6d85828601610dcb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fbe57607f821691505b602082108103610fd157610fd0610f77565b5b50919050565b610fe081610da2565b82525050565b6000606082019050610ffb6000830186610fd7565b6110086020830185610e56565b6110156040830184610e56565b949350505050565b60006020820190506110326000830184610fd7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061107282610de0565b915061107d83610de0565b925082820190508082111561109557611094611038565b5b9291505056fea2646970667358221220b6ac5c85849a0c6ddc91ac1080ea7b7e56b7e3b2a689fb9b94543bc7e88c8e1e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44696E676C654D794A696E676C6528544D290000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444D4A0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x628 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x628 JUMP JUMPDEST POP POP POP PUSH3 0xE2 CALLER PUSH3 0xB9 PUSH3 0xE8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x89F JUMP JUMPDEST PUSH2 0x3E8 PUSH3 0xD6 SWAP2 SWAP1 PUSH3 0x8F0 JUMP JUMPDEST PUSH3 0xF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x166 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x15D SWAP2 SWAP1 PUSH3 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x17A PUSH1 0x0 DUP4 DUP4 PUSH3 0x17E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1D4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1C7 SWAP2 SWAP1 PUSH3 0x99D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x2AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x263 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x25A SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2F5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x342 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x3A1 SWAP2 SWAP1 PUSH3 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x430 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x446 JUMPI PUSH3 0x445 PUSH3 0x3E8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x4B0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x471 JUMP JUMPDEST PUSH3 0x4BC DUP7 DUP4 PUSH3 0x471 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x509 PUSH3 0x503 PUSH3 0x4FD DUP5 PUSH3 0x4D4 JUMP JUMPDEST PUSH3 0x4DE JUMP JUMPDEST PUSH3 0x4D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x525 DUP4 PUSH3 0x4E8 JUMP JUMPDEST PUSH3 0x53D PUSH3 0x534 DUP3 PUSH3 0x510 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x47E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x554 PUSH3 0x545 JUMP JUMPDEST PUSH3 0x561 DUP2 DUP5 DUP5 PUSH3 0x51A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x589 JUMPI PUSH3 0x57D PUSH1 0x0 DUP3 PUSH3 0x54A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x567 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x5D8 JUMPI PUSH3 0x5A2 DUP2 PUSH3 0x44C JUMP JUMPDEST PUSH3 0x5AD DUP5 PUSH3 0x461 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x5BD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x5D5 PUSH3 0x5CC DUP6 PUSH3 0x461 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x566 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x5DD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x618 DUP4 DUP4 PUSH3 0x5EA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x633 DUP3 PUSH3 0x3AE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x64F JUMPI PUSH3 0x64E PUSH3 0x3B9 JUMP JUMPDEST JUMPDEST PUSH3 0x65B DUP3 SLOAD PUSH3 0x417 JUMP JUMPDEST PUSH3 0x668 DUP3 DUP3 DUP6 PUSH3 0x58D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6A0 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x68B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x697 DUP6 DUP3 PUSH3 0x60A JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x707 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x6B0 DUP7 PUSH3 0x44C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6DA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6B3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6FA JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6F6 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x5EA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x79D JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x775 JUMPI PUSH3 0x774 PUSH3 0x70F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x785 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x795 DUP6 PUSH3 0x73E JUMP JUMPDEST SWAP5 POP PUSH3 0x755 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x7B8 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x88B JUMP JUMPDEST DUP2 PUSH3 0x7C8 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x88B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x7E1 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x7EC JUMPI PUSH3 0x822 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x88B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x801 JUMPI PUSH3 0x800 PUSH3 0x70F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x81B JUMPI PUSH3 0x81A PUSH3 0x70F JUMP JUMPDEST JUMPDEST POP PUSH3 0x88B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x85C JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x856 JUMPI PUSH3 0x855 PUSH3 0x70F JUMP JUMPDEST JUMPDEST PUSH3 0x88B JUMP JUMPDEST PUSH3 0x86B DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x74B JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x885 JUMPI PUSH3 0x884 PUSH3 0x70F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8AC DUP3 PUSH3 0x4D4 JUMP JUMPDEST SWAP2 POP PUSH3 0x8B9 DUP4 PUSH3 0x892 JUMP JUMPDEST SWAP3 POP PUSH3 0x8E8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x7A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8FD DUP3 PUSH3 0x4D4 JUMP JUMPDEST SWAP2 POP PUSH3 0x90A DUP4 PUSH3 0x4D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x91A DUP2 PUSH3 0x4D4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x934 JUMPI PUSH3 0x933 PUSH3 0x70F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x968 DUP3 PUSH3 0x93B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x97A DUP2 PUSH3 0x95B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x997 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x96F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9AA DUP3 PUSH3 0x4D4 JUMP JUMPDEST SWAP2 POP PUSH3 0x9B7 DUP4 PUSH3 0x4D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x9D2 JUMPI PUSH3 0x9D1 PUSH3 0x70F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x9E3 DUP2 PUSH3 0x4D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xA00 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x96F JUMP JUMPDEST PUSH3 0xA0F PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x9D8 JUMP JUMPDEST PUSH3 0xA1E PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x9D8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA3D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10D1 DUP1 PUSH3 0xA53 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xB026BA57 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0x5E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x31B JUMPI POP PUSH32 0x36372B0700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x383 JUMPI POP PUSH32 0xA219A02500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3EB JUMPI POP PUSH32 0xB026BA5700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0xFA6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0xFA6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48F PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x49C DUP2 DUP6 DUP6 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4BC PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x4C9 DUP6 DUP3 DUP6 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x4D4 DUP6 DUP6 DUP6 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x540 SWAP1 PUSH2 0xFA6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56C SWAP1 PUSH2 0xFA6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5CE PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x5DB DUP2 DUP6 DUP6 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x687 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x814 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 DUP5 DUP5 PUSH2 0x5EB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x71A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x70A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x701 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x719 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x814 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x792 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x804 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80F DUP4 DUP4 DUP4 PUSH2 0x9EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x886 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x9E5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x1067 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xAC9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBA6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0xC15 JUMP JUMPDEST DUP2 EQ PUSH2 0xC55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC67 DUP2 PUSH2 0xC41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP5 DUP3 DUP6 ADD PUSH2 0xC58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAF DUP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP3 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0xD3C DUP2 DUP6 PUSH2 0xCDB JUMP JUMPDEST SWAP4 POP PUSH2 0xD4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCEC JUMP JUMPDEST PUSH2 0xD55 DUP2 PUSH2 0xD16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7A DUP2 DUP5 PUSH2 0xD27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD DUP3 PUSH2 0xD82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBD DUP2 PUSH2 0xDA2 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDA DUP2 PUSH2 0xDB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF3 DUP2 PUSH2 0xDE0 JUMP JUMPDEST DUP2 EQ PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE10 DUP2 PUSH2 0xDEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH2 0xE2C PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE3B DUP6 DUP3 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE4C DUP6 DUP3 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5F DUP2 PUSH2 0xDE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP7 DUP3 DUP8 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEB8 DUP7 DUP3 DUP8 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEC9 DUP7 DUP3 DUP8 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE9 DUP2 PUSH2 0xED3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF1F PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2E DUP5 DUP3 DUP6 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4D PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF5C DUP6 DUP3 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF6D DUP6 DUP3 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFBE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFD1 JUMPI PUSH2 0xFD0 PUSH2 0xF77 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE0 DUP2 PUSH2 0xDA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFFB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x1008 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE56 JUMP JUMPDEST PUSH2 0x1015 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1032 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1072 DUP3 PUSH2 0xDE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x107D DUP4 PUSH2 0xDE0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1095 JUMPI PUSH2 0x1094 PUSH2 0x1038 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xAC TLOAD DUP6 DUP5 SWAP11 0xC PUSH14 0xDC91AC1080EA7B7E56B7E3B2A689 0xFB SWAP12 SWAP5 SLOAD EXTCODESIZE 0xC7 0xE8 DUP13 DUP15 0x1E PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "269:660:6:-:0;;;311:106;;;;;;;;;;1565:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1639:5;1631;:13;;;;;;:::i;:::-;;1664:7;1654;:17;;;;;;:::i;:::-;;1565:113;;370:40:6::1;376:10;399;:8;;;:10;;:::i;:::-;395:2;:14;;;;:::i;:::-;388:4;:21;;;;:::i;:::-;370:5;;;:40;;:::i;:::-;269:660:::0;;423:104;496:5;519:1;512:8;;423:104;:::o;7422:208:1:-;7511:1;7492:21;;:7;:21;;;7488:91;;7565:1;7536:32;;;;;;;;;;;:::i;:::-;;;;;;;;7488:91;7588:35;7604:1;7608:7;7617:5;7588:7;;;:35;;:::i;:::-;7422:208;;:::o;5972:1107::-;6077:1;6061:18;;:4;:18;;;6057:540;;6213:5;6197:12;;:21;;;;;;;:::i;:::-;;;;;;;;6057:540;;;6249:19;6271:9;:15;6281:4;6271:15;;;;;;;;;;;;;;;;6249:37;;6318:5;6304:11;:19;6300:115;;;6375:4;6381:11;6394:5;6350:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6300:115;6567:5;6553:11;:19;6535:9;:15;6545:4;6535:15;;;;;;;;;;;;;;;:37;;;;6235:362;6057:540;6625:1;6611:16;;:2;:16;;;6607:425;;6790:5;6774:12;;:21;;;;;;;;;;;6607:425;;;7002:5;6985:9;:13;6995:2;6985:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6607:425;7062:2;7047:25;;7056:4;7047:25;;;7066:5;7047:25;;;;;;:::i;:::-;;;;;;;;5972:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:86::-;7496:7;7536:4;7529:5;7525:16;7514:27;;7461:86;;;:::o;7553:281::-;7611:5;7635:23;7653:4;7635:23;:::i;:::-;7627:31;;7679:25;7695:8;7679:25;:::i;:::-;7667:37;;7723:104;7760:66;7750:8;7744:4;7723:104;:::i;:::-;7714:113;;7553:281;;;;:::o;7840:410::-;7880:7;7903:20;7921:1;7903:20;:::i;:::-;7898:25;;7937:20;7955:1;7937:20;:::i;:::-;7932:25;;7992:1;7989;7985:9;8014:30;8032:11;8014:30;:::i;:::-;8003:41;;8193:1;8184:7;8180:15;8177:1;8174:22;8154:1;8147:9;8127:83;8104:139;;8223:18;;:::i;:::-;8104:139;7888:362;7840:410;;;;:::o;8256:126::-;8293:7;8333:42;8326:5;8322:54;8311:65;;8256:126;;;:::o;8388:96::-;8425:7;8454:24;8472:5;8454:24;:::i;:::-;8443:35;;8388:96;;;:::o;8490:118::-;8577:24;8595:5;8577:24;:::i;:::-;8572:3;8565:37;8490:118;;:::o;8614:222::-;8707:4;8745:2;8734:9;8730:18;8722:26;;8758:71;8826:1;8815:9;8811:17;8802:6;8758:71;:::i;:::-;8614:222;;;;:::o;8842:191::-;8882:3;8901:20;8919:1;8901:20;:::i;:::-;8896:25;;8935:20;8953:1;8935:20;:::i;:::-;8930:25;;8978:1;8975;8971:9;8964:16;;8999:3;8996:1;8993:10;8990:36;;;9006:18;;:::i;:::-;8990:36;8842:191;;;;:::o;9039:118::-;9126:24;9144:5;9126:24;:::i;:::-;9121:3;9114:37;9039:118;;:::o;9163:442::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9363:71;9431:1;9420:9;9416:17;9407:6;9363:71;:::i;:::-;9444:72;9512:2;9501:9;9497:18;9488:6;9444:72;:::i;:::-;9526;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9163:442;;;;;;:::o;9611:222::-;9704:4;9742:2;9731:9;9727:18;9719:26;;9755:71;9823:1;9812:9;9808:17;9799:6;9755:71;:::i;:::-;9611:222;;;;:::o;269:660:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_435": {
									"entryPoint": 1658,
									"id": 435,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_495": {
									"entryPoint": 2068,
									"id": 495,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 1650,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_543": {
									"entryPoint": 1676,
									"id": 543,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_274": {
									"entryPoint": 1824,
									"id": 274,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_351": {
									"entryPoint": 2539,
									"id": 351,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_171": {
									"entryPoint": 1515,
									"id": 171,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_195": {
									"entryPoint": 1156,
									"id": 195,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_130": {
									"entryPoint": 1257,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_710": {
									"entryPoint": 1248,
									"id": 710,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_90": {
									"entryPoint": 1010,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@requestFunds_718": {
									"entryPoint": 1510,
									"id": 718,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_755": {
									"entryPoint": 592,
									"id": 755,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_99": {
									"entryPoint": 1329,
									"id": 99,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_117": {
									"entryPoint": 1191,
									"id": 117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_227": {
									"entryPoint": 1201,
									"id": 227,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_154": {
									"entryPoint": 1475,
									"id": 154,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4070,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8117:8",
										"nodeType": "YulBlock",
										"src": "0:8117:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "378:105:8",
													"nodeType": "YulBlock",
													"src": "378:105:8",
													"statements": [
														{
															"nativeSrc": "388:89:8",
															"nodeType": "YulAssignment",
															"src": "388:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:8",
																		"nodeType": "YulLiteral",
																		"src": "410:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:8"
																},
																"nativeSrc": "399:78:8",
																"nodeType": "YulFunctionCall",
																"src": "399:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:8",
														"nodeType": "YulTypedName",
														"src": "360:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:8",
														"nodeType": "YulTypedName",
														"src": "370:7:8",
														"type": ""
													}
												],
												"src": "334:149:8"
											},
											{
												"body": {
													"nativeSrc": "531:78:8",
													"nodeType": "YulBlock",
													"src": "531:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:8",
																"nodeType": "YulBlock",
																"src": "587:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:8",
																					"nodeType": "YulLiteral",
																					"src": "596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:8",
																					"nodeType": "YulLiteral",
																					"src": "599:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:8"
																			},
																			"nativeSrc": "589:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:8"
																		},
																		"nativeSrc": "589:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:8"
																				},
																				"nativeSrc": "561:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:8"
																		},
																		"nativeSrc": "551:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:8"
																},
																"nativeSrc": "544:42:8",
																"nodeType": "YulFunctionCall",
																"src": "544:42:8"
															},
															"nativeSrc": "541:62:8",
															"nodeType": "YulIf",
															"src": "541:62:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:8",
														"nodeType": "YulTypedName",
														"src": "524:5:8",
														"type": ""
													}
												],
												"src": "489:120:8"
											},
											{
												"body": {
													"nativeSrc": "666:86:8",
													"nodeType": "YulBlock",
													"src": "666:86:8",
													"statements": [
														{
															"nativeSrc": "676:29:8",
															"nodeType": "YulAssignment",
															"src": "676:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:8"
																},
																"nativeSrc": "685:20:8",
																"nodeType": "YulFunctionCall",
																"src": "685:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:8"
																},
																"nativeSrc": "714:32:8",
																"nodeType": "YulFunctionCall",
																"src": "714:32:8"
															},
															"nativeSrc": "714:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:8",
														"nodeType": "YulTypedName",
														"src": "644:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:8",
														"nodeType": "YulTypedName",
														"src": "652:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:8",
														"nodeType": "YulTypedName",
														"src": "660:5:8",
														"type": ""
													}
												],
												"src": "615:137:8"
											},
											{
												"body": {
													"nativeSrc": "823:262:8",
													"nodeType": "YulBlock",
													"src": "823:262:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:8",
																"nodeType": "YulBlock",
																"src": "869:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:8"
																			},
																			"nativeSrc": "871:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:8"
																		},
																		"nativeSrc": "871:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:8"
																		},
																		"nativeSrc": "840:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:8",
																		"nodeType": "YulLiteral",
																		"src": "865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:8"
																},
																"nativeSrc": "836:32:8",
																"nodeType": "YulFunctionCall",
																"src": "836:32:8"
															},
															"nativeSrc": "833:119:8",
															"nodeType": "YulIf",
															"src": "833:119:8"
														},
														{
															"nativeSrc": "962:116:8",
															"nodeType": "YulBlock",
															"src": "962:116:8",
															"statements": [
																{
																	"nativeSrc": "977:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:8",
																		"nodeType": "YulLiteral",
																		"src": "991:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:8",
																			"nodeType": "YulTypedName",
																			"src": "981:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:8",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:8"
																				},
																				"nativeSrc": "1036:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:8"
																		},
																		"nativeSrc": "1016:52:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:8",
														"nodeType": "YulTypedName",
														"src": "793:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:8",
														"nodeType": "YulTypedName",
														"src": "804:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:8",
														"nodeType": "YulTypedName",
														"src": "816:6:8",
														"type": ""
													}
												],
												"src": "758:327:8"
											},
											{
												"body": {
													"nativeSrc": "1133:48:8",
													"nodeType": "YulBlock",
													"src": "1133:48:8",
													"statements": [
														{
															"nativeSrc": "1143:32:8",
															"nodeType": "YulAssignment",
															"src": "1143:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:8"
																		},
																		"nativeSrc": "1161:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:8"
																},
																"nativeSrc": "1154:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:8",
														"nodeType": "YulTypedName",
														"src": "1115:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:8",
														"nodeType": "YulTypedName",
														"src": "1125:7:8",
														"type": ""
													}
												],
												"src": "1091:90:8"
											},
											{
												"body": {
													"nativeSrc": "1246:50:8",
													"nodeType": "YulBlock",
													"src": "1246:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:8"
																		},
																		"nativeSrc": "1268:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:8"
																},
																"nativeSrc": "1256:34:8",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:8"
															},
															"nativeSrc": "1256:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:8",
														"nodeType": "YulTypedName",
														"src": "1234:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:8",
														"nodeType": "YulTypedName",
														"src": "1241:3:8",
														"type": ""
													}
												],
												"src": "1187:109:8"
											},
											{
												"body": {
													"nativeSrc": "1394:118:8",
													"nodeType": "YulBlock",
													"src": "1394:118:8",
													"statements": [
														{
															"nativeSrc": "1404:26:8",
															"nodeType": "YulAssignment",
															"src": "1404:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:8"
																},
																"nativeSrc": "1412:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:8"
																		},
																		"nativeSrc": "1487:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:8"
																},
																"nativeSrc": "1440:65:8",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:8"
															},
															"nativeSrc": "1440:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:8",
														"nodeType": "YulTypedName",
														"src": "1366:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:8",
														"nodeType": "YulTypedName",
														"src": "1378:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:8",
														"nodeType": "YulTypedName",
														"src": "1389:4:8",
														"type": ""
													}
												],
												"src": "1302:210:8"
											},
											{
												"body": {
													"nativeSrc": "1577:40:8",
													"nodeType": "YulBlock",
													"src": "1577:40:8",
													"statements": [
														{
															"nativeSrc": "1588:22:8",
															"nodeType": "YulAssignment",
															"src": "1588:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:8"
																},
																"nativeSrc": "1598:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:8",
														"nodeType": "YulTypedName",
														"src": "1560:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:8",
														"nodeType": "YulTypedName",
														"src": "1570:6:8",
														"type": ""
													}
												],
												"src": "1518:99:8"
											},
											{
												"body": {
													"nativeSrc": "1719:73:8",
													"nodeType": "YulBlock",
													"src": "1719:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:8"
																},
																"nativeSrc": "1729:19:8",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:8"
															},
															"nativeSrc": "1729:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:8"
														},
														{
															"nativeSrc": "1757:29:8",
															"nodeType": "YulAssignment",
															"src": "1757:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:8"
																},
																"nativeSrc": "1772:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:8",
														"nodeType": "YulTypedName",
														"src": "1691:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:8",
														"nodeType": "YulTypedName",
														"src": "1696:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:8",
														"nodeType": "YulTypedName",
														"src": "1707:11:8",
														"type": ""
													}
												],
												"src": "1623:169:8"
											},
											{
												"body": {
													"nativeSrc": "1860:184:8",
													"nodeType": "YulBlock",
													"src": "1860:184:8",
													"statements": [
														{
															"nativeSrc": "1870:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:8",
																"nodeType": "YulLiteral",
																"src": "1879:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:8",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:8",
																"nodeType": "YulBlock",
																"src": "1939:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:8"
																					},
																					"nativeSrc": "1960:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:8"
																							},
																							"nativeSrc": "1979:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:8"
																					},
																					"nativeSrc": "1973:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:8"
																			},
																			"nativeSrc": "1953:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:8"
																		},
																		"nativeSrc": "1953:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:8"
																},
																"nativeSrc": "1897:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:8"
															},
															"nativeSrc": "1889:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:8",
																"nodeType": "YulBlock",
																"src": "1911:19:8",
																"statements": [
																	{
																		"nativeSrc": "1913:15:8",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:8",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:8"
																			},
																			"nativeSrc": "1918:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:8",
																"nodeType": "YulBlock",
																"src": "1893:3:8",
																"statements": []
															},
															"src": "1889:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:8"
																		},
																		"nativeSrc": "2018:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:8"
																},
																"nativeSrc": "2011:27:8",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:8"
															},
															"nativeSrc": "2011:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:8",
														"nodeType": "YulTypedName",
														"src": "1842:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:8",
														"nodeType": "YulTypedName",
														"src": "1847:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:8",
														"nodeType": "YulTypedName",
														"src": "1852:6:8",
														"type": ""
													}
												],
												"src": "1798:246:8"
											},
											{
												"body": {
													"nativeSrc": "2098:54:8",
													"nodeType": "YulBlock",
													"src": "2098:54:8",
													"statements": [
														{
															"nativeSrc": "2108:38:8",
															"nodeType": "YulAssignment",
															"src": "2108:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:8"
																		},
																		"nativeSrc": "2122:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:8"
																		},
																		"nativeSrc": "2138:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:8"
																},
																"nativeSrc": "2118:28:8",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:8",
														"nodeType": "YulTypedName",
														"src": "2081:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:8",
														"nodeType": "YulTypedName",
														"src": "2091:6:8",
														"type": ""
													}
												],
												"src": "2050:102:8"
											},
											{
												"body": {
													"nativeSrc": "2250:285:8",
													"nodeType": "YulBlock",
													"src": "2250:285:8",
													"statements": [
														{
															"nativeSrc": "2260:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:8"
																},
																"nativeSrc": "2274:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:8",
															"nodeType": "YulAssignment",
															"src": "2322:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:8"
																},
																"nativeSrc": "2329:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:8"
																		},
																		"nativeSrc": "2444:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:8"
																},
																"nativeSrc": "2409:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:8"
															},
															"nativeSrc": "2409:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:8"
														},
														{
															"nativeSrc": "2483:46:8",
															"nodeType": "YulAssignment",
															"src": "2483:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:8"
																		},
																		"nativeSrc": "2499:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:8"
																},
																"nativeSrc": "2490:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:8",
														"nodeType": "YulTypedName",
														"src": "2231:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:8",
														"nodeType": "YulTypedName",
														"src": "2238:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:8",
														"nodeType": "YulTypedName",
														"src": "2246:3:8",
														"type": ""
													}
												],
												"src": "2158:377:8"
											},
											{
												"body": {
													"nativeSrc": "2659:195:8",
													"nodeType": "YulBlock",
													"src": "2659:195:8",
													"statements": [
														{
															"nativeSrc": "2669:26:8",
															"nodeType": "YulAssignment",
															"src": "2669:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:8"
																},
																"nativeSrc": "2677:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:8"
																		},
																		"nativeSrc": "2712:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:8"
																		},
																		"nativeSrc": "2731:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:8"
																},
																"nativeSrc": "2705:47:8",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:8"
															},
															"nativeSrc": "2705:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:8"
														},
														{
															"nativeSrc": "2761:86:8",
															"nodeType": "YulAssignment",
															"src": "2761:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:8"
																},
																"nativeSrc": "2769:78:8",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:8",
														"nodeType": "YulTypedName",
														"src": "2631:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:8",
														"nodeType": "YulTypedName",
														"src": "2643:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:8",
														"nodeType": "YulTypedName",
														"src": "2654:4:8",
														"type": ""
													}
												],
												"src": "2541:313:8"
											},
											{
												"body": {
													"nativeSrc": "2905:81:8",
													"nodeType": "YulBlock",
													"src": "2905:81:8",
													"statements": [
														{
															"nativeSrc": "2915:65:8",
															"nodeType": "YulAssignment",
															"src": "2915:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2930:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2937:42:8",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2926:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:8"
																},
																"nativeSrc": "2926:54:8",
																"nodeType": "YulFunctionCall",
																"src": "2926:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2860:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:8",
														"nodeType": "YulTypedName",
														"src": "2887:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:8",
														"nodeType": "YulTypedName",
														"src": "2897:7:8",
														"type": ""
													}
												],
												"src": "2860:126:8"
											},
											{
												"body": {
													"nativeSrc": "3037:51:8",
													"nodeType": "YulBlock",
													"src": "3037:51:8",
													"statements": [
														{
															"nativeSrc": "3047:35:8",
															"nodeType": "YulAssignment",
															"src": "3047:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3058:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:8"
																},
																"nativeSrc": "3058:24:8",
																"nodeType": "YulFunctionCall",
																"src": "3058:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3047:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2992:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3019:5:8",
														"nodeType": "YulTypedName",
														"src": "3019:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3029:7:8",
														"nodeType": "YulTypedName",
														"src": "3029:7:8",
														"type": ""
													}
												],
												"src": "2992:96:8"
											},
											{
												"body": {
													"nativeSrc": "3137:79:8",
													"nodeType": "YulBlock",
													"src": "3137:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:16:8",
																"nodeType": "YulBlock",
																"src": "3194:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3203:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3196:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:8"
																			},
																			"nativeSrc": "3196:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:8"
																		},
																		"nativeSrc": "3196:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3160:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3185:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3167:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:8"
																				},
																				"nativeSrc": "3167:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3157:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:8"
																		},
																		"nativeSrc": "3157:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3150:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:8"
																},
																"nativeSrc": "3150:43:8",
																"nodeType": "YulFunctionCall",
																"src": "3150:43:8"
															},
															"nativeSrc": "3147:63:8",
															"nodeType": "YulIf",
															"src": "3147:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3094:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3130:5:8",
														"nodeType": "YulTypedName",
														"src": "3130:5:8",
														"type": ""
													}
												],
												"src": "3094:122:8"
											},
											{
												"body": {
													"nativeSrc": "3274:87:8",
													"nodeType": "YulBlock",
													"src": "3274:87:8",
													"statements": [
														{
															"nativeSrc": "3284:29:8",
															"nodeType": "YulAssignment",
															"src": "3284:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3306:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3293:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:8"
																},
																"nativeSrc": "3293:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3293:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3284:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3349:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3322:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:8"
																},
																"nativeSrc": "3322:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3322:33:8"
															},
															"nativeSrc": "3322:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3222:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3252:6:8",
														"nodeType": "YulTypedName",
														"src": "3252:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3260:3:8",
														"nodeType": "YulTypedName",
														"src": "3260:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3268:5:8",
														"nodeType": "YulTypedName",
														"src": "3268:5:8",
														"type": ""
													}
												],
												"src": "3222:139:8"
											},
											{
												"body": {
													"nativeSrc": "3412:32:8",
													"nodeType": "YulBlock",
													"src": "3412:32:8",
													"statements": [
														{
															"nativeSrc": "3422:16:8",
															"nodeType": "YulAssignment",
															"src": "3422:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "3433:5:8",
																"nodeType": "YulIdentifier",
																"src": "3433:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3422:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3367:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3394:5:8",
														"nodeType": "YulTypedName",
														"src": "3394:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3404:7:8",
														"nodeType": "YulTypedName",
														"src": "3404:7:8",
														"type": ""
													}
												],
												"src": "3367:77:8"
											},
											{
												"body": {
													"nativeSrc": "3493:79:8",
													"nodeType": "YulBlock",
													"src": "3493:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3550:16:8",
																"nodeType": "YulBlock",
																"src": "3550:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3559:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3562:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3552:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:8"
																			},
																			"nativeSrc": "3552:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:8"
																		},
																		"nativeSrc": "3552:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3516:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3541:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3523:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:8"
																				},
																				"nativeSrc": "3523:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3513:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:8"
																		},
																		"nativeSrc": "3513:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3506:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:8"
																},
																"nativeSrc": "3506:43:8",
																"nodeType": "YulFunctionCall",
																"src": "3506:43:8"
															},
															"nativeSrc": "3503:63:8",
															"nodeType": "YulIf",
															"src": "3503:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3450:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3486:5:8",
														"nodeType": "YulTypedName",
														"src": "3486:5:8",
														"type": ""
													}
												],
												"src": "3450:122:8"
											},
											{
												"body": {
													"nativeSrc": "3630:87:8",
													"nodeType": "YulBlock",
													"src": "3630:87:8",
													"statements": [
														{
															"nativeSrc": "3640:29:8",
															"nodeType": "YulAssignment",
															"src": "3640:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3662:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3649:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:8"
																},
																"nativeSrc": "3649:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3649:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3640:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3705:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3678:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:8"
																},
																"nativeSrc": "3678:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3678:33:8"
															},
															"nativeSrc": "3678:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3578:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3608:6:8",
														"nodeType": "YulTypedName",
														"src": "3608:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3616:3:8",
														"nodeType": "YulTypedName",
														"src": "3616:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3624:5:8",
														"nodeType": "YulTypedName",
														"src": "3624:5:8",
														"type": ""
													}
												],
												"src": "3578:139:8"
											},
											{
												"body": {
													"nativeSrc": "3806:391:8",
													"nodeType": "YulBlock",
													"src": "3806:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3852:83:8",
																"nodeType": "YulBlock",
																"src": "3852:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3854:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:8"
																			},
																			"nativeSrc": "3854:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:8"
																		},
																		"nativeSrc": "3854:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3827:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3836:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3823:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:8"
																		},
																		"nativeSrc": "3823:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3819:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:8"
																},
																"nativeSrc": "3819:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3819:32:8"
															},
															"nativeSrc": "3816:119:8",
															"nodeType": "YulIf",
															"src": "3816:119:8"
														},
														{
															"nativeSrc": "3945:117:8",
															"nodeType": "YulBlock",
															"src": "3945:117:8",
															"statements": [
																{
																	"nativeSrc": "3960:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3974:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3964:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3989:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3989:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4024:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4035:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4020:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:8"
																				},
																				"nativeSrc": "4020:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4044:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3999:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:8"
																		},
																		"nativeSrc": "3999:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3989:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4072:118:8",
															"nodeType": "YulBlock",
															"src": "4072:118:8",
															"statements": [
																{
																	"nativeSrc": "4087:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4101:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4091:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4117:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4117:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4152:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4163:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:8"
																				},
																				"nativeSrc": "4148:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4127:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:8"
																		},
																		"nativeSrc": "4127:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4117:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3723:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3768:9:8",
														"nodeType": "YulTypedName",
														"src": "3768:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3779:7:8",
														"nodeType": "YulTypedName",
														"src": "3779:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3791:6:8",
														"nodeType": "YulTypedName",
														"src": "3791:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3799:6:8",
														"nodeType": "YulTypedName",
														"src": "3799:6:8",
														"type": ""
													}
												],
												"src": "3723:474:8"
											},
											{
												"body": {
													"nativeSrc": "4268:53:8",
													"nodeType": "YulBlock",
													"src": "4268:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4285:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4285:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4308:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4308:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4290:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4290:17:8"
																		},
																		"nativeSrc": "4290:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:8"
																},
																"nativeSrc": "4278:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4278:37:8"
															},
															"nativeSrc": "4278:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "4278:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4203:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4256:5:8",
														"nodeType": "YulTypedName",
														"src": "4256:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4263:3:8",
														"nodeType": "YulTypedName",
														"src": "4263:3:8",
														"type": ""
													}
												],
												"src": "4203:118:8"
											},
											{
												"body": {
													"nativeSrc": "4425:124:8",
													"nodeType": "YulBlock",
													"src": "4425:124:8",
													"statements": [
														{
															"nativeSrc": "4435:26:8",
															"nodeType": "YulAssignment",
															"src": "4435:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4447:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4447:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4458:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4443:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:8"
																},
																"nativeSrc": "4443:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4443:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4435:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4435:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4515:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4515:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4528:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4539:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4539:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4524:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:8"
																		},
																		"nativeSrc": "4524:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4524:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4471:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4471:43:8"
																},
																"nativeSrc": "4471:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4471:71:8"
															},
															"nativeSrc": "4471:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4471:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4327:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4397:9:8",
														"nodeType": "YulTypedName",
														"src": "4397:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4409:6:8",
														"nodeType": "YulTypedName",
														"src": "4409:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4420:4:8",
														"nodeType": "YulTypedName",
														"src": "4420:4:8",
														"type": ""
													}
												],
												"src": "4327:222:8"
											},
											{
												"body": {
													"nativeSrc": "4655:519:8",
													"nodeType": "YulBlock",
													"src": "4655:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4701:83:8",
																"nodeType": "YulBlock",
																"src": "4701:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4703:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4703:77:8"
																			},
																			"nativeSrc": "4703:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4703:79:8"
																		},
																		"nativeSrc": "4703:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4703:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4676:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4676:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4685:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4672:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:8"
																		},
																		"nativeSrc": "4672:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4697:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4697:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4668:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:8"
																},
																"nativeSrc": "4668:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4668:32:8"
															},
															"nativeSrc": "4665:119:8",
															"nodeType": "YulIf",
															"src": "4665:119:8"
														},
														{
															"nativeSrc": "4794:117:8",
															"nodeType": "YulBlock",
															"src": "4794:117:8",
															"statements": [
																{
																	"nativeSrc": "4809:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4809:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4823:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4823:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4813:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4813:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4838:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4838:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4873:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4873:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4884:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4884:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4869:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:8"
																				},
																				"nativeSrc": "4869:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4869:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4893:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4893:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4848:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4848:20:8"
																		},
																		"nativeSrc": "4848:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4848:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4838:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4838:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4921:118:8",
															"nodeType": "YulBlock",
															"src": "4921:118:8",
															"statements": [
																{
																	"nativeSrc": "4936:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4936:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4950:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4940:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4940:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4966:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4966:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5001:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5001:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5012:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5012:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4997:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:8"
																				},
																				"nativeSrc": "4997:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4997:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5021:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5021:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4976:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4976:20:8"
																		},
																		"nativeSrc": "4976:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4966:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4966:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5049:118:8",
															"nodeType": "YulBlock",
															"src": "5049:118:8",
															"statements": [
																{
																	"nativeSrc": "5064:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5064:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5078:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5078:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5068:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5068:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5094:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5094:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5129:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5129:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5140:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5140:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5125:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5125:3:8"
																				},
																				"nativeSrc": "5125:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5125:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5149:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5149:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5104:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5104:20:8"
																		},
																		"nativeSrc": "5104:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5104:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5094:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5094:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4555:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4609:9:8",
														"nodeType": "YulTypedName",
														"src": "4609:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4620:7:8",
														"nodeType": "YulTypedName",
														"src": "4620:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4632:6:8",
														"nodeType": "YulTypedName",
														"src": "4632:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4640:6:8",
														"nodeType": "YulTypedName",
														"src": "4640:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4648:6:8",
														"nodeType": "YulTypedName",
														"src": "4648:6:8",
														"type": ""
													}
												],
												"src": "4555:619:8"
											},
											{
												"body": {
													"nativeSrc": "5223:43:8",
													"nodeType": "YulBlock",
													"src": "5223:43:8",
													"statements": [
														{
															"nativeSrc": "5233:27:8",
															"nodeType": "YulAssignment",
															"src": "5233:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5248:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5248:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5255:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5255:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5244:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5244:3:8"
																},
																"nativeSrc": "5244:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5244:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5233:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5233:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5180:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5205:5:8",
														"nodeType": "YulTypedName",
														"src": "5205:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5215:7:8",
														"nodeType": "YulTypedName",
														"src": "5215:7:8",
														"type": ""
													}
												],
												"src": "5180:86:8"
											},
											{
												"body": {
													"nativeSrc": "5333:51:8",
													"nodeType": "YulBlock",
													"src": "5333:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5350:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5350:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5371:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5371:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5355:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "5355:15:8"
																		},
																		"nativeSrc": "5355:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5355:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5343:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:8"
																},
																"nativeSrc": "5343:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5343:35:8"
															},
															"nativeSrc": "5343:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "5343:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5272:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5321:5:8",
														"nodeType": "YulTypedName",
														"src": "5321:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5328:3:8",
														"nodeType": "YulTypedName",
														"src": "5328:3:8",
														"type": ""
													}
												],
												"src": "5272:112:8"
											},
											{
												"body": {
													"nativeSrc": "5484:120:8",
													"nodeType": "YulBlock",
													"src": "5484:120:8",
													"statements": [
														{
															"nativeSrc": "5494:26:8",
															"nodeType": "YulAssignment",
															"src": "5494:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5506:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5506:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5517:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5517:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:8"
																},
																"nativeSrc": "5502:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5502:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5494:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5494:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5570:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5570:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5583:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5583:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5594:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5594:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5579:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:8"
																		},
																		"nativeSrc": "5579:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5579:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5530:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5530:39:8"
																},
																"nativeSrc": "5530:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5530:67:8"
															},
															"nativeSrc": "5530:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5530:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5390:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5456:9:8",
														"nodeType": "YulTypedName",
														"src": "5456:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5468:6:8",
														"nodeType": "YulTypedName",
														"src": "5468:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5479:4:8",
														"nodeType": "YulTypedName",
														"src": "5479:4:8",
														"type": ""
													}
												],
												"src": "5390:214:8"
											},
											{
												"body": {
													"nativeSrc": "5676:263:8",
													"nodeType": "YulBlock",
													"src": "5676:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5722:83:8",
																"nodeType": "YulBlock",
																"src": "5722:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5724:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5724:77:8"
																			},
																			"nativeSrc": "5724:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5724:79:8"
																		},
																		"nativeSrc": "5724:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5724:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5697:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5697:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5706:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5706:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5693:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5693:3:8"
																		},
																		"nativeSrc": "5693:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5693:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5718:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5718:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5689:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:8"
																},
																"nativeSrc": "5689:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5689:32:8"
															},
															"nativeSrc": "5686:119:8",
															"nodeType": "YulIf",
															"src": "5686:119:8"
														},
														{
															"nativeSrc": "5815:117:8",
															"nodeType": "YulBlock",
															"src": "5815:117:8",
															"statements": [
																{
																	"nativeSrc": "5830:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5830:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5844:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5844:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5834:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5834:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5859:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5859:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5894:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5894:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5905:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5905:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5890:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5890:3:8"
																				},
																				"nativeSrc": "5890:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5890:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5914:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5914:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5869:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5869:20:8"
																		},
																		"nativeSrc": "5869:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5869:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5859:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5859:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5610:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5646:9:8",
														"nodeType": "YulTypedName",
														"src": "5646:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5657:7:8",
														"nodeType": "YulTypedName",
														"src": "5657:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5669:6:8",
														"nodeType": "YulTypedName",
														"src": "5669:6:8",
														"type": ""
													}
												],
												"src": "5610:329:8"
											},
											{
												"body": {
													"nativeSrc": "6028:391:8",
													"nodeType": "YulBlock",
													"src": "6028:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6074:83:8",
																"nodeType": "YulBlock",
																"src": "6074:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6076:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6076:77:8"
																			},
																			"nativeSrc": "6076:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6076:79:8"
																		},
																		"nativeSrc": "6076:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6076:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6049:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6049:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6058:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6058:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6045:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6045:3:8"
																		},
																		"nativeSrc": "6045:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6045:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6070:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6070:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6041:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6041:3:8"
																},
																"nativeSrc": "6041:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6041:32:8"
															},
															"nativeSrc": "6038:119:8",
															"nodeType": "YulIf",
															"src": "6038:119:8"
														},
														{
															"nativeSrc": "6167:117:8",
															"nodeType": "YulBlock",
															"src": "6167:117:8",
															"statements": [
																{
																	"nativeSrc": "6182:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6182:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6196:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6196:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6186:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6186:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6211:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6211:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6246:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6246:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6257:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6257:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6242:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6242:3:8"
																				},
																				"nativeSrc": "6242:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6242:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6266:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6266:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6221:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6221:20:8"
																		},
																		"nativeSrc": "6221:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6221:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6211:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6211:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6294:118:8",
															"nodeType": "YulBlock",
															"src": "6294:118:8",
															"statements": [
																{
																	"nativeSrc": "6309:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6309:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6323:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6323:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6313:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6313:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6339:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6339:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6374:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6374:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6385:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6385:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6370:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6370:3:8"
																				},
																				"nativeSrc": "6370:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6370:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6394:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6394:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6349:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6349:20:8"
																		},
																		"nativeSrc": "6349:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6349:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6339:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6339:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5945:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5990:9:8",
														"nodeType": "YulTypedName",
														"src": "5990:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6001:7:8",
														"nodeType": "YulTypedName",
														"src": "6001:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6013:6:8",
														"nodeType": "YulTypedName",
														"src": "6013:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6021:6:8",
														"nodeType": "YulTypedName",
														"src": "6021:6:8",
														"type": ""
													}
												],
												"src": "5945:474:8"
											},
											{
												"body": {
													"nativeSrc": "6453:152:8",
													"nodeType": "YulBlock",
													"src": "6453:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6470:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6470:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6473:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6463:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:8"
																},
																"nativeSrc": "6463:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6463:88:8"
															},
															"nativeSrc": "6463:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6463:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6567:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6567:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6570:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6570:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:8"
																},
																"nativeSrc": "6560:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6560:15:8"
															},
															"nativeSrc": "6560:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6560:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6591:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6591:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6594:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6594:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6584:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:8"
																},
																"nativeSrc": "6584:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6584:15:8"
															},
															"nativeSrc": "6584:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6584:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6425:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6425:180:8"
											},
											{
												"body": {
													"nativeSrc": "6662:269:8",
													"nodeType": "YulBlock",
													"src": "6662:269:8",
													"statements": [
														{
															"nativeSrc": "6672:22:8",
															"nodeType": "YulAssignment",
															"src": "6672:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6686:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6686:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6692:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6692:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6682:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6682:3:8"
																},
																"nativeSrc": "6682:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6682:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6672:6:8"
																}
															]
														},
														{
															"nativeSrc": "6703:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6703:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6733:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6733:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6739:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6739:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6729:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6729:3:8"
																},
																"nativeSrc": "6729:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6729:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6707:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6707:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6780:51:8",
																"nodeType": "YulBlock",
																"src": "6780:51:8",
																"statements": [
																	{
																		"nativeSrc": "6794:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6794:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6808:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6808:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6816:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6816:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6804:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6804:3:8"
																			},
																			"nativeSrc": "6804:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6804:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6794:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6794:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6760:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6760:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6753:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6753:6:8"
																},
																"nativeSrc": "6753:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6753:26:8"
															},
															"nativeSrc": "6750:81:8",
															"nodeType": "YulIf",
															"src": "6750:81:8"
														},
														{
															"body": {
																"nativeSrc": "6883:42:8",
																"nodeType": "YulBlock",
																"src": "6883:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6897:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6897:16:8"
																			},
																			"nativeSrc": "6897:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6897:18:8"
																		},
																		"nativeSrc": "6897:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6897:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6847:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6847:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6870:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6870:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6878:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6878:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6867:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6867:2:8"
																		},
																		"nativeSrc": "6867:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6867:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6844:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6844:2:8"
																},
																"nativeSrc": "6844:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6844:38:8"
															},
															"nativeSrc": "6841:84:8",
															"nodeType": "YulIf",
															"src": "6841:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6611:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6646:4:8",
														"nodeType": "YulTypedName",
														"src": "6646:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6655:6:8",
														"nodeType": "YulTypedName",
														"src": "6655:6:8",
														"type": ""
													}
												],
												"src": "6611:320:8"
											},
											{
												"body": {
													"nativeSrc": "7002:53:8",
													"nodeType": "YulBlock",
													"src": "7002:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7019:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7019:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7042:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7042:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7024:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7024:17:8"
																		},
																		"nativeSrc": "7024:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7024:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7012:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7012:6:8"
																},
																"nativeSrc": "7012:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7012:37:8"
															},
															"nativeSrc": "7012:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7012:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6937:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6990:5:8",
														"nodeType": "YulTypedName",
														"src": "6990:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6997:3:8",
														"nodeType": "YulTypedName",
														"src": "6997:3:8",
														"type": ""
													}
												],
												"src": "6937:118:8"
											},
											{
												"body": {
													"nativeSrc": "7215:288:8",
													"nodeType": "YulBlock",
													"src": "7215:288:8",
													"statements": [
														{
															"nativeSrc": "7225:26:8",
															"nodeType": "YulAssignment",
															"src": "7225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7248:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:8"
																},
																"nativeSrc": "7233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7305:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7305:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7318:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7318:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7329:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7329:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7314:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7314:3:8"
																		},
																		"nativeSrc": "7314:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7314:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7261:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7261:43:8"
																},
																"nativeSrc": "7261:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7261:71:8"
															},
															"nativeSrc": "7261:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7261:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7386:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7386:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7399:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7399:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7410:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7410:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7395:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7395:3:8"
																		},
																		"nativeSrc": "7395:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7395:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7342:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7342:43:8"
																},
																"nativeSrc": "7342:72:8",
																"nodeType": "YulFunctionCall",
																"src": "7342:72:8"
															},
															"nativeSrc": "7342:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "7342:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7468:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7468:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7481:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7481:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7492:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7492:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7477:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7477:3:8"
																		},
																		"nativeSrc": "7477:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7477:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7424:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7424:43:8"
																},
																"nativeSrc": "7424:72:8",
																"nodeType": "YulFunctionCall",
																"src": "7424:72:8"
															},
															"nativeSrc": "7424:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "7424:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7061:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7171:9:8",
														"nodeType": "YulTypedName",
														"src": "7171:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7183:6:8",
														"nodeType": "YulTypedName",
														"src": "7183:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7191:6:8",
														"nodeType": "YulTypedName",
														"src": "7191:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7199:6:8",
														"nodeType": "YulTypedName",
														"src": "7199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7210:4:8",
														"nodeType": "YulTypedName",
														"src": "7210:4:8",
														"type": ""
													}
												],
												"src": "7061:442:8"
											},
											{
												"body": {
													"nativeSrc": "7607:124:8",
													"nodeType": "YulBlock",
													"src": "7607:124:8",
													"statements": [
														{
															"nativeSrc": "7617:26:8",
															"nodeType": "YulAssignment",
															"src": "7617:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7629:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7629:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7640:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7640:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7625:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7625:3:8"
																},
																"nativeSrc": "7625:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7625:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7617:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7617:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7697:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7697:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7710:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7710:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7721:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7721:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7706:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7706:3:8"
																		},
																		"nativeSrc": "7706:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7706:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7653:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7653:43:8"
																},
																"nativeSrc": "7653:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7653:71:8"
															},
															"nativeSrc": "7653:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7653:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7509:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7579:9:8",
														"nodeType": "YulTypedName",
														"src": "7579:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7591:6:8",
														"nodeType": "YulTypedName",
														"src": "7591:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7602:4:8",
														"nodeType": "YulTypedName",
														"src": "7602:4:8",
														"type": ""
													}
												],
												"src": "7509:222:8"
											},
											{
												"body": {
													"nativeSrc": "7765:152:8",
													"nodeType": "YulBlock",
													"src": "7765:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7782:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7782:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7785:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7785:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7775:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:8"
																},
																"nativeSrc": "7775:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7775:88:8"
															},
															"nativeSrc": "7775:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7775:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7879:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7879:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7882:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7882:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7872:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7872:6:8"
																},
																"nativeSrc": "7872:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7872:15:8"
															},
															"nativeSrc": "7872:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7872:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7903:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7903:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7906:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7906:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7896:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:8"
																},
																"nativeSrc": "7896:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7896:15:8"
															},
															"nativeSrc": "7896:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7896:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7737:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7737:180:8"
											},
											{
												"body": {
													"nativeSrc": "7967:147:8",
													"nodeType": "YulBlock",
													"src": "7967:147:8",
													"statements": [
														{
															"nativeSrc": "7977:25:8",
															"nodeType": "YulAssignment",
															"src": "7977:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8000:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8000:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7982:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7982:17:8"
																},
																"nativeSrc": "7982:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7982:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7977:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7977:1:8"
																}
															]
														},
														{
															"nativeSrc": "8011:25:8",
															"nodeType": "YulAssignment",
															"src": "8011:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8034:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8034:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8016:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8016:17:8"
																},
																"nativeSrc": "8016:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8016:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8011:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8011:1:8"
																}
															]
														},
														{
															"nativeSrc": "8045:16:8",
															"nodeType": "YulAssignment",
															"src": "8045:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8056:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8056:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8059:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8059:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8052:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8052:3:8"
																},
																"nativeSrc": "8052:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8052:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8045:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8045:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8085:22:8",
																"nodeType": "YulBlock",
																"src": "8085:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8087:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8087:16:8"
																			},
																			"nativeSrc": "8087:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8087:18:8"
																		},
																		"nativeSrc": "8087:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8087:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8077:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8077:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8080:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8080:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8074:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8074:2:8"
																},
																"nativeSrc": "8074:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8074:10:8"
															},
															"nativeSrc": "8071:36:8",
															"nodeType": "YulIf",
															"src": "8071:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7923:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7954:1:8",
														"nodeType": "YulTypedName",
														"src": "7954:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7957:1:8",
														"nodeType": "YulTypedName",
														"src": "7957:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7963:3:8",
														"nodeType": "YulTypedName",
														"src": "7963:3:8",
														"type": ""
													}
												],
												"src": "7923:191:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461017a57806370a082311461019857806395d89b41146101c8578063a9059cbb146101e6578063b026ba5714610216578063dd62ed3e14610220576100a9565b806301ffc9a7146100ae57806306fdde03146100de578063095ea7b3146100fc57806318160ddd1461012c57806323b872dd1461014a575b600080fd5b6100c860048036038101906100c39190610c6d565b610250565b6040516100d59190610cb5565b60405180910390f35b6100e66103f2565b6040516100f39190610d60565b60405180910390f35b61011660048036038101906101119190610e16565b610484565b6040516101239190610cb5565b60405180910390f35b6101346104a7565b6040516101419190610e65565b60405180910390f35b610164600480360381019061015f9190610e80565b6104b1565b6040516101719190610cb5565b60405180910390f35b6101826104e0565b60405161018f9190610eef565b60405180910390f35b6101b260048036038101906101ad9190610f0a565b6104e9565b6040516101bf9190610e65565b60405180910390f35b6101d0610531565b6040516101dd9190610d60565b60405180910390f35b61020060048036038101906101fb9190610e16565b6105c3565b60405161020d9190610cb5565b60405180910390f35b61021e6105e6565b005b61023a60048036038101906102359190610f37565b6105eb565b6040516102479190610e65565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061031b57507f36372b07000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061038357507fa219a025000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103eb57507fb026ba57000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606003805461040190610fa6565b80601f016020809104026020016040519081016040528092919081815260200182805461042d90610fa6565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b5050505050905090565b60008061048f610672565b905061049c81858561067a565b600191505092915050565b6000600254905090565b6000806104bc610672565b90506104c985828561068c565b6104d4858585610720565b60019150509392505050565b60006008905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461054090610fa6565b80601f016020809104026020016040519081016040528092919081815260200182805461056c90610fa6565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050905090565b6000806105ce610672565b90506105db818585610720565b600191505092915050565b600080fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6106878383836001610814565b505050565b600061069884846105eb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461071a578181101561070a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161070193929190610fe6565b60405180910390fd5b61071984848484036000610814565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107925760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610789919061101d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108045760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107fb919061101d565b60405180910390fd5b61080f8383836109eb565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108865760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161087d919061101d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108f85760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108ef919061101d565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156109e5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109dc9190610e65565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a3d578060026000828254610a319190611067565b92505081905550610b10565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ac9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ac093929190610fe6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b595780600260008282540392505081905550610ba6565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c039190610e65565b60405180910390a3505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610c4a81610c15565b8114610c5557600080fd5b50565b600081359050610c6781610c41565b92915050565b600060208284031215610c8357610c82610c10565b5b6000610c9184828501610c58565b91505092915050565b60008115159050919050565b610caf81610c9a565b82525050565b6000602082019050610cca6000830184610ca6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d0a578082015181840152602081019050610cef565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d3282610cd0565b610d3c8185610cdb565b9350610d4c818560208601610cec565b610d5581610d16565b840191505092915050565b60006020820190508181036000830152610d7a8184610d27565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dad82610d82565b9050919050565b610dbd81610da2565b8114610dc857600080fd5b50565b600081359050610dda81610db4565b92915050565b6000819050919050565b610df381610de0565b8114610dfe57600080fd5b50565b600081359050610e1081610dea565b92915050565b60008060408385031215610e2d57610e2c610c10565b5b6000610e3b85828601610dcb565b9250506020610e4c85828601610e01565b9150509250929050565b610e5f81610de0565b82525050565b6000602082019050610e7a6000830184610e56565b92915050565b600080600060608486031215610e9957610e98610c10565b5b6000610ea786828701610dcb565b9350506020610eb886828701610dcb565b9250506040610ec986828701610e01565b9150509250925092565b600060ff82169050919050565b610ee981610ed3565b82525050565b6000602082019050610f046000830184610ee0565b92915050565b600060208284031215610f2057610f1f610c10565b5b6000610f2e84828501610dcb565b91505092915050565b60008060408385031215610f4e57610f4d610c10565b5b6000610f5c85828601610dcb565b9250506020610f6d85828601610dcb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fbe57607f821691505b602082108103610fd157610fd0610f77565b5b50919050565b610fe081610da2565b82525050565b6000606082019050610ffb6000830186610fd7565b6110086020830185610e56565b6110156040830184610e56565b949350505050565b60006020820190506110326000830184610fd7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061107282610de0565b915061107d83610de0565b925082820190508082111561109557611094611038565b5b9291505056fea2646970667358221220b6ac5c85849a0c6ddc91ac1080ea7b7e56b7e3b2a689fb9b94543bc7e88c8e1e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xB026BA57 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0x5E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x31B JUMPI POP PUSH32 0x36372B0700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x383 JUMPI POP PUSH32 0xA219A02500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3EB JUMPI POP PUSH32 0xB026BA5700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0xFA6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0xFA6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48F PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x49C DUP2 DUP6 DUP6 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4BC PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x4C9 DUP6 DUP3 DUP6 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x4D4 DUP6 DUP6 DUP6 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x540 SWAP1 PUSH2 0xFA6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56C SWAP1 PUSH2 0xFA6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5CE PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x5DB DUP2 DUP6 DUP6 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x687 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x814 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 DUP5 DUP5 PUSH2 0x5EB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x71A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x70A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x701 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x719 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x814 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x792 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x804 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80F DUP4 DUP4 DUP4 PUSH2 0x9EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x886 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x9E5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x1067 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xAC9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBA6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0xC15 JUMP JUMPDEST DUP2 EQ PUSH2 0xC55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC67 DUP2 PUSH2 0xC41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP5 DUP3 DUP6 ADD PUSH2 0xC58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAF DUP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP3 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0xD3C DUP2 DUP6 PUSH2 0xCDB JUMP JUMPDEST SWAP4 POP PUSH2 0xD4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCEC JUMP JUMPDEST PUSH2 0xD55 DUP2 PUSH2 0xD16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7A DUP2 DUP5 PUSH2 0xD27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD DUP3 PUSH2 0xD82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBD DUP2 PUSH2 0xDA2 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDA DUP2 PUSH2 0xDB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF3 DUP2 PUSH2 0xDE0 JUMP JUMPDEST DUP2 EQ PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE10 DUP2 PUSH2 0xDEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH2 0xE2C PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE3B DUP6 DUP3 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE4C DUP6 DUP3 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5F DUP2 PUSH2 0xDE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP7 DUP3 DUP8 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEB8 DUP7 DUP3 DUP8 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEC9 DUP7 DUP3 DUP8 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE9 DUP2 PUSH2 0xED3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF1F PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2E DUP5 DUP3 DUP6 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4D PUSH2 0xC10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF5C DUP6 DUP3 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF6D DUP6 DUP3 DUP7 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFBE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFD1 JUMPI PUSH2 0xFD0 PUSH2 0xF77 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE0 DUP2 PUSH2 0xDA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFFB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x1008 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE56 JUMP JUMPDEST PUSH2 0x1015 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1032 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1072 DUP3 PUSH2 0xDE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x107D DUP4 PUSH2 0xDE0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1095 JUMPI PUSH2 0x1094 PUSH2 0x1038 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xAC TLOAD DUP6 DUP5 SWAP11 0xC PUSH14 0xDC91AC1080EA7B7E56B7E3B2A689 0xFB SWAP12 SWAP5 SLOAD EXTCODESIZE 0xC7 0xE8 DUP13 DUP15 0x1E PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "269:660:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1743:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3962:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2813:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4740:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;423:104:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2968:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1945:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3279:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;533:66:6;;;:::i;:::-;;3515:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;605:322:6;682:4;720:25;705:40;;;:11;:40;;;;:95;;;;776:24;761:39;;;:11;:39;;;;705:95;:158;;;;831:32;816:47;;;:11;:47;;;;705:158;:215;;;;894:26;879:41;;;:11;:41;;;;705:215;698:222;;605:322;;;:::o;1743:89:1:-;1788:13;1820:5;1813:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:89;:::o;3962:186::-;4035:4;4051:13;4067:12;:10;:12::i;:::-;4051:28;;4089:31;4098:5;4105:7;4114:5;4089:8;:31::i;:::-;4137:4;4130:11;;;3962:186;;;;:::o;2813:97::-;2865:7;2891:12;;2884:19;;2813:97;:::o;4740:244::-;4827:4;4843:15;4861:12;:10;:12::i;:::-;4843:30;;4883:37;4899:4;4905:7;4914:5;4883:15;:37::i;:::-;4930:26;4940:4;4946:2;4950:5;4930:9;:26::i;:::-;4973:4;4966:11;;;4740:244;;;;;:::o;423:104:6:-;496:5;519:1;512:8;;423:104;:::o;2968:116:1:-;3033:7;3059:9;:18;3069:7;3059:18;;;;;;;;;;;;;;;;3052:25;;2968:116;;;:::o;1945:93::-;1992:13;2024:7;2017:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:93;:::o;3279:178::-;3348:4;3364:13;3380:12;:10;:12::i;:::-;3364:28;;3402:27;3412:5;3419:2;3423:5;3402:9;:27::i;:::-;3446:4;3439:11;;;3279:178;;;;:::o;533:66:6:-;584:8;;;3515:140:1;3595:7;3621:11;:18;3633:5;3621:18;;;;;;;;;;;;;;;:27;3640:7;3621:27;;;;;;;;;;;;;;;;3614:34;;3515:140;;;;:::o;656:96:0:-;709:7;735:10;728:17;;656:96;:::o;8690:128:1:-;8774:37;8783:5;8790:7;8799:5;8806:4;8774:8;:37::i;:::-;8690:128;;;:::o;10379:477::-;10478:24;10505:25;10515:5;10522:7;10505:9;:25::i;:::-;10478:52;;10564:17;10544:16;:37;10540:310;;10620:5;10601:16;:24;10597:130;;;10679:7;10688:16;10706:5;10652:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10597:130;10768:57;10777:5;10784:7;10812:5;10793:16;:24;10819:5;10768:8;:57::i;:::-;10540:310;10468:388;10379:477;;;:::o;5357:300::-;5456:1;5440:18;;:4;:18;;;5436:86;;5508:1;5481:30;;;;;;;;;;;:::i;:::-;;;;;;;;5436:86;5549:1;5535:16;;:2;:16;;;5531:86;;5603:1;5574:32;;;;;;;;;;;:::i;:::-;;;;;;;;5531:86;5626:24;5634:4;5640:2;5644:5;5626:7;:24::i;:::-;5357:300;;;:::o;9665:432::-;9794:1;9777:19;;:5;:19;;;9773:89;;9848:1;9819:32;;;;;;;;;;;:::i;:::-;;;;;;;;9773:89;9894:1;9875:21;;:7;:21;;;9871:90;;9947:1;9919:31;;;;;;;;;;;:::i;:::-;;;;;;;;9871:90;10000:5;9970:11;:18;9982:5;9970:18;;;;;;;;;;;;;;;:27;9989:7;9970:27;;;;;;;;;;;;;;;:35;;;;10019:9;10015:76;;;10065:7;10049:31;;10058:5;10049:31;;;10074:5;10049:31;;;;;;:::i;:::-;;;;;;;;10015:76;9665:432;;;;:::o;5972:1107::-;6077:1;6061:18;;:4;:18;;;6057:540;;6213:5;6197:12;;:21;;;;;;;:::i;:::-;;;;;;;;6057:540;;;6249:19;6271:9;:15;6281:4;6271:15;;;;;;;;;;;;;;;;6249:37;;6318:5;6304:11;:19;6300:115;;;6375:4;6381:11;6394:5;6350:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6300:115;6567:5;6553:11;:19;6535:9;:15;6545:4;6535:15;;;;;;;;;;;;;;;:37;;;;6235:362;6057:540;6625:1;6611:16;;:2;:16;;;6607:425;;6790:5;6774:12;;:21;;;;;;;;;;;6607:425;;;7002:5;6985:9;:13;6995:2;6985:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6607:425;7062:2;7047:25;;7056:4;7047:25;;;7066:5;7047:25;;;;;;:::i;:::-;;;;;;;;5972:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:86::-;5215:7;5255:4;5248:5;5244:16;5233:27;;5180:86;;;:::o;5272:112::-;5355:22;5371:5;5355:22;:::i;:::-;5350:3;5343:35;5272:112;;:::o;5390:214::-;5479:4;5517:2;5506:9;5502:18;5494:26;;5530:67;5594:1;5583:9;5579:17;5570:6;5530:67;:::i;:::-;5390:214;;;;:::o;5610:329::-;5669:6;5718:2;5706:9;5697:7;5693:23;5689:32;5686:119;;;5724:79;;:::i;:::-;5686:119;5844:1;5869:53;5914:7;5905:6;5894:9;5890:22;5869:53;:::i;:::-;5859:63;;5815:117;5610:329;;;;:::o;5945:474::-;6013:6;6021;6070:2;6058:9;6049:7;6045:23;6041:32;6038:119;;;6076:79;;:::i;:::-;6038:119;6196:1;6221:53;6266:7;6257:6;6246:9;6242:22;6221:53;:::i;:::-;6211:63;;6167:117;6323:2;6349:53;6394:7;6385:6;6374:9;6370:22;6349:53;:::i;:::-;6339:63;;6294:118;5945:474;;;;;:::o;6425:180::-;6473:77;6470:1;6463:88;6570:4;6567:1;6560:15;6594:4;6591:1;6584:15;6611:320;6655:6;6692:1;6686:4;6682:12;6672:22;;6739:1;6733:4;6729:12;6760:18;6750:81;;6816:4;6808:6;6804:17;6794:27;;6750:81;6878:2;6870:6;6867:14;6847:18;6844:38;6841:84;;6897:18;;:::i;:::-;6841:84;6662:269;6611:320;;;:::o;6937:118::-;7024:24;7042:5;7024:24;:::i;:::-;7019:3;7012:37;6937:118;;:::o;7061:442::-;7210:4;7248:2;7237:9;7233:18;7225:26;;7261:71;7329:1;7318:9;7314:17;7305:6;7261:71;:::i;:::-;7342:72;7410:2;7399:9;7395:18;7386:6;7342:72;:::i;:::-;7424;7492:2;7481:9;7477:18;7468:6;7424:72;:::i;:::-;7061:442;;;;;;:::o;7509:222::-;7602:4;7640:2;7629:9;7625:18;7617:26;;7653:71;7721:1;7710:9;7706:17;7697:6;7653:71;:::i;:::-;7509:222;;;;:::o;7737:180::-;7785:77;7782:1;7775:88;7882:4;7879:1;7872:15;7906:4;7903:1;7896:15;7923:191;7963:3;7982:20;8000:1;7982:20;:::i;:::-;7977:25;;8016:20;8034:1;8016:20;:::i;:::-;8011:25;;8059:1;8056;8052:9;8045:16;;8080:3;8077:1;8074:10;8071:36;;;8087:18;;:::i;:::-;8071:36;7923:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "861000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "343",
								"name()": "infinite",
								"requestFunds()": "229",
								"supportsInterface(bytes4)": "777",
								"symbol()": "infinite",
								"totalSupply()": "2504",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 269,
									"end": 929,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 269,
									"end": 929,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 269,
									"end": 929,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 311,
									"end": 417,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 311,
									"end": 417,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 311,
									"end": 417,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 311,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 417,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 311,
									"end": 417,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 417,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 311,
									"end": 417,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 311,
									"end": 417,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 417,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 311,
									"end": 417,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "44696E676C654D794A696E676C6528544D290000000000000000000000000000"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "444D4A0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1644,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1631,
									"end": 1644,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1644,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1631,
									"end": 1644,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1644,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1631,
									"end": 1644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1644,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1631,
									"end": 1644,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1644,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1671,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1661,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1654,
									"end": 1671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 370,
									"end": 410,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 376,
									"end": 386,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 399,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 399,
									"end": 407,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 399,
									"end": 407,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 399,
									"end": 407,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 399,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 399,
									"end": 409,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 399,
									"end": 409,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 399,
									"end": 409,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 399,
									"end": 409,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 395,
									"end": 397,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 395,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 395,
									"end": 409,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 395,
									"end": 409,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 395,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 395,
									"end": 409,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 395,
									"end": 409,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 395,
									"end": 409,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 388,
									"end": 392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "3E8"
								},
								{
									"begin": 388,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 388,
									"end": 409,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 388,
									"end": 409,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 388,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 388,
									"end": 409,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 388,
									"end": 409,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 388,
									"end": 409,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 370,
									"end": 375,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 370,
									"end": 375,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 370,
									"end": 375,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 370,
									"end": 410,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 370,
									"end": 410,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 370,
									"end": 410,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 370,
									"end": 410,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 370,
									"end": 410,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 269,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 269,
									"end": 929,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 423,
									"end": 527,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 423,
									"end": 527,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 496,
									"end": 501,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 520,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 512,
									"end": 520,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 423,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 423,
									"end": 527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7422,
									"end": 7630,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7422,
									"end": 7630,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7511,
									"end": 7512,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7492,
									"end": 7513,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7492,
									"end": 7513,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7492,
									"end": 7499,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7492,
									"end": 7513,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7492,
									"end": 7513,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7492,
									"end": 7513,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7488,
									"end": 7579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7488,
									"end": 7579,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7565,
									"end": 7566,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7536,
									"end": 7568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7536,
									"end": 7568,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7488,
									"end": 7579,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7488,
									"end": 7579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7588,
									"end": 7623,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7604,
									"end": 7605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7608,
									"end": 7615,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7617,
									"end": 7622,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7588,
									"end": 7595,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7588,
									"end": 7595,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7588,
									"end": 7595,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7588,
									"end": 7623,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7588,
									"end": 7623,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7588,
									"end": 7623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7588,
									"end": 7623,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7588,
									"end": 7623,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7630,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7630,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7630,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5972,
									"end": 7079,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5972,
									"end": 7079,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6077,
									"end": 6078,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6061,
									"end": 6079,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6061,
									"end": 6079,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6061,
									"end": 6065,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6061,
									"end": 6079,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6061,
									"end": 6079,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6061,
									"end": 6079,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6057,
									"end": 6597,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6057,
									"end": 6597,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6213,
									"end": 6218,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6209,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6197,
									"end": 6209,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6197,
									"end": 6218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6057,
									"end": 6597,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6057,
									"end": 6597,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6057,
									"end": 6597,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6057,
									"end": 6597,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6268,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6271,
									"end": 6280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6281,
									"end": 6285,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6286,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6318,
									"end": 6323,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6304,
									"end": 6315,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6304,
									"end": 6323,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6300,
									"end": 6415,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6381,
									"end": 6392,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6394,
									"end": 6399,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6350,
									"end": 6400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6400,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6415,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6300,
									"end": 6415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6567,
									"end": 6572,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6564,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6572,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6544,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6545,
									"end": 6549,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6535,
									"end": 6550,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6572,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6572,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6572,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6535,
									"end": 6572,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6235,
									"end": 6597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6057,
									"end": 6597,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6057,
									"end": 6597,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6625,
									"end": 6626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6611,
									"end": 6627,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6611,
									"end": 6627,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6611,
									"end": 6613,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6611,
									"end": 6627,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6611,
									"end": 6627,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6611,
									"end": 6627,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6607,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6607,
									"end": 7032,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6790,
									"end": 6795,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6786,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6774,
									"end": 6786,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6795,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6607,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6607,
									"end": 7032,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6607,
									"end": 7032,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6607,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7007,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6994,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6995,
									"end": 6997,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 6998,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7007,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6607,
									"end": 7032,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6607,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7062,
									"end": 7064,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7056,
									"end": 7060,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7066,
									"end": 7071,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 7047,
									"end": 7072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7047,
									"end": 7072,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5972,
									"end": 7079,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5972,
									"end": 7079,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5972,
									"end": 7079,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5972,
									"end": 7079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7496,
									"end": 7503,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7540,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 7529,
									"end": 7534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7525,
									"end": 7541,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 7635,
									"end": 7658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 7695,
									"end": 7703,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 7679,
									"end": 7704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 7760,
									"end": 7826,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7750,
									"end": 7758,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7744,
									"end": 7748,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7723,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7553,
									"end": 7834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7880,
									"end": 7887,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7921,
									"end": 7922,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 7903,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 7955,
									"end": 7956,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 7937,
									"end": 7957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7992,
									"end": 7993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7985,
									"end": 7994,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 8032,
									"end": 8043,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 8014,
									"end": 8044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8193,
									"end": 8194,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8184,
									"end": 8191,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8180,
									"end": 8195,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 8177,
									"end": 8178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8174,
									"end": 8196,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8154,
									"end": 8155,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8147,
									"end": 8156,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8127,
									"end": 8210,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 8223,
									"end": 8241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7888,
									"end": 8250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7840,
									"end": 8250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8293,
									"end": 8300,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8333,
									"end": 8375,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8326,
									"end": 8331,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8322,
									"end": 8376,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8425,
									"end": 8432,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 8472,
									"end": 8477,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 8454,
									"end": 8478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 8595,
									"end": 8600,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 8577,
									"end": 8601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8572,
									"end": 8575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8565,
									"end": 8602,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8490,
									"end": 8608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8707,
									"end": 8711,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8745,
									"end": 8747,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8734,
									"end": 8743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 8826,
									"end": 8827,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8815,
									"end": 8824,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8811,
									"end": 8828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8802,
									"end": 8808,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 8758,
									"end": 8829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8882,
									"end": 8885,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 8919,
									"end": 8920,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 8901,
									"end": 8921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 8935,
									"end": 8955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8978,
									"end": 8979,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8975,
									"end": 8976,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8971,
									"end": 8980,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8999,
									"end": 9002,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 8996,
									"end": 8997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8993,
									"end": 9003,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 9006,
									"end": 9024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 9144,
									"end": 9149,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 9126,
									"end": 9150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9121,
									"end": 9124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9114,
									"end": 9151,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9039,
									"end": 9157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9312,
									"end": 9316,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9350,
									"end": 9352,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 9339,
									"end": 9348,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9335,
									"end": 9353,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 9431,
									"end": 9432,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9420,
									"end": 9429,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9416,
									"end": 9433,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9407,
									"end": 9413,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 9363,
									"end": 9434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 9512,
									"end": 9514,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9501,
									"end": 9510,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9497,
									"end": 9515,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9488,
									"end": 9494,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 9444,
									"end": 9516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 9594,
									"end": 9596,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 9583,
									"end": 9592,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9570,
									"end": 9576,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 9526,
									"end": 9598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9704,
									"end": 9708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9742,
									"end": 9744,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9731,
									"end": 9740,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9727,
									"end": 9745,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 9823,
									"end": 9824,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9821,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9808,
									"end": 9825,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9799,
									"end": 9805,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 9755,
									"end": 9826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 269,
									"end": 929,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 269,
									"end": 929,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 269,
									"end": 929,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 269,
									"end": 929,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 269,
									"end": 929,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 269,
									"end": 929,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 929,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 269,
									"end": 929,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 929,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b6ac5c85849a0c6ddc91ac1080ea7b7e56b7e3b2a689fb9b94543bc7e88c8e1e64736f6c63430008180033",
									".code": [
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "B026BA57"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 269,
											"end": 929,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 605,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 605,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 605,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1743,
											"end": 1832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1743,
											"end": 1832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3962,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3962,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3962,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2813,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2813,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4740,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4740,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4740,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 423,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 423,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 423,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 423,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 423,
											"end": 527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 423,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 423,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2968,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2968,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2968,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1945,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1945,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3279,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3279,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 533,
											"end": 599,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 533,
											"end": 599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 533,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 533,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 533,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 599,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 533,
											"end": 599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 533,
											"end": 599,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3515,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3515,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 605,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 605,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 682,
											"end": 686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 705,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 705,
											"end": 745,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 705,
											"end": 745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 705,
											"end": 716,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 705,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 705,
											"end": 745,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 705,
											"end": 745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 705,
											"end": 745,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 705,
											"end": 800,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 705,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 705,
											"end": 800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 705,
											"end": 800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 776,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "36372B0700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 761,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 800,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 761,
											"end": 800,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 761,
											"end": 772,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 761,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 800,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 761,
											"end": 800,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 761,
											"end": 800,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 705,
											"end": 800,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 705,
											"end": 800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 705,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 705,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 705,
											"end": 863,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 705,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 831,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "A219A02500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 816,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 816,
											"end": 863,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 816,
											"end": 863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 816,
											"end": 827,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 816,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 816,
											"end": 863,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 816,
											"end": 863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 816,
											"end": 863,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 705,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 705,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 705,
											"end": 920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 705,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 705,
											"end": 920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 705,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "B026BA5700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 879,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 879,
											"end": 920,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 879,
											"end": 920,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 879,
											"end": 890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 879,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 879,
											"end": 920,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 879,
											"end": 920,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 879,
											"end": 920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 705,
											"end": 920,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 705,
											"end": 920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 698,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1801,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1820,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1813,
											"end": 1825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1813,
											"end": 1825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4067,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4067,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4112,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4119,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4089,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4120,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4089,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4130,
											"end": 4141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2903,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2891,
											"end": 2903,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4861,
											"end": 4873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4873,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4861,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 4912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4919,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4883,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4920,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4883,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 4948,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4930,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4930,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4966,
											"end": 4977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 496,
											"end": 501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 512,
											"end": 520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2017,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2017,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3380,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3380,
											"end": 3392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3392,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3380,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3412,
											"end": 3417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3428,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3402,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3450,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3439,
											"end": 3450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 533,
											"end": 599,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 533,
											"end": 599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 584,
											"end": 592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 592,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 584,
											"end": 592,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3632,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3633,
											"end": 3638,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3647,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8783,
											"end": 8788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8797,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8804,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8806,
											"end": 8810,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8774,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8774,
											"end": 8811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8811,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8774,
											"end": 8811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10856,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10379,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10505,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 10515,
											"end": 10520,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10529,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10505,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10505,
											"end": 10530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10505,
											"end": 10530,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 10505,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10478,
											"end": 10530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10564,
											"end": 10581,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10544,
											"end": 10560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10581,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10540,
											"end": 10850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10620,
											"end": 10625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10601,
											"end": 10617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10601,
											"end": 10625,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10597,
											"end": 10727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10679,
											"end": 10686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10706,
											"end": 10711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10652,
											"end": 10712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10712,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10727,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10597,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10768,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10777,
											"end": 10782,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10793,
											"end": 10809,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10793,
											"end": 10817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10768,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10768,
											"end": 10825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10768,
											"end": 10825,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10768,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10850,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10540,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10468,
											"end": 10856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5657,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5357,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5436,
											"end": 5522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5481,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5511,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5522,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5436,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5549,
											"end": 5550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5551,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5535,
											"end": 5551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5551,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5535,
											"end": 5551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5551,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5531,
											"end": 5617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5574,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5617,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5531,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5634,
											"end": 5638,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5642,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5644,
											"end": 5649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5626,
											"end": 5650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5650,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5626,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9665,
											"end": 10097,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9665,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9796,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9777,
											"end": 9796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9777,
											"end": 9782,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9777,
											"end": 9796,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9777,
											"end": 9796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9777,
											"end": 9796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9773,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 9773,
											"end": 9862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 9849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 9819,
											"end": 9851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9851,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9773,
											"end": 9862,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 9773,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9894,
											"end": 9895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9875,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9875,
											"end": 9896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9875,
											"end": 9882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9875,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9875,
											"end": 9896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9875,
											"end": 9896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9871,
											"end": 9961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 9919,
											"end": 9950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9950,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9961,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9871,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9981,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9982,
											"end": 9987,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 9996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 9997,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10005,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10015,
											"end": 10091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10015,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10015,
											"end": 10091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10058,
											"end": 10063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10074,
											"end": 10079,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 10049,
											"end": 10080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10015,
											"end": 10091,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10015,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9665,
											"end": 10097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9665,
											"end": 10097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9665,
											"end": 10097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9665,
											"end": 10097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9665,
											"end": 10097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 7079,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5972,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6061,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6061,
											"end": 6079,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6061,
											"end": 6065,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6061,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6061,
											"end": 6079,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6061,
											"end": 6079,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6057,
											"end": 6597,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6209,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6197,
											"end": 6209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6197,
											"end": 6218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6057,
											"end": 6597,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6597,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6057,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6271,
											"end": 6280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6323,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6415,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6300,
											"end": 6415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6375,
											"end": 6379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6350,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6415,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6300,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6572,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6549,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6535,
											"end": 6550,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6572,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6235,
											"end": 6597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6597,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6057,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6627,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6611,
											"end": 6627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6627,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6611,
											"end": 6627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6627,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6607,
											"end": 7032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6774,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6607,
											"end": 7032,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6607,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 6997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6607,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7062,
											"end": 7064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7066,
											"end": 7071,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 7047,
											"end": 7072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7072,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 7079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 7079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 7079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 7079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4290,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4203,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4541,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4471,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4699,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4676,
											"end": 4683,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4672,
											"end": 4695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4700,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4703,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4848,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4794,
											"end": 4911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4952,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4976,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 5039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5078,
											"end": 5080,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5104,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5049,
											"end": 5167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5259,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5248,
											"end": 5253,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5260,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5233,
											"end": 5260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5233,
											"end": 5260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5384,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5272,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 5371,
											"end": 5376,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5355,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5377,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 5355,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5350,
											"end": 5353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5479,
											"end": 5483,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5519,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5506,
											"end": 5515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5502,
											"end": 5520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5494,
											"end": 5520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5494,
											"end": 5520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5592,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5570,
											"end": 5576,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5530,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5597,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5530,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5697,
											"end": 5704,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5693,
											"end": 5716,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5724,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 5724,
											"end": 5803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5803,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5724,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 5914,
											"end": 5921,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 5911,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 5903,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5912,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5869,
											"end": 5922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 5922,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 5869,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5922,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5922,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6419,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5945,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6019,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6058,
											"end": 6067,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6056,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6045,
											"end": 6068,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6073,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 6076,
											"end": 6155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6266,
											"end": 6273,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6263,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6255,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 6221,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6274,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6221,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6274,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6323,
											"end": 6325,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 6394,
											"end": 6401,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6383,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6392,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 6349,
											"end": 6402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 6349,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6339,
											"end": 6402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6339,
											"end": 6402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6419,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6419,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6550,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6551,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6560,
											"end": 6575,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6599,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6931,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6611,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6686,
											"end": 6690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6682,
											"end": 6694,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6740,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6733,
											"end": 6737,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6741,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6750,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6750,
											"end": 6831,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6808,
											"end": 6814,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6804,
											"end": 6821,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6750,
											"end": 6831,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6750,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6878,
											"end": 6880,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6876,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6867,
											"end": 6881,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6844,
											"end": 6882,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6841,
											"end": 6925,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 6897,
											"end": 6915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 6925,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6841,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6662,
											"end": 6931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6931,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7055,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 6937,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7042,
											"end": 7047,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 7024,
											"end": 7048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7048,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7024,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7019,
											"end": 7022,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7503,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 7061,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7210,
											"end": 7214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7250,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7237,
											"end": 7246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7233,
											"end": 7251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7225,
											"end": 7251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 7329,
											"end": 7330,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7305,
											"end": 7311,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 7261,
											"end": 7332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7332,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 7261,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 7410,
											"end": 7412,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7408,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7395,
											"end": 7413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7386,
											"end": 7392,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7342,
											"end": 7414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7414,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 7342,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7481,
											"end": 7490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7474,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7424,
											"end": 7496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7496,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 7424,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7503,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7503,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7731,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 7509,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7629,
											"end": 7638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7617,
											"end": 7643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7617,
											"end": 7643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7653,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7721,
											"end": 7722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7710,
											"end": 7719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7706,
											"end": 7723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7703,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7653,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 7653,
											"end": 7724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7653,
											"end": 7724,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7653,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7731,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7731,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7737,
											"end": 7917,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 7737,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7785,
											"end": 7862,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7863,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7879,
											"end": 7880,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 7910,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7896,
											"end": 7911,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7923,
											"end": 8114,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7923,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7963,
											"end": 7966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8000,
											"end": 8001,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7982,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7982,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7982,
											"end": 8002,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7982,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7977,
											"end": 8002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7977,
											"end": 8002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8016,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8034,
											"end": 8035,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8016,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 8016,
											"end": 8036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8016,
											"end": 8036,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8016,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8036,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8011,
											"end": 8036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8059,
											"end": 8060,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8056,
											"end": 8057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8052,
											"end": 8061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8080,
											"end": 8083,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8074,
											"end": 8084,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8071,
											"end": 8107,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8071,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8071,
											"end": 8107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 8087,
											"end": 8105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8071,
											"end": 8107,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8071,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7923,
											"end": 8114,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7923,
											"end": 8114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7923,
											"end": 8114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7923,
											"end": 8114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7923,
											"end": 8114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"ERC20.sol",
								"IERC165.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"ITokenCC.sol",
								"TokenCC.sol",
								"draft-IERC6093.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"requestFunds()": "b026ba57",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenCC.sol\":\"TokenCC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ERC20.sol\":{\"keccak256\":\"0xf37aae97663c8da743b4620730f24a533cfb7b3688f3f9aecec5343c7d3864d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97a9fe76e2eb51e21689d19e90525c9cd8eb0a961cbf344fa5fca9fbe2635872\",\"dweb:/ipfs/QmX8GC7siJQ22E7vEmD584MYfeAtSsaj3Y1g94ssjJmyoz\"]},\"IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xca4984fc531528047614e3e13820702a7719ed5221c8362d5b83207a1624d313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bcd4ff43608255d66dc5536e225ecfca21a7d0b243e8eba6c7ac083e8b1c117\",\"dweb:/ipfs/Qmag9KhKnWVQQhJhXTRMKKox7GXsyUT32F7gN5VbiSZzTn\"]},\"ITokenCC.sol\":{\"keccak256\":\"0xfaae0b8e2a4166fb92a7610e6d3dd73de8f68713c11df37afa87bc6eb539c5bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1cca9a4eb7f4c83b81c066a11914949da152ba05172caf45fc174dc2e1b66ff2\",\"dweb:/ipfs/QmUCeiTjkKbDbB1LuErjuuv5TqYXHoAvJX1F8BDrj5M7qF\"]},\"TokenCC.sol\":{\"keccak256\":\"0x91cf97dbe378c272843c6778226824df2bc329659cc1a346c4b72c0276799528\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a87a5f6a20bfab0b422233788de2a22889703a3c6642396b69d383e2f27fdb81\",\"dweb:/ipfs/Qmcnpeqo4uqPtKcUVCbPRqQTAKT7sZvXTLobFpqF2TaDuW\"]},\"draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 52,
								"contract": "TokenCC.sol:TokenCC",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 58,
								"contract": "TokenCC.sol:TokenCC",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 60,
								"contract": "TokenCC.sol:TokenCC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "TokenCC.sol:TokenCC",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 64,
								"contract": "TokenCC.sol:TokenCC",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> TokenCC.sol:22:5:\n   |\n22 |     function requestFunds() external override{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 599,
					"file": "TokenCC.sol",
					"start": 533
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "642:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "718:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "728:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:0"
									},
									"scope": 29,
									"src": "656:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "825:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "835:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "809:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:0"
									},
									"scope": 29,
									"src": "758:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "935:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "945:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "926:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:0"
									},
									"scope": 29,
									"src": "863:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 30,
							"src": "624:338:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:0"
				},
				"id": 0
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"ERC20": [
							544
						],
						"IERC20": [
							634
						],
						"IERC20Errors": [
							798
						],
						"IERC20Metadata": [
							660
						]
					},
					"id": 545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 635,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 32,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 634,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 35,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 661,
							"src": "168:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 34,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 660,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 37,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 30,
							"src": "221:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 36,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 29,
										"src": "229:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "draft-IERC6093.sol",
							"file": "./draft-IERC6093.sol",
							"id": 39,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 894,
							"src": "260:50:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 38,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 798,
										"src": "268:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 41,
										"name": "Context",
										"nameLocations": [
											"1097:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "1097:7:1"
									},
									"id": 42,
									"nodeType": "InheritanceSpecifier",
									"src": "1097:7:1"
								},
								{
									"baseName": {
										"id": 43,
										"name": "IERC20",
										"nameLocations": [
											"1106:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 634,
										"src": "1106:6:1"
									},
									"id": 44,
									"nodeType": "InheritanceSpecifier",
									"src": "1106:6:1"
								},
								{
									"baseName": {
										"id": 45,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1114:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 660,
										"src": "1114:14:1"
									},
									"id": 46,
									"nodeType": "InheritanceSpecifier",
									"src": "1114:14:1"
								},
								{
									"baseName": {
										"id": 47,
										"name": "IERC20Errors",
										"nameLocations": [
											"1130:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "1130:12:1"
									},
									"id": 48,
									"nodeType": "InheritanceSpecifier",
									"src": "1130:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 40,
								"nodeType": "StructuredDocumentation",
								"src": "312:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 544,
							"linearizedBaseContracts": [
								544,
								798,
								660,
								634,
								29
							],
							"name": "ERC20",
							"nameLocation": "1088:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1193:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1149:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 51,
										"keyName": "account",
										"keyNameLocation": "1165:7:1",
										"keyType": {
											"id": 49,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1157:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1149:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 50,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1176:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 58,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1281:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1209:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 57,
										"keyName": "account",
										"keyNameLocation": "1225:7:1",
										"keyType": {
											"id": 53,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1217:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1209:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 56,
											"keyName": "spender",
											"keyNameLocation": "1252:7:1",
											"keyType": {
												"id": 54,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1244:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1236:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 55,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1263:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 60,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1315:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1299:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 59,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1299:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 62,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1349:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1334:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 61,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1334:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 64,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1375:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "1360:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 63,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1360:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "1621:57:1",
										"statements": [
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1631:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 73,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "1639:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1631:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1631:13:1"
											},
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1654:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 77,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "1664:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1654:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1654:17:1"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1389:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 81,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1591:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1577:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 66,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1577:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1612:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1598:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 68,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1598:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:44:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1621:0:1"
									},
									"scope": 544,
									"src": "1565:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										647
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1803:29:1",
										"statements": [
											{
												"expression": {
													"id": 87,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 62,
													"src": "1820:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 86,
												"id": 88,
												"nodeType": "Return",
												"src": "1813:12:1"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1684:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1752:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1756:2:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1788:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1788:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1787:15:1"
									},
									"scope": 544,
									"src": "1743:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										653
									],
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "2007:31:1",
										"statements": [
											{
												"expression": {
													"id": 96,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "2024:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 95,
												"id": 97,
												"nodeType": "Return",
												"src": "2017:14:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1838:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1954:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:2:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1992:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 93,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:15:1"
									},
									"scope": 544,
									"src": "1945:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										659
									],
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2727:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2744:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 104,
												"id": 106,
												"nodeType": "Return",
												"src": "2737:9:1"
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2044:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2680:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:2:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2720:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 102,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2720:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2719:7:1"
									},
									"scope": 544,
									"src": "2671:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										583
									],
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2874:36:1",
										"statements": [
											{
												"expression": {
													"id": 114,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 60,
													"src": "2891:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 113,
												"id": 115,
												"nodeType": "Return",
												"src": "2884:19:1"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2759:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2822:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2833:2:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2865:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:9:1"
									},
									"scope": 544,
									"src": "2813:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										591
									],
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "3042:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 125,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "3059:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 127,
													"indexExpression": {
														"id": 126,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3069:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3059:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 128,
												"nodeType": "Return",
												"src": "3052:25:1"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2916:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2977:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2995:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2987:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:17:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3033:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:9:1"
									},
									"scope": 544,
									"src": "2968:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										601
									],
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "3354:103:1",
										"statements": [
											{
												"assignments": [
													141
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3372:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "3364:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 140,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3364:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3380:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3380:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3364:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "3412:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3419:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 148,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "3423:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "3402:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3402:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "3402:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3446:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 139,
												"id": 152,
												"nodeType": "Return",
												"src": "3439:11:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "3090:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3288:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3305:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3297:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3317:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3309:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3309:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3296:27:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3348:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3348:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3347:6:1"
									},
									"scope": 544,
									"src": "3279:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										611
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "3604:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 164,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3621:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 166,
														"indexExpression": {
															"id": 165,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "3633:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3621:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 168,
													"indexExpression": {
														"id": 167,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3640:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3621:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 163,
												"id": 169,
												"nodeType": "Return",
												"src": "3614:34:1"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "3463:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3524:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3542:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3534:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3557:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3549:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3533:32:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3595:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:9:1"
									},
									"scope": 544,
									"src": "3515:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "4041:107:1",
										"statements": [
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4059:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "4051:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 181,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4051:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 183,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4067:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4067:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4051:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 187,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "4098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "4105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "4114:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 186,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															435,
															495
														],
														"referencedDeclaration": 435,
														"src": "4089:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4089:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "4089:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4137:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 180,
												"id": 193,
												"nodeType": "Return",
												"src": "4130:11:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3661:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3971:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3987:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3979:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4004:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3996:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:32:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4035:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4035:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4034:6:1"
									},
									"scope": 544,
									"src": "3962:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										633
									],
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "4833:151:1",
										"statements": [
											{
												"assignments": [
													208
												],
												"declarations": [
													{
														"constant": false,
														"id": 208,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4851:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 226,
														"src": "4843:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4843:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 209,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4861:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4861:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "4899:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "4905:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "4914:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4883:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "4883:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "4940:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "4946:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 218,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "4930:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4930:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "4930:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4973:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 206,
												"id": 225,
												"nodeType": "Return",
												"src": "4966:11:1"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "4154:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4749:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4770:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4762:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4784:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4776:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4776:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4796:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4788:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4761:41:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4827:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4827:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:6:1"
									},
									"scope": 544,
									"src": "4740:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "5426:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 237,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "5440:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5456:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5448:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 238,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5448:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5448:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5440:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 251,
												"nodeType": "IfStatement",
												"src": "5436:86:1",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "5460:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5508:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5500:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 244,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5500:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5500:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 243,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "5481:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5481:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 249,
															"nodeType": "RevertStatement",
															"src": "5474:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 252,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "5535:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5549:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5541:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 253,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5541:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5541:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5535:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 266,
												"nodeType": "IfStatement",
												"src": "5531:86:1",
												"trueBody": {
													"id": 265,
													"nodeType": "Block",
													"src": "5553:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5603:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5595:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 259,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5595:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5595:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 258,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "5574:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5574:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 264,
															"nodeType": "RevertStatement",
															"src": "5567:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 268,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "5634:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "5640:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "5644:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 267,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "5626:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5626:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "5626:24:1"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "4990:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5366:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5384:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5376:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5376:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5398:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5390:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5410:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5402:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5402:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5375:41:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5426:0:1"
									},
									"scope": 544,
									"src": "5357:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6047:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 284,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "6061:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6077:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6069:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 285,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6069:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6069:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6061:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 321,
													"nodeType": "Block",
													"src": "6235:362:1",
													"statements": [
														{
															"assignments": [
																296
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 296,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6257:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 321,
																	"src": "6249:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 295,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6249:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 300,
															"initialValue": {
																"baseExpression": {
																	"id": 297,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "6271:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 299,
																"indexExpression": {
																	"id": 298,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "6281:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6271:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6249:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 301,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "6304:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 302,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "6318:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6304:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 311,
															"nodeType": "IfStatement",
															"src": "6300:115:1",
															"trueBody": {
																"id": 310,
																"nodeType": "Block",
																"src": "6325:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 305,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 277,
																					"src": "6375:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 306,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "6381:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 307,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "6394:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 304,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "6350:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6350:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 309,
																		"nodeType": "RevertStatement",
																		"src": "6343:57:1"
																	}
																]
															}
														},
														{
															"id": 320,
															"nodeType": "UncheckedBlock",
															"src": "6428:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 312,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "6535:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 314,
																			"indexExpression": {
																				"id": 313,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 277,
																				"src": "6545:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6535:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 315,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 296,
																				"src": "6553:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 316,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 281,
																				"src": "6567:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6553:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6535:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 319,
																	"nodeType": "ExpressionStatement",
																	"src": "6535:37:1"
																}
															]
														}
													]
												},
												"id": 322,
												"nodeType": "IfStatement",
												"src": "6057:540:1",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "6081:148:1",
													"statements": [
														{
															"expression": {
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 290,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "6197:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 291,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "6213:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6197:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "6197:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 323,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "6611:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6625:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6617:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 324,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6617:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6617:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6611:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "6826:206:1",
													"statements": [
														{
															"id": 341,
															"nodeType": "UncheckedBlock",
															"src": "6840:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 335,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "6985:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 337,
																			"indexExpression": {
																				"id": 336,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "6995:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6985:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 338,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "7002:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6985:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 340,
																	"nodeType": "ExpressionStatement",
																	"src": "6985:22:1"
																}
															]
														}
													]
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "6607:425:1",
												"trueBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "6629:191:1",
													"statements": [
														{
															"id": 333,
															"nodeType": "UncheckedBlock",
															"src": "6643:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 329,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 60,
																			"src": "6774:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "6790:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6774:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 332,
																	"nodeType": "ExpressionStatement",
																	"src": "6774:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "7056:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "7062:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "7066:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "7047:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7047:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "7042:30:1"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "5663:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5981:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5997:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "5989:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5989:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6011:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6003:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6023:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6015:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6015:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5988:41:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6047:0:1"
									},
									"scope": 544,
									"src": "5972:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "7478:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "7492:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7511:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7503:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7503:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7503:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7492:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "7488:91:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "7515:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7565:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7557:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7557:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7557:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "7536:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7536:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "7529:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7604:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7596:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7596:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7596:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "7608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "7617:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "7588:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7588:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "7588:35:1"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "7085:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7431:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7445:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "7437:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7437:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7462:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "7454:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7436:32:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7478:0:1"
									},
									"scope": 544,
									"src": "7422:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "8004:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 392,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "8018:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8037:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8029:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 393,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8029:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8029:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8018:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 406,
												"nodeType": "IfStatement",
												"src": "8014:89:1",
												"trueBody": {
													"id": 405,
													"nodeType": "Block",
													"src": "8041:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8089:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8081:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 399,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8081:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8081:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 398,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "8062:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8062:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 404,
															"nodeType": "RevertStatement",
															"src": "8055:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8120:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8137:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8129:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 409,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8129:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8129:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8141:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 407,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8112:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8112:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "8112:35:1"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "7636:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7957:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7971:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "7963:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7963:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7988:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "7980:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7962:32:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8004:0:1"
									},
									"scope": 544,
									"src": "7948:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "8764:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 428,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "8783:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "8790:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "8799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8806:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 427,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															435,
															495
														],
														"referencedDeclaration": 495,
														"src": "8774:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8774:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "8774:37:1"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "8160:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8699:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "8708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8731:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "8723:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8748:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "8740:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8707:47:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8764:0:1"
									},
									"scope": 544,
									"src": "8690:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "9763:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "9777:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9794:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9786:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 448,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9786:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9786:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9777:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "9773:89:1",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "9798:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 456,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9848:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9840:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 454,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9840:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9840:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 453,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "9819:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9819:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 459,
															"nodeType": "RevertStatement",
															"src": "9812:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 462,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "9875:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9894:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9886:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 463,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9886:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9886:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9875:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "9871:90:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "9898:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9947:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9939:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 469,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9939:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9939:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 468,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "9919:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9919:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "9912:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 477,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "9970:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 480,
															"indexExpression": {
																"id": 478,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "9982:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9970:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 481,
														"indexExpression": {
															"id": 479,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "9989:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9970:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 482,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "10000:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9970:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "9970:35:1"
											},
											{
												"condition": {
													"id": 485,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 444,
													"src": "10019:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "10015:76:1",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "10030:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 487,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "10058:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 488,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "10065:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 489,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "10074:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 486,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "10049:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10049:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "EmitStatement",
															"src": "10044:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "8824:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9674:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9706:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9698:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9723:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9715:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9735:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9730:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9730:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9682:63:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9763:0:1"
									},
									"scope": 544,
									"src": "9665:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "10468:388:1",
										"statements": [
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10486:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "10478:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10478:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 508,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "10515:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "10522:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 507,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "10505:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10505:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10478:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 512,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "10544:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10569:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10569:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 513,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10564:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10564:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10578:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10564:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10544:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "10540:310:1",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "10583:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 519,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "10601:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 520,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "10620:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10601:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 529,
															"nodeType": "IfStatement",
															"src": "10597:130:1",
															"trueBody": {
																"id": 528,
																"nodeType": "Block",
																"src": "10627:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 523,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "10679:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 524,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 506,
																					"src": "10688:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 525,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "10706:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 522,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 787,
																				"src": "10652:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10652:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 527,
																		"nodeType": "RevertStatement",
																		"src": "10645:67:1"
																	}
																]
															}
														},
														{
															"id": 539,
															"nodeType": "UncheckedBlock",
															"src": "10740:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 498,
																				"src": "10777:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 532,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "10784:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 533,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 506,
																					"src": "10793:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "10812:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10793:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10819:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 530,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				435,
																				495
																			],
																			"referencedDeclaration": 495,
																			"src": "10768:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10768:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 538,
																	"nodeType": "ExpressionStatement",
																	"src": "10768:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "10103:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10388:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10412:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "10404:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10427:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "10419:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10419:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10444:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "10436:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10403:47:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10468:0:1"
									},
									"scope": 544,
									"src": "10379:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 545,
							"src": "1070:9788:1",
							"usedErrors": [
								768,
								773,
								778,
								787,
								792,
								797
							],
							"usedEvents": [
								568,
								577
							]
						}
					],
					"src": "105:10754:1"
				},
				"id": 1
			},
			"IERC165.sol": {
				"ast": {
					"absolutePath": "IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							556
						]
					},
					"id": 557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 546,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 547,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:2",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 556,
							"linearizedBaseContracts": [
								556
							],
							"name": "IERC165",
							"nameLocation": "432:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 549,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:2"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "861:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:2"
									},
									"scope": 556,
									"src": "791:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 557,
							"src": "422:447:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:2"
				},
				"id": 2
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							634
						]
					},
					"id": 635,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 558,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 559,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 634,
							"linearizedBaseContracts": [
								634
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 568,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 577,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 634,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 634,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 634,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 634,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 634,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 630,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 634,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 635,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								568,
								577
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							634
						],
						"IERC20Metadata": [
							660
						]
					},
					"id": 661,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 636,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 661,
							"sourceUnit": 635,
							"src": "151:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 637,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 634,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 640,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 634,
										"src": "305:6:4"
									},
									"id": 641,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "189:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 660,
							"linearizedBaseContracts": [
								660,
								634
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 660,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 660,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 656,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 660,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 661,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								568,
								577
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"ITokenCC.sol": {
				"ast": {
					"absolutePath": "ITokenCC.sol",
					"exportedSymbols": {
						"IERC165": [
							556
						],
						"IERC20": [
							634
						],
						"IERC20Metadata": [
							660
						],
						"ITokenCC": [
							672
						]
					},
					"id": 673,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 662,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "171:24:5"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 663,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 673,
							"sourceUnit": 557,
							"src": "197:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 664,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 673,
							"sourceUnit": 661,
							"src": "221:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 665,
										"name": "IERC20Metadata",
										"nameLocations": [
											"275:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 660,
										"src": "275:14:5"
									},
									"id": 666,
									"nodeType": "InheritanceSpecifier",
									"src": "275:14:5"
								},
								{
									"baseName": {
										"id": 667,
										"name": "IERC165",
										"nameLocations": [
											"291:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 556,
										"src": "291:7:5"
									},
									"id": 668,
									"nodeType": "InheritanceSpecifier",
									"src": "291:7:5"
								}
							],
							"canonicalName": "ITokenCC",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 672,
							"linearizedBaseContracts": [
								672,
								556,
								660,
								634
							],
							"name": "ITokenCC",
							"nameLocation": "263:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b026ba57",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestFunds",
									"nameLocation": "1204:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1216:2:5"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:0:5"
									},
									"scope": 672,
									"src": "1195:33:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 673,
							"src": "253:1238:5",
							"usedErrors": [],
							"usedEvents": [
								568,
								577
							]
						}
					],
					"src": "171:1321:5"
				},
				"id": 5
			},
			"TokenCC.sol": {
				"ast": {
					"absolutePath": "TokenCC.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"ERC20": [
							544
						],
						"IERC165": [
							556
						],
						"IERC20": [
							634
						],
						"IERC20Errors": [
							798
						],
						"IERC20Metadata": [
							660
						],
						"ITokenCC": [
							672
						],
						"TokenCC": [
							756
						]
					},
					"id": 757,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "195:24:6"
						},
						{
							"absolutePath": "ITokenCC.sol",
							"file": "./ITokenCC.sol",
							"id": 675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 757,
							"sourceUnit": 673,
							"src": "221:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 757,
							"sourceUnit": 545,
							"src": "246:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 677,
										"name": "ITokenCC",
										"nameLocations": [
											"289:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 672,
										"src": "289:8:6"
									},
									"id": 678,
									"nodeType": "InheritanceSpecifier",
									"src": "289:8:6"
								},
								{
									"baseName": {
										"id": 679,
										"name": "ERC20",
										"nameLocations": [
											"299:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 544,
										"src": "299:5:6"
									},
									"id": 680,
									"nodeType": "InheritanceSpecifier",
									"src": "299:5:6"
								}
							],
							"canonicalName": "TokenCC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 756,
							"linearizedBaseContracts": [
								756,
								544,
								798,
								672,
								556,
								660,
								634,
								29
							],
							"name": "TokenCC",
							"nameLocation": "278:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "360:57:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 688,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "376:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "380:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "376:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "388:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "395:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 692,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			710
																		],
																		"referencedDeclaration": 710,
																		"src": "399:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
																			"typeString": "function () pure returns (uint8)"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "399:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "395:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "388:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 687,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "370:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "370:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "370:40:6"
											}
										]
									},
									"id": 699,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "44696e676c654d794a696e676c6528544d29",
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "331:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_905033d1531dcaf3d5e522ed014e0431e7216d59f7a2c1fbfb311d30047a202d",
														"typeString": "literal_string \"DingleMyJingle(TM)\""
													},
													"value": "DingleMyJingle(TM)"
												},
												{
													"hexValue": "444d4a",
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "353:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_df8c0fb193e1d1b37caf5dca375fe857f5a71a6d3034f3ab635dcb4d7eb7792d",
														"typeString": "literal_string \"DMJ\""
													},
													"value": "DMJ"
												}
											],
											"id": 685,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 682,
												"name": "ERC20",
												"nameLocations": [
													"325:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 544,
												"src": "325:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "325:34:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:6"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "360:0:6"
									},
									"scope": 756,
									"src": "311:106:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										108,
										659
									],
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "502:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "38",
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "519:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8_by_1",
														"typeString": "int_const 8"
													},
													"value": "8"
												},
												"functionReturnParameters": 706,
												"id": 708,
												"nodeType": "Return",
												"src": "512:8:6"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "432:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 703,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 701,
												"name": "ERC20",
												"nameLocations": [
													"464:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 544,
												"src": "464:5:6"
											},
											{
												"id": 702,
												"name": "IERC20Metadata",
												"nameLocations": [
													"471:14:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 660,
												"src": "471:14:6"
											}
										],
										"src": "455:31:6"
									},
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:2:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "496:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 704,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "496:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:7:6"
									},
									"scope": 756,
									"src": "423:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										671
									],
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "574:25:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 714,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "584:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "584:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "584:8:6"
											}
										]
									},
									"functionSelector": "b026ba57",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestFunds",
									"nameLocation": "542:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 712,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "566:8:6"
									},
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:2:6"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:0:6"
									},
									"scope": 756,
									"src": "533:66:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										555
									],
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "688:239:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 726,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "705:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 728,
																				"name": "IERC165",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "725:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$556_$",
																					"typeString": "type(contract IERC165)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$556_$",
																					"typeString": "type(contract IERC165)"
																				}
																			],
																			"id": 727,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "720:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "720:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$556",
																			"typeString": "type(contract IERC165)"
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "734:11:6",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "720:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "705:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 732,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "761:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 734,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 634,
																				"src": "781:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$634_$",
																					"typeString": "type(contract IERC20)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$634_$",
																					"typeString": "type(contract IERC20)"
																				}
																			],
																			"id": 733,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "776:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "776:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC20_$634",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "789:11:6",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "776:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "761:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "705:95:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 739,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "816:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 741,
																			"name": "IERC20Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 660,
																			"src": "836:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$660_$",
																				"typeString": "type(contract IERC20Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$660_$",
																				"typeString": "type(contract IERC20Metadata)"
																			}
																		],
																		"id": 740,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "831:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "831:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC20Metadata_$660",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "852:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "831:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "816:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "705:158:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 746,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "879:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 748,
																		"name": "ITokenCC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "899:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ITokenCC_$672_$",
																			"typeString": "type(contract ITokenCC)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_ITokenCC_$672_$",
																			"typeString": "type(contract ITokenCC)"
																		}
																	],
																	"id": 747,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "894:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "894:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_ITokenCC_$672",
																	"typeString": "type(contract ITokenCC)"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "909:11:6",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "894:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "879:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "705:215:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 725,
												"id": 753,
												"nodeType": "Return",
												"src": "698:222:6"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "614:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 722,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "664:8:6"
									},
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "639:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "632:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 719,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "632:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:20:6"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "682:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "682:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:6:6"
									},
									"scope": 756,
									"src": "605:322:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 757,
							"src": "269:660:6",
							"usedErrors": [
								768,
								773,
								778,
								787,
								792,
								797
							],
							"usedEvents": [
								568,
								577
							]
						}
					],
					"src": "195:734:6"
				},
				"id": 6
			},
			"draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							893
						],
						"IERC20Errors": [
							798
						],
						"IERC721Errors": [
							846
						]
					},
					"id": 894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 758,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 759,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:7",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 798,
							"linearizedBaseContracts": [
								798
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 768,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "654:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "670:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "687:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:7"
									},
									"src": "623:80:7"
								},
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 773,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "891:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:7"
									},
									"src": "866:41:7"
								},
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 778,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1104:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:7"
									},
									"src": "1077:45:7"
								},
								{
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:7",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 787,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1511:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1528:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1547:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:7"
									},
									"src": "1478:85:7"
								},
								{
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 792,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1775:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:7"
									},
									"src": "1748:45:7"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:7",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 797,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "2025:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:7"
									},
									"src": "1999:43:7"
								}
							],
							"scope": 894,
							"src": "280:1764:7",
							"usedErrors": [
								768,
								773,
								778,
								787,
								792,
								797
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 799,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:7",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 846,
							"linearizedBaseContracts": [
								846
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:7",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 804,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2469:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:7"
									},
									"src": "2444:40:7"
								},
								{
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:7",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 809,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "2656:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:7"
									},
									"src": "2627:46:7"
								},
								{
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:7",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 818,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "3000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "3016:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "3033:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:7"
									},
									"src": "2973:75:7"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 823,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3237:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:7"
									},
									"src": "3211:42:7"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 828,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "3451:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:7"
									},
									"src": "3423:46:7"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 835,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "3760:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "3778:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:7"
									},
									"src": "3727:68:7"
								},
								{
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 840,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "4008:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:7"
									},
									"src": "3980:46:7"
								},
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 845,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "4262:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:7"
									},
									"src": "4234:46:7"
								}
							],
							"scope": 894,
							"src": "2190:2092:7",
							"usedErrors": [
								804,
								809,
								818,
								823,
								828,
								835,
								840,
								845
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:7",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 893,
							"linearizedBaseContracts": [
								893
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 858,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "4860:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "4876:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "4893:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "4909:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:7"
									},
									"src": "4827:99:7"
								},
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 863,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "5116:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:7"
									},
									"src": "5089:43:7"
								},
								{
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 868,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5331:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:7"
									},
									"src": "5302:47:7"
								},
								{
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 875,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5651:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5669:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:7"
									},
									"src": "5616:68:7"
								},
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 880,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "5898:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:7"
									},
									"src": "5869:47:7"
								},
								{
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 885,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6153:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:7"
									},
									"src": "6124:47:7"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:7",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 892,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6494:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6513:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:7"
									},
									"src": "6462:73:7"
								}
							],
							"scope": 894,
							"src": "4430:2107:7",
							"usedErrors": [
								858,
								863,
								868,
								875,
								880,
								885,
								892
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:7"
				},
				"id": 7
			}
		}
	}
}